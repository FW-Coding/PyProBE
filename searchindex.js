Search.setIndex({"docnames": ["api/modules", "api/pyprobe", "api/pyprobe.analysis", "api/pyprobe.analysis.base", "api/pyprobe.analysis.base.degradation_mode_analysis_functions", "api/pyprobe.analysis.base.differentiation_functions", "api/pyprobe.analysis.cycling", "api/pyprobe.analysis.degradation_mode_analysis", "api/pyprobe.analysis.differentiation", "api/pyprobe.analysis.pulsing", "api/pyprobe.analysis.smoothing", "api/pyprobe.analysis.utils", "api/pyprobe.cell", "api/pyprobe.cyclers", "api/pyprobe.cyclers.basecycler", "api/pyprobe.cyclers.biologic", "api/pyprobe.cyclers.neware", "api/pyprobe.dashboard", "api/pyprobe.filters", "api/pyprobe.plot", "api/pyprobe.rawdata", "api/pyprobe.result", "api/pyprobe.typing", "api/pyprobe.units", "developer_guide/adding_a_cycler", "developer_guide/contributing_to_the_analysis_module", "developer_guide/dependency_guide", "developer_guide/developer_guide", "developer_guide/developer_installation", "examples/LEAN-differentiation", "examples/comparing-pyprobe-performance", "examples/examples", "examples/filtering-data", "examples/getting-started", "examples/ocv-fitting", "examples/providing-valid-inputs", "index", "user_guide/accessing_data", "user_guide/analysis", "user_guide/importing_data", "user_guide/input_data_guidance", "user_guide/installation", "user_guide/introduction", "user_guide/plotting", "user_guide/user_guide", "user_guide/writing_a_readme_file", "user_guide/writing_an_experiment_record"], "filenames": ["api/modules.rst", "api/pyprobe.rst", "api/pyprobe.analysis.rst", "api/pyprobe.analysis.base.rst", "api/pyprobe.analysis.base.degradation_mode_analysis_functions.rst", "api/pyprobe.analysis.base.differentiation_functions.rst", "api/pyprobe.analysis.cycling.rst", "api/pyprobe.analysis.degradation_mode_analysis.rst", "api/pyprobe.analysis.differentiation.rst", "api/pyprobe.analysis.pulsing.rst", "api/pyprobe.analysis.smoothing.rst", "api/pyprobe.analysis.utils.rst", "api/pyprobe.cell.rst", "api/pyprobe.cyclers.rst", "api/pyprobe.cyclers.basecycler.rst", "api/pyprobe.cyclers.biologic.rst", "api/pyprobe.cyclers.neware.rst", "api/pyprobe.dashboard.rst", "api/pyprobe.filters.rst", "api/pyprobe.plot.rst", "api/pyprobe.rawdata.rst", "api/pyprobe.result.rst", "api/pyprobe.typing.rst", "api/pyprobe.units.rst", "developer_guide/adding_a_cycler.rst", "developer_guide/contributing_to_the_analysis_module.rst", "developer_guide/dependency_guide.rst", "developer_guide/developer_guide.rst", "developer_guide/developer_installation.rst", "examples/LEAN-differentiation.ipynb", "examples/comparing-pyprobe-performance.ipynb", "examples/examples.rst", "examples/filtering-data.ipynb", "examples/getting-started.ipynb", "examples/ocv-fitting.ipynb", "examples/providing-valid-inputs.ipynb", "index.rst", "user_guide/accessing_data.rst", "user_guide/analysis.rst", "user_guide/importing_data.rst", "user_guide/input_data_guidance.rst", "user_guide/installation.rst", "user_guide/introduction.rst", "user_guide/plotting.rst", "user_guide/user_guide.rst", "user_guide/writing_a_readme_file.rst", "user_guide/writing_an_experiment_record.rst"], "titles": ["pyprobe", "pyprobe package", "pyprobe.analysis package", "pyprobe.analysis.base package", "pyprobe.analysis.base.degradation_mode_analysis_functions module", "pyprobe.analysis.base.differentiation_functions module", "pyprobe.analysis.cycling module", "pyprobe.analysis.degradation_mode_analysis module", "pyprobe.analysis.differentiation module", "pyprobe.analysis.pulsing module", "pyprobe.analysis.smoothing module", "pyprobe.analysis.utils module", "pyprobe.cell module", "pyprobe.cyclers package", "pyprobe.cyclers.basecycler module", "pyprobe.cyclers.biologic module", "pyprobe.cyclers.neware module", "pyprobe.dashboard module", "pyprobe.filters module", "pyprobe.plot module", "pyprobe.rawdata module", "pyprobe.result module", "pyprobe.typing module", "pyprobe.units module", "Adding a Cycler", "Contributing to the Analysis Module", "Dependency Guide", "Developer Guide", "Installation", "Differentiating with the LEAN algorithm", "Comparing PyProBE Performance", "Examples", "Filtering data", "Getting started with PyProBE", "OCV Fitting", "Providing Valid Inputs", "PyProBE documentation", "Accessing Data", "Analysis", "Importing Data", "Input Data Guidance", "Installation", "Introduction", "Plotting", "User Guide", "Writing a README file", "Writing an Experiment record"], "terms": {"packag": [0, 25, 28, 29, 41, 42], "subpackag": 0, "analysi": [0, 1, 26, 27, 29, 30, 31, 33, 34, 42, 44], "submodul": [0, 25], "cycler": [0, 1, 12, 27, 29, 30, 32, 33, 35, 39, 42, 44, 45], "cell": [0, 1, 4, 6, 7, 9, 25, 29, 30, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46], "modul": [0, 1, 2, 3, 13, 24, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 42, 43], "dashboard": [0, 1, 12, 33], "filter": [0, 1, 8, 20, 22, 26, 29, 30, 31, 33, 35, 38, 40, 42, 44, 45], "procedur": [0, 1, 6, 7, 8, 9, 11, 12, 14, 18, 22, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43, 45], "experi": [0, 1, 6, 7, 8, 9, 11, 12, 18, 22, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43, 44, 45], "cycl": [0, 1, 2, 7, 8, 11, 13, 14, 18, 21, 22, 29, 30, 32, 33, 35, 37, 38, 39, 40, 42, 43, 45], "step": [0, 1, 7, 8, 9, 11, 13, 14, 15, 16, 18, 20, 21, 22, 24, 25, 28, 30, 32, 34, 37, 39, 40, 41, 42, 45], "plot": [0, 1, 12, 21, 26, 29, 30, 32, 33, 34, 35, 38, 39, 42, 44, 46], "rawdata": [0, 1, 7, 8, 11, 18, 22, 25, 26, 31, 40, 43, 44], "result": [0, 1, 6, 7, 8, 9, 10, 11, 19, 20, 22, 25, 26, 33, 34, 35, 37, 38, 42, 43], "type": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 33, 35, 37, 38, 43], "filtertoexperimenttyp": [0, 1, 18, 22], "filtertocycletyp": [0, 1, 18, 22], "filtertosteptyp": [0, 1, 22], "pyproberawdatatyp": [0, 1, 8, 22, 25], "pyprobedatatyp": [0, 1, 22, 25], "unit": [0, 1, 14, 21, 24, 29, 33, 37, 40], "The": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 35, 37, 39, 40, 41, 42, 43, 45, 46], "base": [1, 2, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 27, 35, 37, 40, 43], "degradation_mode_analysi": [1, 2, 34, 35], "dma": [1, 2, 4, 7, 25, 34, 35, 38], "differenti": [1, 2, 5, 25, 31, 34], "puls": [1, 2, 29, 32, 42, 45], "smooth": [1, 2, 5, 8, 25], "util": [1, 2], "assemble_arrai": [1, 2, 11], "analysisvalid": [1, 2, 11, 25, 26], "basecycl": [1, 13, 15, 16, 24], "biolog": [1, 12, 13, 24, 39, 40], "newar": [1, 12, 13, 29, 30, 32, 33, 35, 39, 40, 45], "info": [1, 12, 18, 20, 21, 25, 29, 30, 32, 33, 34, 35, 37, 39, 42, 46], "make_cell_list": [1, 12, 39], "process_cycler_fil": [1, 12, 30, 33, 39], "add_procedur": [1, 12, 29, 30, 32, 33, 35, 39], "set_color_schem": [1, 12], "launch_dashboard": [1, 12, 33], "titl": [1, 18, 19], "steps_idx": [1, 18], "base_datafram": [1, 18, 20, 21, 30, 34, 35, 40], "column_definit": [1, 18, 20, 21, 25], "model_post_init": [1, 2, 9, 13, 14, 18], "charg": [1, 4, 6, 7, 14, 15, 16, 18, 20, 24, 29, 32, 33, 35, 37, 38, 40, 42, 43, 45], "discharg": [1, 4, 6, 7, 14, 15, 16, 18, 24, 29, 30, 32, 33, 35, 37, 38, 40, 45], "chargeordischarg": [1, 18, 37], "rest": [1, 2, 9, 18, 25, 29, 32, 37, 45], "constant_curr": [1, 18, 29, 32, 35], "constant_voltag": [1, 18, 32], "experiment_nam": [1, 18], "title_font_s": [1, 19], "axis_font_s": [1, 19], "default_layout": [1, 19], "show": [1, 19, 29, 30, 32, 33, 34, 35, 43], "add_lin": [1, 19, 29, 32, 33, 34, 35, 43], "add_colorscaled_lin": [1, 19], "make_colorscal": [1, 19], "add_colorbar": [1, 19], "x_rang": [1, 19], "y_rang": [1, 19], "y2_rang": [1, 19], "fig": [1, 19, 29, 30, 32, 34, 35], "zero_column": [1, 20], "capac": [1, 4, 6, 7, 13, 14, 15, 16, 20, 23, 24, 25, 29, 30, 32, 33, 34, 35, 39, 40], "set_soc": [1, 20, 35], "set_reference_capac": [1, 20], "data": [1, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 34, 35, 38, 41, 42, 43, 44, 45], "get": [1, 5, 21, 29, 30, 31, 35, 36, 37], "get_onli": [1, 21], "arrai": [1, 11, 19, 21, 25, 33, 37], "quantiti": [1, 14, 21, 23, 24, 43], "column_list": [1, 21], "define_column": [1, 21], "print_definit": [1, 21], "clean_copi": [1, 21, 25], "build": [1, 21, 42], "prefix_dict": [1, 23], "time_unit_dict": [1, 23], "unit_dict": [1, 23], "get_quantity_and_unit": [1, 23], "from_default_unit": [1, 23], "to_default_name_and_unit": [1, 23], "to_default_unit": [1, 23], "A": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 30, 32, 33, 35, 39, 40], "method": [2, 7, 8, 10, 14, 15, 18, 20, 24, 26, 27, 29, 30, 33, 34, 35, 37, 38, 39, 42], "degradation_mode_analysis_funct": [2, 3, 25], "ocv_curve_fit": [2, 3, 4], "calc_electrode_capac": [2, 3, 4, 25], "calc_full_cell_ocv": [2, 3, 4], "calculate_dma_paramet": [2, 3, 4], "average_ocv_curv": [2, 3, 4], "differentiation_funct": [2, 3], "get_x_sect": [2, 3, 5], "get_dx": [2, 3, 5], "get_dy_and_count": [2, 3, 5], "y_sampling_interv": [2, 3, 5], "calc_gradient_with_lean": [2, 3, 5], "smooth_gradi": [2, 3, 5], "input_data": [2, 6, 7, 8, 9, 10, 11, 25, 29, 33, 34, 35, 38], "summari": [2, 6, 33], "stoichiometry_limit": [2, 7, 25, 34, 38], "fitted_ocv": [2, 7, 25], "dma_result": [2, 7], "fit_ocv": [2, 7, 25, 34, 38], "quantify_degradation_mod": [2, 7, 25], "average_ocv": [2, 7, 35], "differentiate_fd": [2, 8, 25], "differentiate_lean": [2, 8, 29], "pulse_start": [2, 9], "v0": [2, 9, 41], "v1": [2, 9], "i1": [2, 9], "r0": [2, 9], "pulse_summari": [2, 9], "rt": [2, 9], "pulse_rest": [2, 9, 29], "spline_smooth": [2, 10], "required_column": [2, 11, 13, 14, 25, 35], "required_typ": [2, 11, 25], "validate_input_data_typ": [2, 11], "validate_required_column": [2, 11], "variabl": [2, 8, 10, 11, 18, 24, 25], "simpli": [3, 24, 25, 37, 42], "defin": [3, 14, 21, 24, 25, 29, 30, 32, 33, 34, 35, 39, 42], "calcul": [3, 4, 5, 6, 8, 14, 20, 25, 35], "function": [3, 4, 5, 8, 12, 13, 19, 24, 25, 32, 38, 39, 42], "contain": [4, 5, 7, 8, 9, 10, 12, 14, 18, 19, 20, 21, 25, 34, 37, 38, 39, 42, 45], "degrad": [4, 7, 25, 34, 38, 39], "mode": [4, 7, 25, 28, 34, 38], "soc": [4, 20, 25, 34, 35], "fitting_target_data": 4, "x_pe": [4, 7, 34, 38], "ocp_p": [4, 7, 34, 38], "x_ne": [4, 7, 34, 38], "ocp_n": [4, 7, 34, 38], "fitting_target": [4, 7, 34], "optim": [4, 7, 30], "x_guess": [4, 7, 34, 38], "fit": [4, 7, 31], "half": [4, 7, 34], "open": [4, 7, 32, 34, 42], "circuit": [4, 7, 34], "potenti": [4, 7], "curv": [4, 7, 29, 34, 35], "full": [4, 7, 34, 37], "ocv": [4, 7, 29, 31, 38], "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 25, 38], "ndarrai": [4, 5, 7, 9, 11, 19, 21, 25], "np": [4, 5, 7, 19, 21, 25, 29, 30, 32, 34], "float64": [4, 5, 7, 9, 11, 19, 21, 40], "cathod": [4, 7, 25], "stoichiometri": [4, 7, 25, 34], "ocp": [4, 7, 34], "anod": [4, 7, 25], "str": [4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25], "target": 4, "algorithm": [4, 31], "us": [4, 8, 10, 12, 19, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46], "initi": [4, 7, 14, 30, 32, 45], "guess": [4, 7], "return": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 37, 38, 39], "x_pe_lo": [4, 25, 34], "x_pe_hi": [4, 25, 34], "x_ne_lo": [4, 25, 34], "x_ne_hi": [4, 25, 34], "cell_capac": [4, 25], "electrod": [4, 7, 25, 34], "float": [4, 5, 8, 9, 10, 12, 18, 19, 20, 21, 25], "lowest": [4, 25], "highest": [4, 25], "lithium": [4, 25], "inventori": [4, 25], "tupl": [4, 5, 7, 11, 21, 23, 25], "pe_capac": [4, 25], "ne_capac": [4, 25], "li_inventori": [4, 25], "pe_stoich_limit": 4, "limit": [4, 7, 25, 34], "ne_stoich_limit": 4, "ani": [4, 9, 11, 14, 18, 23, 24, 25, 28, 33, 35, 37, 38, 39, 41, 42, 43], "dtype": [4, 9, 11], "soh": [4, 6, 7], "lam_p": [4, 7], "lam_n": [4, 7], "lli": [4, 7], "charge_soc": 4, "charge_ocv": 4, "charge_curr": 4, "discharge_soc": 4, "discharge_ocv": 4, "discharge_curr": 4, "averag": [4, 7, 35], "charge_capac": [4, 13, 14], "discharge_capac": [4, 13, 14], "an": [4, 11, 12, 14, 18, 19, 20, 22, 24, 25, 35, 36, 37, 38, 39, 42, 44, 45], "between": [4, 7], "experiment": [5, 8, 10, 18, 25, 37, 38, 39, 42, 45, 46], "x": [5, 8, 10, 19, 25, 29, 33, 34, 35, 43], "split": [5, 14, 32], "uniformli": [5, 29], "sampl": [5, 8, 29, 30, 32, 33, 35, 39], "section": [5, 8, 29, 32, 33, 38, 39, 40, 42], "valu": [5, 9, 20, 30, 39, 40, 45], "list": [5, 8, 9, 11, 12, 14, 15, 18, 19, 21, 24, 39, 41, 45, 46], "slice": 5, "repres": 5, "interv": [5, 8], "assum": [5, 8, 39], "space": [5, 8, 29], "rais": [5, 25], "valueerror": [5, 25], "If": [5, 24, 25, 29, 33, 35, 39, 42], "ar": [5, 11, 14, 24, 25, 26, 28, 29, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45], "y": [5, 8, 10, 19, 25, 29, 30, 33, 34, 35, 43], "dy": [5, 8], "bin": [5, 8, 28, 41], "midpoint": 5, "count": [5, 37], "size": [5, 8, 19], "delta": [5, 8, 20], "r": [5, 8, 24, 28, 32], "feng": [5, 8], "et": [5, 8], "al": [5, 8], "1": [5, 8, 23, 24, 25, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41, 45], "k": [5, 8, 23, 29], "gradient": [5, 8, 10, 25, 29], "i": [5, 6, 8, 10, 11, 14, 15, 18, 20, 21, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46], "int": [5, 8, 9, 12, 18, 20, 21], "integ": [5, 8], "multipl": [5, 8, 14, 24, 25, 26, 29, 33, 37, 44, 45, 46], "appli": [5, 8, 18, 20, 37], "paper": [5, 8], "either": [5, 8, 20, 25, 28, 37], "dydx": [5, 8, 25], "dxdy": [5, 8, 25, 29], "alpha": 5, "vector": [5, 34], "coeffici": [5, 8], "refer": [5, 8, 20, 39], "xune": [5, 8], "yu": [5, 8], "merla": [5, 8], "caihao": [5, 8], "weng": [5, 8], "minggao": [5, 8], "ouyang": [5, 8], "xiangm": [5, 8], "he": [5, 8], "bor": [5, 8], "yann": [5, 8], "liaw": [5, 8], "shriram": [5, 8], "santhanagopalan": [5, 8], "xuemin": [5, 8], "li": [5, 8], "ping": [5, 8], "liu": [5, 8], "languang": [5, 8], "lu": [5, 8], "xueb": [5, 8], "han": [5, 8], "dongsheng": [5, 8], "ren": [5, 8], "wang": [5, 8], "ruih": [5, 8], "changyong": [5, 8], "jin": [5, 8], "peng": [5, 8], "huang": [5, 8], "mengchao": [5, 8], "yi": [5, 8], "yan": [5, 8], "zhao": [5, 8], "yatish": [5, 8], "patel": [5, 8], "gregori": [5, 8], "offer": [5, 8], "reliabl": [5, 8], "approach": [5, 8, 30, 37, 42], "discret": [5, 8, 19], "batteri": [5, 6, 8, 9, 12, 14, 15, 16, 18, 24, 39, 42, 45], "diagnosi": [5, 8], "etransport": [5, 8], "3": [5, 8, 25, 28, 29, 30, 32, 33, 34, 35, 37, 40, 41, 45], "100051": [5, 8], "2020": [5, 8, 34], "url": [5, 8], "http": [5, 8, 28, 41], "www": [5, 8], "sciencedirect": [5, 8], "com": [5, 8, 28, 41], "scienc": [5, 8], "articl": [5, 8], "pii": [5, 8], "s2590116820300084": [5, 8], "doi": [5, 8], "org": [5, 8], "10": [5, 8, 29, 30, 33, 35, 45], "1016": [5, 8], "j": [5, 8], "etran": [5, 8], "class": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 31, 33, 36, 37, 38, 40, 42, 43, 46], "basemodel": [6, 7, 8, 9, 10, 11, 12, 14, 21, 24, 25, 26], "analys": [6, 8, 10, 25, 29, 33, 42, 45], "dchg_before_chg": 6, "true": [6, 19, 30], "state": 6, "health": 6, "bool": [6, 19], "whether": [6, 19], "come": [6, 35], "befor": [6, 9, 14, 18, 39], "loop": 6, "default": [6, 8, 10, 12, 14, 18, 23, 25, 29, 39], "object": [6, 7, 8, 9, 10, 12, 18, 19, 20, 21, 23, 25, 29, 32, 33, 34, 35, 38, 42, 43, 44], "none": [7, 9, 10, 11, 12, 14, 18, 19, 20, 21, 25], "input": [7, 11, 12, 14, 15, 16, 24, 25, 26, 30, 31, 34, 42, 44], "reference_stoichiometry_limit": 7, "quantifi": 7, "chang": [7, 14, 23, 24, 28, 40], "least": 7, "two": [7, 29, 32, 34, 39, 41], "begin": [7, 24, 29, 39], "life": [7, 39], "each": [7, 9, 18, 24, 25, 39, 45], "provid": [7, 8, 20, 25, 26, 31, 33, 38, 39, 45], "static": [7, 12, 14, 15, 19, 23], "discharge_filt": [7, 35], "charge_filt": [7, 35], "discharge_result": 7, "charge_result": 7, "raw": [8, 9, 10, 22, 25, 33], "finit": [8, 25], "differ": [8, 25, 33, 42], "light": [8, 25], "wrapper": [8, 25], "numpi": [8, 9, 21, 25, 29, 30, 32, 33, 34, 37], "name": [8, 10, 11, 12, 14, 18, 20, 21, 23, 24, 25, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 45, 46], "option": [8, 10, 12, 18, 20, 21, 25, 29], "column": [8, 10, 11, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 33, 35, 37, 38, 39, 44, 46], "smoothing_filt": 8, "0": [8, 23, 24, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 45], "0668": 8, "2417": 8, "383": 8, "longest": [8, 29], "noisi": [8, 10], "level": 8, "evalu": [8, 26], "lean": [8, 31], "describ": [8, 24, 25, 33, 39, 42, 45], "thi": [8, 12, 15, 18, 20, 21, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 45], "datapoint": 8, "evenli": 8, "can": [8, 25, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45], "frac": 8, "dx": 8, "depend": [8, 27, 28, 38], "argument": [8, 12, 18, 39, 43], "matrix": 8, "exampl": [8, 24, 25, 26, 28, 29, 30, 32, 34, 35, 36, 38, 39, 41, 45, 46], "includ": [8, 12, 21, 24, 25, 37, 39, 40, 42, 45, 46], "25": [8, 30], "5": [8, 25, 29, 30, 32, 33, 34, 35, 45], "point": [8, 19, 25, 30], "3830": 8, "1059": 8, "121": 8, "1745": 8, "1972": 8, "7": [8, 25, 29, 30, 32, 33, 34, 35], "constant": [8, 18, 32, 45], "rate": 8, "consid": [8, 45], "which": [8, 20, 24, 25, 26, 28, 29, 32, 35, 38, 39, 41, 42, 45, 46], "just": [8, 24, 45], "unifomli": 8, "altern": 8, "all": [8, 14, 24, 25, 26, 29, 30, 37, 39, 42], "_pulsing__context": 9, "creat": [9, 17, 18, 19, 21, 25, 28, 29, 30, 32, 33, 35, 38, 39, 41, 43, 46], "properti": [9, 11, 14, 15, 16, 18, 19, 20, 21, 24, 33], "datafram": [9, 14, 15, 18, 19, 20, 21, 24, 25, 26, 30, 33, 34, 35, 37], "find": 9, "start": [9, 24, 25, 29, 31, 32, 35, 40], "row": 9, "pl": [9, 14, 15, 16, 18, 20, 21, 23, 34, 35], "voltag": [9, 13, 14, 15, 16, 18, 23, 24, 29, 30, 32, 33, 34, 35, 37, 40, 43, 45], "immedi": [9, 33], "after": [9, 37], "current": [9, 13, 14, 15, 16, 18, 23, 24, 30, 32, 33, 35, 37, 38, 40, 45], "ohmic": 9, "resist": 9, "t": 9, "given": 9, "time": [9, 13, 14, 15, 16, 23, 24, 29, 30, 32, 33, 35, 40, 43, 45], "pulse_numb": 9, "number": [9, 12, 14, 15, 24, 25, 29, 30, 32, 33, 34, 35, 37, 39, 40, 45], "rest_numb": [9, 18], "smoothing_lambda": 10, "spline": 10, "respect": 10, "assembl": 11, "from": [11, 12, 14, 15, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 39, 40, 42, 45], "check": [11, 25, 26, 35], "requir": [11, 14, 24, 25, 28, 30, 33, 35, 38, 39, 40, 42, 46], "present": 11, "dict": [12, 14, 15, 16, 18, 20, 21, 24, 39], "dictionari": [12, 14, 18, 20, 21, 24, 25, 33, 37, 39, 42, 46], "inform": [12, 21, 23, 25, 39, 45, 46], "about": [12, 23, 35, 38, 39, 45, 46], "must": [12, 25, 28, 30, 33, 35, 38, 39, 41, 45], "field": [12, 25, 33, 38, 39], "other": [12, 25, 38, 42, 43], "mai": [12, 24, 25, 35, 38, 39], "channel": [12, 29, 30, 32, 33, 35, 39], "rig": 12, "have": [12, 24, 25, 37, 38, 39, 41], "been": [12, 33, 38, 42], "run": [12, 28, 30, 33, 39, 41, 42, 46], "empti": 12, "classmethod": [12, 21], "record_filepath": [12, 39], "worksheet_nam": [12, 39], "make": [12, 24, 28, 36, 42, 44], "record": [12, 39, 44], "test": [12, 18, 20, 21, 29, 30, 32, 33, 35, 39, 42, 45], "path": [12, 14, 15, 16, 24, 28, 39, 41], "xlsx": [12, 30, 33, 39, 40], "file": [12, 14, 15, 24, 30, 32, 33, 37, 42, 44, 46], "worksheet": 12, "read": [12, 14, 15, 24, 25, 30, 32, 38], "folder_path": [12, 29, 30, 32, 33, 35, 39], "input_filenam": [12, 30, 33, 39], "output_filenam": [12, 30, 33, 39], "filename_arg": 12, "convert": [12, 23, 24, 31, 37, 40, 44], "format": [12, 14, 15, 16, 24, 25, 30, 31, 35, 42, 44, 45], "produc": [12, 34, 42], "e": [12, 19, 24, 28, 37, 39, 40], "g": [12, 19, 24, 39], "folder": [12, 39], "filenam": [12, 14, 29, 30, 32, 33, 35, 39], "string": [12, 24, 37, 45], "gener": [12, 19, 34, 38, 39, 40, 42, 45], "These": [12, 25, 33, 35, 39, 42], "kei": [12, 33, 34, 39, 46], "procedure_nam": [12, 29, 30, 32, 33, 35, 39], "filename_input": [12, 39], "readme_nam": 12, "readm": [12, 32, 37, 39, 42, 44], "yaml": [12, 32, 37, 39, 45], "add": [12, 15, 19, 20, 24, 25, 33, 39, 43, 46], "parquet": [12, 29, 30, 32, 33, 35, 39], "give": [12, 25], "when": [12, 14, 21, 24, 25, 26, 29, 33, 35, 37, 38, 40, 46], "call": [12, 18, 20, 25, 28, 29, 30, 32, 33, 34, 35, 37, 38, 41], "d": [12, 25, 29], "ata": 12, "filename_funct": 12, "n_color": 12, "scheme": 12, "distinctipi": 12, "kwarg": 12, "set": [12, 24, 26, 28, 29, 30, 34, 35], "colour": 12, "color": [12, 19, 29, 32, 34, 35], "addit": [12, 25, 38, 46], "keyword": [12, 39], "hex": 12, "cell_list": [12, 39], "launch": [12, 33], "preprocess": [12, 44], "displai": [12, 33, 42, 43], "import": [13, 14, 15, 24, 26, 29, 30, 32, 33, 34, 35, 37, 40, 41, 44, 45], "input_data_path": [13, 14, 15, 16, 24], "common_suffix": [13, 14, 15, 16, 24], "column_name_pattern": [13, 14, 15, 16, 24], "column_dict": [13, 14, 15, 16, 24], "common_prefix": [13, 14, 15, 16], "read_fil": [13, 14, 15, 24], "get_dataframe_list": [13, 14], "get_imported_datafram": [13, 14, 15, 24], "pyprobe_datafram": [13, 14], "date": [13, 14, 15, 16, 24, 39, 40], "capacity_from_ch_dch": [13, 14], "event": [13, 14, 18, 30, 40], "search_column": [13, 14], "apply_step_correct": [13, 15], "load": [14, 15, 16, 24, 33], "process": [14, 15, 16, 24, 25, 30, 37, 39, 40, 41, 42], "part": [14, 33, 38], "index": [14, 16, 21, 24, 32, 37, 40, 42], "singl": [14, 21, 39, 40, 45], "regular": [14, 24], "express": [14, 16, 18, 23, 24, 26], "pattern": [14, 23, 24, 39], "match": [14, 23, 39], "map": 14, "expect": 14, "actual": 14, "_basecycler__context": 14, "post": [14, 42], "filepath": [14, 15], "lazyfram": [14, 15, 18, 20, 21, 26, 30, 35], "dataframe_list": [14, 15], "expr": [14, 15, 16, 18, 23], "identifi": [14, 15, 16, 35, 39, 40], "polar": [14, 16, 18, 20, 21, 27, 30, 34, 35, 37, 40], "repetit": 14, "thei": [14, 15, 24, 25, 33, 35, 39], "decreas": [14, 40], "increas": [14, 15, 40], "search_quant": 14, "name_pattern": [14, 23], "search": 14, "default_quant": 14, "_mb": [15, 24, 39], "q": [15, 24, 40], "n": [15, 23, 24, 28, 37, 40, 41], "": [15, 21, 23, 24, 29, 32, 33, 35, 36, 37, 40, 42, 43, 45, 46], "ecel": [15, 24, 40], "df": [15, 30], "correct": [15, 26, 35], "maximum": [15, 20], "previou": 15, "mb": 15, "follow": [15, 24, 25, 26, 28, 35, 39, 40, 41, 42, 45, 46], "so": [15, 25, 26, 29, 33, 35, 37], "monoton": 15, "chg": [16, 40], "cap": [16, 40], "dchg": [16, 40], "script": [17, 41], "streamlit": 17, "definit": [18, 20, 21, 25], "indic": [18, 21, 37], "_procedure__context": 18, "step_numb": 18, "condit": 18, "numer": [18, 37], "rang": [18, 19, 30, 34], "length": 18, "cycle_numb": 18, "charge_numb": 18, "discharge_numb": 18, "chargeordischarge_numb": 18, "constant_current_numb": 18, "constant_voltage_numb": 18, "_experiment__context": 18, "_cycle__context": 18, "_step__context": 18, "layout": [19, 30], "height": 19, "600": 19, "legend": 19, "font": 19, "14": [19, 30, 33, 34], "templat": 19, "18": [19, 34], "width": 19, "800": 19, "xaxi": 19, "tickfont": 19, "yaxi": [19, 30], "plotli": [19, 43], "go": [19, 24, 29, 34], "secondary_i": 19, "label": [19, 29, 30, 32, 34, 35], "dash": [19, 34], "solid": 19, "showlegend": 19, "line": [19, 29, 30, 32, 33, 34, 35, 42, 43], "axi": [19, 30], "secondari": 19, "style": 19, "dot": 19, "dashdot": 19, "color_bi": 19, "colormap": 19, "viridi": 19, "continu": [19, 42], "colorscal": 19, "across": [19, 20, 26], "color_bound": 19, "colorbar": 19, "bound": 19, "scale": 19, "buffer": 19, "figur": [19, 33, 34], "union": [20, 21, 22], "new_column_nam": 20, "new_column_definit": 20, "new": [20, 21, 24, 41, 42], "zero": [20, 23, 24, 29, 30, 32, 37], "first": [20, 21, 25, 29, 33, 37, 39, 43], "pass": [20, 25, 37, 38, 40, 45], "dure": 20, "reference_capac": 20, "reference_charg": 20, "remain": [20, 25], "further": [20, 25, 32, 33, 35, 38, 42], "rel": [20, 40], "upon": 20, "fix": 20, "perman": 20, "referenc": [20, 23], "ah": [20, 23, 29, 30, 32, 33, 34, 35, 39, 40], "user": [20, 25, 26, 35, 36, 37, 42, 46], "specifi": [20, 21, 25, 37], "column_nam": [21, 23], "one": [21, 24, 30, 35, 37, 41], "more": [21, 25, 30, 35, 37, 39], "filtering_column_nam": 21, "remov": [21, 30], "ad": [21, 27, 44], "store": [21, 23, 25, 32, 35, 39, 40, 42, 45], "print": [21, 26, 29, 30, 32, 33, 34, 35, 39], "copi": [21, 24, 25], "without": [21, 23, 25], "data_list": 21, "second": [21, 30, 34, 39, 43, 45], "hint": 22, "alias": [22, 25], "alia": 22, "convers": [23, 24, 29, 30, 40], "w": 23, "m": [23, 28, 41], "1000000": 23, "1000": [23, 34], "001": 23, "1e": 23, "09": 23, "p": 23, "12": [23, 28, 30, 33, 35, 41], "\u00b5": 23, "06": 23, "hr": [23, 29], "3600": 23, "min": 23, "60": 23, "h": 23, "v": [23, 29, 30, 32, 33, 34, 35, 37, 40, 43], "onc": [24, 30, 33, 38, 39, 40, 42], "pars": 24, "standard": [24, 25, 31, 35, 39, 40], "pyprob": [24, 25, 26, 28, 29, 31, 32, 34, 35, 37, 38, 41, 43, 44, 45, 46], "agnost": [24, 39], "sourc": [24, 28, 41], "howev": [24, 25, 29, 35, 42, 45], "done": [24, 25, 28, 39, 45], "within": [24, 35, 38], "most": [24, 25, 26, 29, 30, 32, 33, 34, 35, 45], "work": [24, 25, 26, 28, 35, 41, 44], "specif": [24, 35, 38, 42], "exist": [24, 25, 33, 35, 38], "modifi": 24, "sometim": 24, "overrid": 24, "guid": [24, 36, 38, 42], "through": [24, 26], "allow": [24, 25, 26, 29, 32, 38, 42, 45], "your": [24, 25, 26, 28, 29, 33, 38, 39, 41, 42, 45], "up": [24, 26, 30, 36, 39, 42], "should": [24, 25, 35, 41, 45], "inherit": [24, 25, 26, 35], "pydant": [24, 25, 27, 35], "you": [24, 25, 28, 29, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45], "declar": [24, 25], "unset": 24, "same": [24, 39, 45], "end": [24, 26], "exclud": 24, "extens": 24, "do": [24, 26, 39], "leav": 24, "distinguish": [24, 46], "per": 24, "convent": 24, "counterpart": 24, "onli": [24, 25, 26, 29, 30, 35, 39, 42, 46], "need": [24, 25, 30, 38, 42, 46], "deal": [24, 35], "below": [24, 25, 29, 40, 42, 45], "arg": [24, 25], "simplest": 24, "where": [24, 30, 39, 45], "content": 24, "under": 24, "head": 24, "its": [24, 25, 39], "recogn": 24, "some": [24, 25, 32, 33, 39], "like": [24, 26, 32, 35, 39, 40, 42], "larg": 24, "header": [24, 40], "extract": [24, 32], "form": [24, 25], "own": [24, 25, 28], "complet": [24, 34, 46], "It": [24, 25, 26, 28, 35, 37, 39, 41, 42, 45, 46], "veri": 24, "case": [24, 32], "In": [24, 25, 28, 29, 30, 32, 33, 34, 35, 38, 41], "modulobat": 24, "being": 24, "concaten": 24, "while": [24, 25, 42], "ensur": [24, 25, 35, 42], "doe": [24, 39], "reduc": 24, "anoth": 24, "adjust": [24, 30], "re": [24, 29], "them": [24, 32, 35, 36, 38, 39], "For": [24, 25, 33, 38, 39, 41, 43, 45], "perform": [25, 26, 31, 35, 38, 39, 42], "document": [25, 38, 43, 44, 45], "construct": [25, 26, 32], "wai": [25, 32, 39], "compat": [25, 42], "keep": [25, 46], "code": [25, 28, 41, 42], "clean": 25, "easi": [25, 42], "valid": [25, 26, 31, 38], "write": [25, 39, 42, 44], "direct": [25, 38], "interact": [25, 26, 42], "itself": 25, "ha": [25, 29, 33, 34, 35, 37, 39, 42, 43, 45], "help": [25, 35, 46], "here": 25, "lenient": 25, "2": [25, 29, 30, 32, 33, 34, 35, 37, 40, 42, 43, 45], "attribut": [25, 37, 38, 39, 42], "instanc": [25, 38, 39, 43], "save": [25, 39], "later": [25, 28, 41], "also": [25, 34, 35, 38, 42], "top": 25, "popul": [25, 39], "Then": [25, 37, 42, 43], "conduct": [25, 34], "insid": [25, 28], "alwai": [25, 38], "we": [25, 29, 30, 32, 33, 34, 35], "comput": [25, 29, 30, 38, 42], "stricter": [25, 35], "than": [25, 30, 35, 37], "assign": [25, 38, 39], "abov": [25, 29], "retriev": [25, 32, 37], "access": [25, 33, 42, 44], "built": [25, 30, 34, 39, 42, 46], "encourag": [25, 35, 42], "littl": [25, 42], "underli": 25, "possibl": [25, 37], "instead": [25, 29, 30, 45], "simpl": [25, 34, 37, 38, 42], "mathemat": 25, "underpin": 25, "readabl": [25, 42, 45], "portabl": [25, 42], "testabl": 25, "easili": 25, "replac": 25, "def": [25, 30, 34, 39], "self": 25, "neccessari": 25, "strict": 25, "enough": 25, "x_data": 25, "y_data": 25, "4": [25, 29, 30, 32, 33, 34, 35, 37, 43, 45], "gradient_titl": 25, "f": [25, 39], "gradient_data": 25, "elif": 25, "els": 25, "gradient_result": 25, "6": [25, 29, 30, 32, 33, 34, 35], "repositori": [25, 28, 41, 42], "often": 25, "tempt": 25, "manipul": [25, 26], "etc": [25, 37, 39], "alongsid": [25, 32, 33, 39, 42, 45], "By": 25, "accept": 25, "clearli": 25, "good": [25, 42], "back": 26, "storag": 26, "principl": [26, 42], "lazi": [26, 30], "critic": 26, "framework": 26, "throughout": [26, 39], "command": [26, 33, 41, 42], "chain": [26, 37], "togeth": 26, "execut": [26, 30], "final": [26, 30], "request": [26, 30], "might": [26, 40], "demonstr": [26, 30, 35], "compar": [26, 31], "mean": [26, 28, 32, 39], "automat": [26, 28, 40, 45, 46], "custom": 26, "model": [26, 39], "behind": [26, 35], "scene": [26, 35], "main": [26, 28, 32, 39, 42], "contribut": [26, 27, 36, 38, 42], "correctli": 26, "caus": 26, "error": [26, 35, 38], "found": 26, "instal": [27, 44], "setup": [27, 42, 46], "To": [28, 29, 36, 37, 38, 41], "python": [28, 32, 37, 41, 42], "11": [28, 30, 33, 35, 41], "recommend": [28, 41], "virtual": [28, 41], "environ": [28, 33, 41], "venv": [28, 41], "conda": [28, 41], "wih": 28, "develop": [28, 29, 36, 38, 42], "enter": [28, 41], "directori": [28, 39, 41], "wish": [28, 38, 41], "cd": [28, 41, 42], "clone": [28, 41], "local": [28, 33, 41, 42], "machin": [28, 41], "fork": 28, "git": [28, 41], "github": [28, 41], "imperialcollegelondon": [28, 41], "activ": [28, 41], "pip": [28, 41], "flag": 28, "edit": 28, "reflect": 28, "dev": 28, "txt": [28, 40], "pre": 28, "commit": 28, "hook": 28, "how": [29, 30, 35, 36], "dataset": [29, 32, 35, 39], "info_dictionari": [29, 30, 32, 33, 35, 39], "chemistri": [29, 30, 32, 33, 35, 39], "nmc622": [29, 30, 32, 33, 35, 39], "nomin": [29, 30, 32, 33, 35, 39], "04": [29, 30, 32, 33, 35, 39], "data_directori": [29, 30, 32, 33, 35], "sample_data": [29, 30, 32, 33, 35], "sample_data_newar": [29, 30, 32, 33, 35], "modulenotfounderror": [29, 30, 32, 33, 34, 35], "traceback": [29, 30, 32, 33, 34, 35], "recent": [29, 30, 32, 33, 34, 35], "last": [29, 30, 32, 33, 34, 35], "gt": [29, 30, 32, 33, 34, 35], "39": [29, 30, 32, 33, 34, 35], "No": [29, 30, 32, 33, 34, 35], "break": [29, 30, 32, 33, 35, 42, 45], "c": 29, "pseudo": [29, 38], "look": [29, 40], "final_cycl": 29, "nameerror": [29, 30, 32, 33, 34, 35], "discharge_differenti": 29, "charge_differenti": 29, "discharge_dqdv": 29, "charge_dqdv": 29, "blue": [29, 32, 35], "red": [29, 32, 34, 35], "On": 29, "fly": 29, "whichev": 29, "choos": 29, "mah": 29, "align": [29, 35, 42], "applic": 29, "behaviour": 29, "period": 29, "8": [29, 30, 33, 34, 35, 45], "dt": 29, "diff": 29, "benefit": 30, "against": [30, 35], "panda": 30, "popular": 30, "librari": [30, 42], "pd": 30, "timeit": 30, "matplotlib": [30, 34], "pyplot": [30, 34], "plt": [30, 34], "normal": [30, 33, 34, 35], "intens": 30, "9": [30, 33, 34, 35], "measur": [30, 40], "few": [30, 42], "With": 30, "wherea": 30, "manual": [30, 45], "measure_pyprob": 30, "repeat": [30, 40, 45], "cumulative_tim": 30, "start_tim": 30, "default_tim": 30, "measure_panda": 30, "read_parquet": 30, "isin": 30, "unique_cycl": 30, "uniqu": [30, 40], "unique_ev": 30, "make_boxplot": 30, "total_time_polar": 30, "total_time_panda": 30, "data_polar": 30, "shape": 30, "data_panda": 30, "boxplot": 30, "select": [30, 32, 37, 38], "subplot": 30, "ax1": 30, "ax2": 30, "figsiz": 30, "sharei": 30, "vert": 30, "patch_artist": 30, "set_titl": 30, "set_ylabel": 30, "set_vis": 30, "fals": 30, "right": 30, "hand": 30, "tight_layout": 30, "overhead": 30, "becaus": [30, 35], "implement": [30, 38], "delai": 30, "until": [30, 45], "made": 30, "overal": 30, "faster": 30, "backend": [30, 42], "abl": [30, 32, 39, 40], "voltage_pyprob": 30, "voltage_panda": 30, "assert": 30, "allclos": 30, "now": [30, 34, 35, 45], "extend": 30, "much": [30, 35], "scalabl": 30, "extended_df": 30, "concat": 30, "ignore_index": 30, "to_parquet": 30, "sample_data_neware_extend": 30, "len": 30, "25x": 30, "almost": [30, 42], "3x": 30, "_": [30, 39], "best": 30, "graph": 30, "explain": 30, "tree_format": 30, "One": [32, 34], "strength": 32, "quickli": [32, 33, 42], "natur": [32, 37, 42], "languag": [32, 37, 42], "power": 32, "avail": [32, 34, 38, 41], "entir": 32, "full_procedur": 32, "appear": 32, "three": 32, "separ": [32, 41, 45], "out": [32, 45], "initial_charg": 32, "break_in": 32, "purpl": [32, 35], "34": [32, 33, 34, 35], "cycle_3": 32, "third": [32, 42, 43], "down": [32, 42], "rest_0": 32, "rest_1": 32, "green": 32, "instruct": [32, 40, 45], "That": 32, "still": 32, "cc_discharg": 32, "cc_charg": 32, "cv_hold": 32, "cc": 32, "cv": 32, "hold": [32, 37], "uncom": 33, "13": 33, "15": [33, 34], "16": [33, 34], "17": [33, 34], "origin": 33, "outsid": [33, 35], "doc": [33, 42], "individu": [33, 37], "1d": [33, 37], "And": [33, 34], "current_ma": [33, 37], "ma": [33, 37], "too": [33, 45], "throughput": 33, "synthet": 34, "ag": 34, "chen": 34, "graphite_lgm50_ocp_chen2020": 34, "sto": 34, "chen2020": 34, "graphit": 34, "u_eq": 34, "9793": 34, "exp": 34, "3631": 34, "2482": 34, "0909": 34, "tanh": 34, "29": 34, "8538": 34, "1234": 34, "04478": 34, "9159": 34, "2769": 34, "0205": 34, "30": [34, 45], "4444": 34, "6103": 34, "nmc_lgm50_ocp_chen2020": 34, "nmc": 34, "8090": 34, "4875": 34, "0428": 34, "5138": 34, "5542": 34, "7326": 34, "7890": 34, "3117": 34, "5842": 34, "9308": 34, "3120": 34, "z": 34, "linspac": 34, "26": 34, "21": 34, "22": 34, "24": 34, "28": 34, "our": 34, "n_pt": 34, "posit": 34, "85": 34, "low": 34, "27": 34, "high": 34, "neg": 34, "03": 34, "xlabel": 34, "ylabel": 34, "put": 34, "necessari": 34, "ocv_result": 34, "dma_object": [34, 38], "fitted_curv": 34, "dqdv": 34, "dsocdv": 34, "prevent": 35, "unexpect": 35, "happen": 35, "notic": 35, "problem": 35, "written": [35, 42], "variant": [35, 37, 38], "therefor": [35, 37], "verifi": [35, 39], "never": 35, "know": 35, "whenev": 35, "miss": 35, "incorrect_datafram": 35, "see": [35, 36, 38, 39, 42, 43], "try": 35, "incorrect_data_dict": 35, "particular": [35, 42], "As": 35, "experiment_object": 35, "were": [35, 40], "would": 35, "pocv": [35, 38], "But": 35, "deeper": 35, "both": 35, "averaged_ocv_dma": 35, "pocv_cycl": 35, "told": 35, "clearer": 35, "updat": [35, 41], "introduct": [36, 44], "capabl": 36, "api": [36, 38], "explor": [36, 42], "learn": 36, "design": [37, 38, 42], "interfac": [37, 42], "notat": 37, "who": 37, "less": 37, "familiar": 37, "reset": 37, "everi": 37, "special": 37, "Or": 37, "directli": 37, "dimension": 37, "instanti": 38, "analysis_object": 38, "analysisclass": 38, "discharge_pocv": 38, "intern": 38, "incorrect": 38, "method_paramet": 38, "integr": 38, "detail": [39, 45, 46], "pair": 39, "fill": 39, "collect": 39, "undergo": 39, "rpt": [39, 42], "previous": 39, "root_fold": 39, "experiment_fold": 39, "cycler_fil": 39, "csv": [39, 40], "processed_cycler_fil": 39, "manufactur": 39, "support": [39, 44], "guidanc": [39, 42, 44], "output": 39, "modulo": 39, "bat": 39, "wildcard": 39, "cycler_file_1": 39, "cycler_file_2": 39, "cycler_file_": 39, "mpt": [39, 40], "correspond": [39, 40, 45], "processed_cycler_file_cycl": 39, "processed_cycler_file_rpt": 39, "speed": 39, "workflow": 39, "fastest": 39, "excel": [39, 46], "undergon": 39, "experiment_record": 39, "parametr": 39, "order": 39, "input_name_gener": 39, "output_name_gener": 39, "processed_cycler_file_": 39, "datatyp": 40, "datetim": 40, "timestamp": 40, "wa": 40, "taken": 40, "elaps": 40, "int64": 40, "program": [40, 42], "twice": 40, "amper": 40, "volt": 40, "hour": [40, 45], "Its": 40, "tabl": 40, "summaris": [40, 42], "ye": 40, "acquisit": 40, "auto": 40, "mark": 40, "tag": 41, "releas": [41, 42], "stabl": 41, "version": 41, "checkout": 41, "desir": 41, "fetch": 41, "jupyt": 41, "notebook": 41, "simplifi": 42, "four": 42, "core": 42, "eas": 42, "commonli": 42, "commun": 42, "those": 42, "complex": 42, "understand": 42, "shown": [42, 45], "acceler": 42, "fast": 42, "flexibl": 42, "visualis": 42, "graphic": 42, "gui": 42, "fair": 42, "practic": 42, "sit": 42, "maximis": 42, "intuit": 42, "human": [42, 45], "host": 42, "maintain": 42, "tool": 42, "guidelin": 42, "flowchart": 42, "metadata": 42, "stage": 42, "addition": 42, "branch": 42, "html": 42, "navig": 42, "web": 42, "browser": 42, "structur": 44, "batch": 44, "shortcut": 44, "enabl": 45, "syntax": 45, "pybamm": 45, "seper": 45, "descript": 45, "4ma": 45, "2v": 45, "drop": 45, "04a": 45, "reach": 45, "3v": 45, "20ma": 45, "4mah": 45, "minut": 45, "futur": 45, "plan": 45, "consum": 45, "purpos": 45, "particularli": 45, "cumbersom": 45, "total": 45, "track": 46, "relat": 46, "customiz": 46, "well": 46}, "objects": {"": [[1, 0, 0, "-", "pyprobe"]], "pyprobe": [[2, 0, 0, "-", "analysis"], [12, 0, 0, "-", "cell"], [13, 0, 0, "-", "cyclers"], [17, 0, 0, "-", "dashboard"], [18, 0, 0, "-", "filters"], [19, 0, 0, "-", "plot"], [20, 0, 0, "-", "rawdata"], [21, 0, 0, "-", "result"], [22, 0, 0, "-", "typing"], [23, 0, 0, "-", "units"]], "pyprobe.analysis": [[3, 0, 0, "-", "base"], [6, 0, 0, "-", "cycling"], [7, 0, 0, "-", "degradation_mode_analysis"], [8, 0, 0, "-", "differentiation"], [9, 0, 0, "-", "pulsing"], [10, 0, 0, "-", "smoothing"], [11, 0, 0, "-", "utils"]], "pyprobe.analysis.base": [[4, 0, 0, "-", "degradation_mode_analysis_functions"], [5, 0, 0, "-", "differentiation_functions"]], "pyprobe.analysis.base.degradation_mode_analysis_functions": [[4, 1, 1, "", "average_OCV_curves"], [4, 1, 1, "", "calc_electrode_capacities"], [4, 1, 1, "", "calc_full_cell_OCV"], [4, 1, 1, "", "calculate_dma_parameters"], [4, 1, 1, "", "ocv_curve_fit"]], "pyprobe.analysis.base.differentiation_functions": [[5, 1, 1, "", "calc_gradient_with_LEAN"], [5, 1, 1, "", "get_dx"], [5, 1, 1, "", "get_dy_and_counts"], [5, 1, 1, "", "get_x_sections"], [5, 1, 1, "", "smooth_gradient"], [5, 1, 1, "", "y_sampling_interval"]], "pyprobe.analysis.cycling": [[6, 2, 1, "", "Cycling"]], "pyprobe.analysis.cycling.Cycling": [[6, 3, 1, "", "input_data"], [6, 4, 1, "", "summary"]], "pyprobe.analysis.degradation_mode_analysis": [[7, 2, 1, "", "DMA"]], "pyprobe.analysis.degradation_mode_analysis.DMA": [[7, 4, 1, "", "average_ocvs"], [7, 3, 1, "", "dma_result"], [7, 4, 1, "", "fit_ocv"], [7, 3, 1, "", "fitted_OCV"], [7, 3, 1, "", "input_data"], [7, 4, 1, "", "quantify_degradation_modes"], [7, 3, 1, "", "stoichiometry_limits"]], "pyprobe.analysis.differentiation": [[8, 2, 1, "", "Differentiation"]], "pyprobe.analysis.differentiation.Differentiation": [[8, 4, 1, "", "differentiate_FD"], [8, 4, 1, "", "differentiate_LEAN"], [8, 3, 1, "", "input_data"]], "pyprobe.analysis.pulsing": [[9, 2, 1, "", "Pulsing"]], "pyprobe.analysis.pulsing.Pulsing": [[9, 5, 1, "", "I1"], [9, 5, 1, "", "R0"], [9, 4, 1, "", "Rt"], [9, 5, 1, "", "V0"], [9, 5, 1, "", "V1"], [9, 3, 1, "", "input_data"], [9, 4, 1, "", "model_post_init"], [9, 4, 1, "", "pulse"], [9, 4, 1, "", "pulse_rest"], [9, 5, 1, "", "pulse_starts"], [9, 5, 1, "", "pulse_summary"], [9, 3, 1, "", "pulses"], [9, 3, 1, "", "rests"]], "pyprobe.analysis.smoothing": [[10, 2, 1, "", "Smoothing"]], "pyprobe.analysis.smoothing.Smoothing": [[10, 3, 1, "", "input_data"], [10, 4, 1, "", "spline_smoothing"]], "pyprobe.analysis.utils": [[11, 2, 1, "", "AnalysisValidator"], [11, 1, 1, "", "assemble_array"]], "pyprobe.analysis.utils.AnalysisValidator": [[11, 3, 1, "", "input_data"], [11, 3, 1, "", "required_columns"], [11, 3, 1, "", "required_type"], [11, 4, 1, "", "validate_input_data_type"], [11, 4, 1, "", "validate_required_columns"], [11, 5, 1, "", "variables"]], "pyprobe.cell": [[12, 2, 1, "", "Cell"]], "pyprobe.cell.Cell": [[12, 4, 1, "", "add_procedure"], [12, 3, 1, "", "info"], [12, 4, 1, "", "launch_dashboard"], [12, 4, 1, "", "make_cell_list"], [12, 3, 1, "", "procedure"], [12, 4, 1, "", "process_cycler_file"], [12, 4, 1, "", "set_color_scheme"]], "pyprobe.cyclers": [[14, 0, 0, "-", "basecycler"], [15, 0, 0, "-", "biologic"], [16, 0, 0, "-", "neware"]], "pyprobe.cyclers.basecycler": [[14, 2, 1, "", "BaseCycler"]], "pyprobe.cyclers.basecycler.BaseCycler": [[14, 5, 1, "", "capacity"], [14, 5, 1, "", "capacity_from_ch_dch"], [14, 5, 1, "", "charge_capacity"], [14, 3, 1, "", "column_dict"], [14, 3, 1, "", "column_name_pattern"], [14, 3, 1, "", "common_prefix"], [14, 3, 1, "", "common_suffix"], [14, 5, 1, "", "current"], [14, 5, 1, "", "cycle"], [14, 5, 1, "", "date"], [14, 5, 1, "", "discharge_capacity"], [14, 5, 1, "", "event"], [14, 4, 1, "", "get_dataframe_list"], [14, 4, 1, "", "get_imported_dataframe"], [14, 3, 1, "", "input_data_path"], [14, 4, 1, "", "model_post_init"], [14, 5, 1, "", "pyprobe_dataframe"], [14, 4, 1, "", "read_file"], [14, 5, 1, "", "required_columns"], [14, 4, 1, "", "search_columns"], [14, 5, 1, "", "step"], [14, 5, 1, "", "time"], [14, 5, 1, "", "voltage"]], "pyprobe.cyclers.biologic": [[15, 2, 1, "", "Biologic"]], "pyprobe.cyclers.biologic.Biologic": [[15, 4, 1, "", "apply_step_correction"], [15, 3, 1, "", "column_dict"], [15, 3, 1, "", "column_name_pattern"], [15, 3, 1, "", "common_suffix"], [15, 4, 1, "", "get_imported_dataframe"], [15, 3, 1, "", "input_data_path"], [15, 4, 1, "", "read_file"], [15, 5, 1, "", "step"]], "pyprobe.cyclers.neware": [[16, 2, 1, "", "Neware"]], "pyprobe.cyclers.neware.Neware": [[16, 3, 1, "", "column_dict"], [16, 3, 1, "", "column_name_pattern"], [16, 3, 1, "", "common_suffix"], [16, 3, 1, "", "input_data_path"], [16, 5, 1, "", "time"]], "pyprobe.filters": [[18, 2, 1, "", "Cycle"], [18, 2, 1, "", "Experiment"], [18, 2, 1, "", "Procedure"], [18, 2, 1, "", "Step"]], "pyprobe.filters.Cycle": [[18, 3, 1, "", "base_dataframe"], [18, 4, 1, "", "charge"], [18, 4, 1, "", "chargeordischarge"], [18, 3, 1, "", "column_definitions"], [18, 4, 1, "", "constant_current"], [18, 4, 1, "", "constant_voltage"], [18, 4, 1, "", "discharge"], [18, 3, 1, "", "info"], [18, 4, 1, "", "model_post_init"], [18, 4, 1, "", "rest"], [18, 4, 1, "", "step"]], "pyprobe.filters.Experiment": [[18, 3, 1, "", "base_dataframe"], [18, 4, 1, "", "charge"], [18, 4, 1, "", "chargeordischarge"], [18, 3, 1, "", "column_definitions"], [18, 4, 1, "", "constant_current"], [18, 4, 1, "", "constant_voltage"], [18, 4, 1, "", "cycle"], [18, 4, 1, "", "discharge"], [18, 3, 1, "", "info"], [18, 4, 1, "", "model_post_init"], [18, 4, 1, "", "rest"], [18, 4, 1, "", "step"]], "pyprobe.filters.Procedure": [[18, 3, 1, "", "base_dataframe"], [18, 4, 1, "", "charge"], [18, 4, 1, "", "chargeordischarge"], [18, 3, 1, "", "column_definitions"], [18, 4, 1, "", "constant_current"], [18, 4, 1, "", "constant_voltage"], [18, 4, 1, "", "cycle"], [18, 4, 1, "", "discharge"], [18, 4, 1, "", "experiment"], [18, 5, 1, "", "experiment_names"], [18, 3, 1, "", "info"], [18, 4, 1, "", "model_post_init"], [18, 4, 1, "", "rest"], [18, 4, 1, "", "step"], [18, 3, 1, "", "steps_idx"], [18, 3, 1, "", "titles"]], "pyprobe.filters.Step": [[18, 3, 1, "", "base_dataframe"], [18, 3, 1, "", "column_definitions"], [18, 4, 1, "", "constant_current"], [18, 4, 1, "", "constant_voltage"], [18, 3, 1, "", "info"], [18, 4, 1, "", "model_post_init"], [18, 4, 1, "", "step"]], "pyprobe.plot": [[19, 2, 1, "", "Plot"]], "pyprobe.plot.Plot": [[19, 4, 1, "", "add_colorbar"], [19, 4, 1, "", "add_colorscaled_line"], [19, 4, 1, "", "add_line"], [19, 3, 1, "", "axis_font_size"], [19, 3, 1, "", "default_layout"], [19, 5, 1, "", "fig"], [19, 4, 1, "", "make_colorscale"], [19, 4, 1, "", "show"], [19, 3, 1, "", "title_font_size"], [19, 5, 1, "", "x_range"], [19, 5, 1, "", "y2_range"], [19, 5, 1, "", "y_range"]], "pyprobe.rawdata": [[20, 2, 1, "", "RawData"]], "pyprobe.rawdata.RawData": [[20, 3, 1, "", "base_dataframe"], [20, 5, 1, "", "capacity"], [20, 3, 1, "", "column_definitions"], [20, 3, 1, "", "info"], [20, 4, 1, "", "set_SOC"], [20, 4, 1, "", "set_reference_capacity"], [20, 4, 1, "", "zero_column"]], "pyprobe.result": [[21, 2, 1, "", "Result"]], "pyprobe.result.Result": [[21, 4, 1, "", "array"], [21, 3, 1, "", "base_dataframe"], [21, 4, 1, "", "build"], [21, 4, 1, "", "clean_copy"], [21, 3, 1, "", "column_definitions"], [21, 5, 1, "", "column_list"], [21, 5, 1, "", "data"], [21, 4, 1, "", "define_column"], [21, 4, 1, "", "get"], [21, 4, 1, "", "get_only"], [21, 3, 1, "", "info"], [21, 4, 1, "", "print_definitions"], [21, 5, 1, "", "quantities"]], "pyprobe.typing": [[22, 6, 1, "", "FilterToCycleType"], [22, 6, 1, "", "FilterToExperimentType"], [22, 6, 1, "", "FilterToStepType"], [22, 6, 1, "", "PyProBEDataType"], [22, 6, 1, "", "PyProBERawDataType"]], "pyprobe.units": [[23, 2, 1, "", "Units"]], "pyprobe.units.Units": [[23, 4, 1, "", "from_default_unit"], [23, 4, 1, "", "get_quantity_and_unit"], [23, 3, 1, "", "prefix_dict"], [23, 3, 1, "", "time_unit_dict"], [23, 4, 1, "", "to_default_name_and_unit"], [23, 4, 1, "", "to_default_unit"], [23, 3, 1, "", "unit_dict"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"]}, "titleterms": {"pyprob": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 33, 36, 39, 40, 42], "packag": [1, 2, 3, 13], "subpackag": [1, 2], "submodul": [1, 2, 3, 13], "analysi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 35, 38], "base": [3, 4, 5, 25], "degradation_mode_analysis_funct": 4, "modul": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "differentiation_funct": 5, "cycl": 6, "degradation_mode_analysi": 7, "differenti": [8, 29], "puls": 9, "smooth": 10, "util": 11, "cell": [12, 39], "cycler": [13, 14, 15, 16, 24, 40], "basecycl": 14, "biolog": 15, "newar": 16, "dashboard": 17, "filter": [18, 32, 37], "plot": [19, 43], "rawdata": [20, 35, 37], "result": 21, "type": 22, "unit": 23, "ad": [24, 39], "contribut": 25, "setup": 25, "method": 25, "depend": 26, "guid": [26, 27, 44], "polar": 26, "pydant": 26, "develop": 27, "instal": [28, 41], "lean": 29, "algorithm": 29, "compar": 30, "perform": 30, "exampl": 31, "data": [32, 33, 37, 39, 40], "get": 33, "start": 33, "convert": [33, 39], "standard": 33, "format": [33, 39, 40], "ocv": 34, "fit": 34, "provid": 35, "valid": 35, "input": [35, 39, 40], "class": 35, "document": [36, 42], "access": 37, "object": [37, 39], "import": 39, "make": 39, "work": 39, "multipl": 39, "file": [39, 45], "batch": 39, "preprocess": 39, "guidanc": 40, "support": 40, "column": 40, "introduct": 42, "structur": 42, "thi": 42, "user": 44, "write": [45, 46], "readm": 45, "shortcut": 45, "an": 46, "experi": 46, "record": 46}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"pyprobe": [[0, "pyprobe"]], "pyprobe package": [[1, "module-pyprobe"]], "Subpackages": [[1, "subpackages"], [2, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [13, "submodules"]], "pyprobe.analysis package": [[2, "module-pyprobe.analysis"]], "pyprobe.analysis.base package": [[3, "module-pyprobe.analysis.base"]], "pyprobe.analysis.base.degradation_mode_analysis_functions module": [[4, "module-pyprobe.analysis.base.degradation_mode_analysis_functions"]], "pyprobe.analysis.base.differentiation_functions module": [[5, "module-pyprobe.analysis.base.differentiation_functions"]], "pyprobe.analysis.cycling module": [[6, "module-pyprobe.analysis.cycling"]], "pyprobe.analysis.degradation_mode_analysis module": [[7, "module-pyprobe.analysis.degradation_mode_analysis"]], "pyprobe.analysis.differentiation module": [[8, "module-pyprobe.analysis.differentiation"]], "pyprobe.analysis.pulsing module": [[9, "module-pyprobe.analysis.pulsing"]], "pyprobe.analysis.smoothing module": [[10, "module-pyprobe.analysis.smoothing"]], "pyprobe.analysis.utils module": [[11, "module-pyprobe.analysis.utils"]], "pyprobe.cell module": [[12, "module-pyprobe.cell"]], "pyprobe.cyclers package": [[13, "module-pyprobe.cyclers"]], "pyprobe.cyclers.basecycler module": [[14, "module-pyprobe.cyclers.basecycler"]], "pyprobe.cyclers.biologic module": [[15, "module-pyprobe.cyclers.biologic"]], "pyprobe.cyclers.neware module": [[16, "module-pyprobe.cyclers.neware"]], "pyprobe.dashboard module": [[17, "module-pyprobe.dashboard"]], "pyprobe.filters module": [[18, "module-pyprobe.filters"]], "pyprobe.plot module": [[19, "module-pyprobe.plot"]], "pyprobe.rawdata module": [[20, "module-pyprobe.rawdata"]], "pyprobe.result module": [[21, "module-pyprobe.result"]], "pyprobe.typing module": [[22, "module-pyprobe.typing"]], "pyprobe.units module": [[23, "module-pyprobe.units"]], "Adding a Cycler": [[24, "adding-a-cycler"]], "Contributing to the Analysis Module": [[25, "contributing-to-the-analysis-module"]], "Setup": [[25, "setup"]], "Methods": [[25, "methods"]], "Base": [[25, "base"]], "Dependency Guide": [[26, "dependency-guide"]], "Polars": [[26, "polars"]], "Pydantic": [[26, "pydantic"]], "Developer Guide": [[27, "developer-guide"]], "Installation": [[28, "installation"], [41, "installation"]], "Differentiating with the LEAN algorithm": [[29, "Differentiating-with-the-LEAN-algorithm"]], "Comparing PyProBE Performance": [[30, "Comparing-PyProBE-Performance"]], "Examples": [[31, "examples"]], "Filtering data": [[32, "Filtering-data"]], "Getting started with PyProBE": [[33, "Getting-started-with-PyProBE"]], "Convert data to standard format": [[33, "Convert-data-to-standard-format"]], "OCV Fitting": [[34, "OCV-Fitting"]], "Providing Valid Inputs": [[35, "Providing-Valid-Inputs"]], "RawData Validation": [[35, "RawData-Validation"]], "Analysis Class Validation": [[35, "Analysis-Class-Validation"]], "PyProBE documentation": [[36, "pyprobe-documentation"]], "Accessing Data": [[37, "accessing-data"]], "Filtering": [[37, "filtering"]], "RawData objects": [[37, "rawdata-objects"]], "Analysis": [[38, "analysis"]], "Importing Data": [[39, "importing-data"]], "Making a cell object": [[39, "making-a-cell-object"]], "Converting data to PyProBE Format": [[39, "converting-data-to-pyprobe-format"]], "Working with multiple input files": [[39, "working-with-multiple-input-files"]], "Adding data to a cell object": [[39, "adding-data-to-a-cell-object"]], "Batch preprocessing": [[39, "batch-preprocessing"]], "Input Data Guidance": [[40, "input-data-guidance"]], "Supported cyclers and formats": [[40, "supported-cyclers-and-formats"]], "PyProBE data columns": [[40, "pyprobe-data-columns"]], "Introduction": [[42, "introduction"]], "PyProBE Structure": [[42, "pyprobe-structure"]], "This documentation": [[42, "this-documentation"]], "Plotting": [[43, "plotting"]], "User Guide": [[44, "user-guide"]], "Writing a README file": [[45, "writing-a-readme-file"]], "Shortcuts": [[45, "shortcuts"]], "Writing an Experiment record": [[46, "writing-an-experiment-record"]]}, "indexentries": {"module": [[1, "module-pyprobe"], [2, "module-pyprobe.analysis"], [3, "module-pyprobe.analysis.base"], [4, "module-pyprobe.analysis.base.degradation_mode_analysis_functions"], [5, "module-pyprobe.analysis.base.differentiation_functions"], [6, "module-pyprobe.analysis.cycling"], [7, "module-pyprobe.analysis.degradation_mode_analysis"], [8, "module-pyprobe.analysis.differentiation"], [9, "module-pyprobe.analysis.pulsing"], [10, "module-pyprobe.analysis.smoothing"], [11, "module-pyprobe.analysis.utils"], [12, "module-pyprobe.cell"], [13, "module-pyprobe.cyclers"], [14, "module-pyprobe.cyclers.basecycler"], [15, "module-pyprobe.cyclers.biologic"], [16, "module-pyprobe.cyclers.neware"], [17, "module-pyprobe.dashboard"], [18, "module-pyprobe.filters"], [19, "module-pyprobe.plot"], [20, "module-pyprobe.rawdata"], [21, "module-pyprobe.result"], [22, "module-pyprobe.typing"], [23, "module-pyprobe.units"]], "pyprobe": [[1, "module-pyprobe"]], "pyprobe.analysis": [[2, "module-pyprobe.analysis"]], "pyprobe.analysis.base": [[3, "module-pyprobe.analysis.base"]], "average_ocv_curves() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.average_OCV_curves"]], "calc_electrode_capacities() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_electrode_capacities"]], "calc_full_cell_ocv() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_full_cell_OCV"]], "calculate_dma_parameters() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calculate_dma_parameters"]], "ocv_curve_fit() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.ocv_curve_fit"]], "pyprobe.analysis.base.degradation_mode_analysis_functions": [[4, "module-pyprobe.analysis.base.degradation_mode_analysis_functions"]], "calc_gradient_with_lean() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.calc_gradient_with_LEAN"]], "get_dx() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_dx"]], "get_dy_and_counts() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_dy_and_counts"]], "get_x_sections() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_x_sections"]], "pyprobe.analysis.base.differentiation_functions": [[5, "module-pyprobe.analysis.base.differentiation_functions"]], "smooth_gradient() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.smooth_gradient"]], "y_sampling_interval() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.y_sampling_interval"]], "cycling (class in pyprobe.analysis.cycling)": [[6, "pyprobe.analysis.cycling.Cycling"]], "input_data (pyprobe.analysis.cycling.cycling attribute)": [[6, "pyprobe.analysis.cycling.Cycling.input_data"]], "pyprobe.analysis.cycling": [[6, "module-pyprobe.analysis.cycling"]], "summary() (pyprobe.analysis.cycling.cycling method)": [[6, "pyprobe.analysis.cycling.Cycling.summary"]], "dma (class in pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA"]], "average_ocvs() (pyprobe.analysis.degradation_mode_analysis.dma static method)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.average_ocvs"]], "dma_result (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.dma_result"]], "fit_ocv() (pyprobe.analysis.degradation_mode_analysis.dma method)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.fit_ocv"]], "fitted_ocv (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.fitted_OCV"]], "input_data (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.input_data"]], "pyprobe.analysis.degradation_mode_analysis": [[7, "module-pyprobe.analysis.degradation_mode_analysis"]], "quantify_degradation_modes() (pyprobe.analysis.degradation_mode_analysis.dma method)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.quantify_degradation_modes"]], "stoichiometry_limits (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.stoichiometry_limits"]], "differentiation (class in pyprobe.analysis.differentiation)": [[8, "pyprobe.analysis.differentiation.Differentiation"]], "differentiate_fd() (pyprobe.analysis.differentiation.differentiation method)": [[8, "pyprobe.analysis.differentiation.Differentiation.differentiate_FD"]], "differentiate_lean() (pyprobe.analysis.differentiation.differentiation method)": [[8, "pyprobe.analysis.differentiation.Differentiation.differentiate_LEAN"]], "input_data (pyprobe.analysis.differentiation.differentiation attribute)": [[8, "pyprobe.analysis.differentiation.Differentiation.input_data"]], "pyprobe.analysis.differentiation": [[8, "module-pyprobe.analysis.differentiation"]], "i1 (pyprobe.analysis.pulsing.pulsing property)": [[9, "pyprobe.analysis.pulsing.Pulsing.I1"]], "pulsing (class in pyprobe.analysis.pulsing)": [[9, "pyprobe.analysis.pulsing.Pulsing"]], "r0 (pyprobe.analysis.pulsing.pulsing property)": [[9, "pyprobe.analysis.pulsing.Pulsing.R0"]], "rt() (pyprobe.analysis.pulsing.pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.Rt"]], "v0 (pyprobe.analysis.pulsing.pulsing property)": [[9, "pyprobe.analysis.pulsing.Pulsing.V0"]], "v1 (pyprobe.analysis.pulsing.pulsing property)": [[9, "pyprobe.analysis.pulsing.Pulsing.V1"]], "input_data (pyprobe.analysis.pulsing.pulsing attribute)": [[9, "pyprobe.analysis.pulsing.Pulsing.input_data"]], "model_post_init() (pyprobe.analysis.pulsing.pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.model_post_init"]], "pulse() (pyprobe.analysis.pulsing.pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse"]], "pulse_rest() (pyprobe.analysis.pulsing.pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse_rest"]], "pulse_starts (pyprobe.analysis.pulsing.pulsing property)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse_starts"]], "pulse_summary (pyprobe.analysis.pulsing.pulsing property)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse_summary"]], "pulses (pyprobe.analysis.pulsing.pulsing attribute)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulses"]], "pyprobe.analysis.pulsing": [[9, "module-pyprobe.analysis.pulsing"]], "rests (pyprobe.analysis.pulsing.pulsing attribute)": [[9, "pyprobe.analysis.pulsing.Pulsing.rests"]], "smoothing (class in pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.Smoothing"]], "input_data (pyprobe.analysis.smoothing.smoothing attribute)": [[10, "pyprobe.analysis.smoothing.Smoothing.input_data"]], "pyprobe.analysis.smoothing": [[10, "module-pyprobe.analysis.smoothing"]], "spline_smoothing() (pyprobe.analysis.smoothing.smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.spline_smoothing"]], "analysisvalidator (class in pyprobe.analysis.utils)": [[11, "pyprobe.analysis.utils.AnalysisValidator"]], "assemble_array() (in module pyprobe.analysis.utils)": [[11, "pyprobe.analysis.utils.assemble_array"]], "input_data (pyprobe.analysis.utils.analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.input_data"]], "pyprobe.analysis.utils": [[11, "module-pyprobe.analysis.utils"]], "required_columns (pyprobe.analysis.utils.analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.required_columns"]], "required_type (pyprobe.analysis.utils.analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.required_type"]], "validate_input_data_type() (pyprobe.analysis.utils.analysisvalidator method)": [[11, "pyprobe.analysis.utils.AnalysisValidator.validate_input_data_type"]], "validate_required_columns() (pyprobe.analysis.utils.analysisvalidator method)": [[11, "pyprobe.analysis.utils.AnalysisValidator.validate_required_columns"]], "variables (pyprobe.analysis.utils.analysisvalidator property)": [[11, "pyprobe.analysis.utils.AnalysisValidator.variables"]], "cell (class in pyprobe.cell)": [[12, "pyprobe.cell.Cell"]], "add_procedure() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.add_procedure"]], "info (pyprobe.cell.cell attribute)": [[12, "pyprobe.cell.Cell.info"]], "launch_dashboard() (pyprobe.cell.cell static method)": [[12, "pyprobe.cell.Cell.launch_dashboard"]], "make_cell_list() (pyprobe.cell.cell class method)": [[12, "pyprobe.cell.Cell.make_cell_list"]], "procedure (pyprobe.cell.cell attribute)": [[12, "pyprobe.cell.Cell.procedure"]], "process_cycler_file() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.process_cycler_file"]], "pyprobe.cell": [[12, "module-pyprobe.cell"]], "set_color_scheme() (pyprobe.cell.cell static method)": [[12, "pyprobe.cell.Cell.set_color_scheme"]], "pyprobe.cyclers": [[13, "module-pyprobe.cyclers"]], "basecycler (class in pyprobe.cyclers.basecycler)": [[14, "pyprobe.cyclers.basecycler.BaseCycler"]], "capacity (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.capacity"]], "capacity_from_ch_dch (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.capacity_from_ch_dch"]], "charge_capacity (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.charge_capacity"]], "column_dict (pyprobe.cyclers.basecycler.basecycler attribute)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.column_dict"]], "column_name_pattern (pyprobe.cyclers.basecycler.basecycler attribute)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.column_name_pattern"]], "common_prefix (pyprobe.cyclers.basecycler.basecycler attribute)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.common_prefix"]], "common_suffix (pyprobe.cyclers.basecycler.basecycler attribute)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.common_suffix"]], "current (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.current"]], "cycle (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.cycle"]], "date (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.date"]], "discharge_capacity (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.discharge_capacity"]], "event (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.event"]], "get_dataframe_list() (pyprobe.cyclers.basecycler.basecycler method)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.get_dataframe_list"]], "get_imported_dataframe() (pyprobe.cyclers.basecycler.basecycler method)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.get_imported_dataframe"]], "input_data_path (pyprobe.cyclers.basecycler.basecycler attribute)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.input_data_path"]], "model_post_init() (pyprobe.cyclers.basecycler.basecycler method)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.model_post_init"]], "pyprobe.cyclers.basecycler": [[14, "module-pyprobe.cyclers.basecycler"]], "pyprobe_dataframe (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.pyprobe_dataframe"]], "read_file() (pyprobe.cyclers.basecycler.basecycler static method)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.read_file"]], "required_columns (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.required_columns"]], "search_columns() (pyprobe.cyclers.basecycler.basecycler static method)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.search_columns"]], "step (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.step"]], "time (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.time"]], "voltage (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.voltage"]], "biologic (class in pyprobe.cyclers.biologic)": [[15, "pyprobe.cyclers.biologic.Biologic"]], "apply_step_correction() (pyprobe.cyclers.biologic.biologic static method)": [[15, "pyprobe.cyclers.biologic.Biologic.apply_step_correction"]], "column_dict (pyprobe.cyclers.biologic.biologic attribute)": [[15, "pyprobe.cyclers.biologic.Biologic.column_dict"]], "column_name_pattern (pyprobe.cyclers.biologic.biologic attribute)": [[15, "pyprobe.cyclers.biologic.Biologic.column_name_pattern"]], "common_suffix (pyprobe.cyclers.biologic.biologic attribute)": [[15, "pyprobe.cyclers.biologic.Biologic.common_suffix"]], "get_imported_dataframe() (pyprobe.cyclers.biologic.biologic method)": [[15, "pyprobe.cyclers.biologic.Biologic.get_imported_dataframe"]], "input_data_path (pyprobe.cyclers.biologic.biologic attribute)": [[15, "pyprobe.cyclers.biologic.Biologic.input_data_path"]], "pyprobe.cyclers.biologic": [[15, "module-pyprobe.cyclers.biologic"]], "read_file() (pyprobe.cyclers.biologic.biologic static method)": [[15, "pyprobe.cyclers.biologic.Biologic.read_file"]], "step (pyprobe.cyclers.biologic.biologic property)": [[15, "pyprobe.cyclers.biologic.Biologic.step"]], "neware (class in pyprobe.cyclers.neware)": [[16, "pyprobe.cyclers.neware.Neware"]], "column_dict (pyprobe.cyclers.neware.neware attribute)": [[16, "pyprobe.cyclers.neware.Neware.column_dict"]], "column_name_pattern (pyprobe.cyclers.neware.neware attribute)": [[16, "pyprobe.cyclers.neware.Neware.column_name_pattern"]], "common_suffix (pyprobe.cyclers.neware.neware attribute)": [[16, "pyprobe.cyclers.neware.Neware.common_suffix"]], "input_data_path (pyprobe.cyclers.neware.neware attribute)": [[16, "pyprobe.cyclers.neware.Neware.input_data_path"]], "pyprobe.cyclers.neware": [[16, "module-pyprobe.cyclers.neware"]], "time (pyprobe.cyclers.neware.neware property)": [[16, "pyprobe.cyclers.neware.Neware.time"]], "pyprobe.dashboard": [[17, "module-pyprobe.dashboard"]], "cycle (class in pyprobe.filters)": [[18, "pyprobe.filters.Cycle"]], "experiment (class in pyprobe.filters)": [[18, "pyprobe.filters.Experiment"]], "procedure (class in pyprobe.filters)": [[18, "pyprobe.filters.Procedure"]], "step (class in pyprobe.filters)": [[18, "pyprobe.filters.Step"]], "base_dataframe (pyprobe.filters.cycle attribute)": [[18, "pyprobe.filters.Cycle.base_dataframe"]], "base_dataframe (pyprobe.filters.experiment attribute)": [[18, "pyprobe.filters.Experiment.base_dataframe"]], "base_dataframe (pyprobe.filters.procedure attribute)": [[18, "pyprobe.filters.Procedure.base_dataframe"]], "base_dataframe (pyprobe.filters.step attribute)": [[18, "pyprobe.filters.Step.base_dataframe"]], "charge() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.charge"]], "charge() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.charge"]], "charge() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.charge"]], "chargeordischarge() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.chargeordischarge"]], "chargeordischarge() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.chargeordischarge"]], "chargeordischarge() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.chargeordischarge"]], "column_definitions (pyprobe.filters.cycle attribute)": [[18, "pyprobe.filters.Cycle.column_definitions"]], "column_definitions (pyprobe.filters.experiment attribute)": [[18, "pyprobe.filters.Experiment.column_definitions"]], "column_definitions (pyprobe.filters.procedure attribute)": [[18, "pyprobe.filters.Procedure.column_definitions"]], "column_definitions (pyprobe.filters.step attribute)": [[18, "pyprobe.filters.Step.column_definitions"]], "constant_current() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.constant_current"]], "constant_current() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.constant_current"]], "constant_current() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.constant_current"]], "constant_current() (pyprobe.filters.step method)": [[18, "pyprobe.filters.Step.constant_current"]], "constant_voltage() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.constant_voltage"]], "constant_voltage() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.constant_voltage"]], "constant_voltage() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.constant_voltage"]], "constant_voltage() (pyprobe.filters.step method)": [[18, "pyprobe.filters.Step.constant_voltage"]], "cycle() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.cycle"]], "cycle() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.cycle"]], "discharge() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.discharge"]], "discharge() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.discharge"]], "discharge() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.discharge"]], "experiment() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.experiment"]], "experiment_names (pyprobe.filters.procedure property)": [[18, "pyprobe.filters.Procedure.experiment_names"]], "info (pyprobe.filters.cycle attribute)": [[18, "pyprobe.filters.Cycle.info"]], "info (pyprobe.filters.experiment attribute)": [[18, "pyprobe.filters.Experiment.info"]], "info (pyprobe.filters.procedure attribute)": [[18, "pyprobe.filters.Procedure.info"]], "info (pyprobe.filters.step attribute)": [[18, "pyprobe.filters.Step.info"]], "model_post_init() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.model_post_init"]], "model_post_init() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.model_post_init"]], "model_post_init() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.model_post_init"]], "model_post_init() (pyprobe.filters.step method)": [[18, "pyprobe.filters.Step.model_post_init"]], "pyprobe.filters": [[18, "module-pyprobe.filters"]], "rest() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.rest"]], "rest() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.rest"]], "rest() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.rest"]], "step() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.step"]], "step() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.step"]], "step() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.step"]], "step() (pyprobe.filters.step method)": [[18, "pyprobe.filters.Step.step"]], "steps_idx (pyprobe.filters.procedure attribute)": [[18, "pyprobe.filters.Procedure.steps_idx"]], "titles (pyprobe.filters.procedure attribute)": [[18, "pyprobe.filters.Procedure.titles"]], "plot (class in pyprobe.plot)": [[19, "pyprobe.plot.Plot"]], "add_colorbar() (pyprobe.plot.plot method)": [[19, "pyprobe.plot.Plot.add_colorbar"]], "add_colorscaled_line() (pyprobe.plot.plot method)": [[19, "pyprobe.plot.Plot.add_colorscaled_line"]], "add_line() (pyprobe.plot.plot method)": [[19, "pyprobe.plot.Plot.add_line"]], "axis_font_size (pyprobe.plot.plot attribute)": [[19, "pyprobe.plot.Plot.axis_font_size"]], "default_layout (pyprobe.plot.plot attribute)": [[19, "pyprobe.plot.Plot.default_layout"]], "fig (pyprobe.plot.plot property)": [[19, "pyprobe.plot.Plot.fig"]], "make_colorscale() (pyprobe.plot.plot static method)": [[19, "pyprobe.plot.Plot.make_colorscale"]], "pyprobe.plot": [[19, "module-pyprobe.plot"]], "show() (pyprobe.plot.plot method)": [[19, "pyprobe.plot.Plot.show"]], "title_font_size (pyprobe.plot.plot attribute)": [[19, "pyprobe.plot.Plot.title_font_size"]], "x_range (pyprobe.plot.plot property)": [[19, "pyprobe.plot.Plot.x_range"]], "y2_range (pyprobe.plot.plot property)": [[19, "pyprobe.plot.Plot.y2_range"]], "y_range (pyprobe.plot.plot property)": [[19, "pyprobe.plot.Plot.y_range"]], "rawdata (class in pyprobe.rawdata)": [[20, "pyprobe.rawdata.RawData"]], "base_dataframe (pyprobe.rawdata.rawdata attribute)": [[20, "pyprobe.rawdata.RawData.base_dataframe"]], "capacity (pyprobe.rawdata.rawdata property)": [[20, "pyprobe.rawdata.RawData.capacity"]], "column_definitions (pyprobe.rawdata.rawdata attribute)": [[20, "pyprobe.rawdata.RawData.column_definitions"]], "info (pyprobe.rawdata.rawdata attribute)": [[20, "pyprobe.rawdata.RawData.info"]], "pyprobe.rawdata": [[20, "module-pyprobe.rawdata"]], "set_soc() (pyprobe.rawdata.rawdata method)": [[20, "pyprobe.rawdata.RawData.set_SOC"]], "set_reference_capacity() (pyprobe.rawdata.rawdata method)": [[20, "pyprobe.rawdata.RawData.set_reference_capacity"]], "zero_column() (pyprobe.rawdata.rawdata method)": [[20, "pyprobe.rawdata.RawData.zero_column"]], "result (class in pyprobe.result)": [[21, "pyprobe.result.Result"]], "array() (pyprobe.result.result method)": [[21, "pyprobe.result.Result.array"]], "base_dataframe (pyprobe.result.result attribute)": [[21, "pyprobe.result.Result.base_dataframe"]], "build() (pyprobe.result.result class method)": [[21, "pyprobe.result.Result.build"]], "clean_copy() (pyprobe.result.result method)": [[21, "pyprobe.result.Result.clean_copy"]], "column_definitions (pyprobe.result.result attribute)": [[21, "pyprobe.result.Result.column_definitions"]], "column_list (pyprobe.result.result property)": [[21, "pyprobe.result.Result.column_list"]], "data (pyprobe.result.result property)": [[21, "pyprobe.result.Result.data"]], "define_column() (pyprobe.result.result method)": [[21, "pyprobe.result.Result.define_column"]], "get() (pyprobe.result.result method)": [[21, "pyprobe.result.Result.get"]], "get_only() (pyprobe.result.result method)": [[21, "pyprobe.result.Result.get_only"]], "info (pyprobe.result.result attribute)": [[21, "pyprobe.result.Result.info"]], "print_definitions() (pyprobe.result.result method)": [[21, "pyprobe.result.Result.print_definitions"]], "pyprobe.result": [[21, "module-pyprobe.result"]], "quantities (pyprobe.result.result property)": [[21, "pyprobe.result.Result.quantities"]], "filtertocycletype (in module pyprobe.typing)": [[22, "pyprobe.typing.FilterToCycleType"]], "filtertoexperimenttype (in module pyprobe.typing)": [[22, "pyprobe.typing.FilterToExperimentType"]], "filtertosteptype (in module pyprobe.typing)": [[22, "pyprobe.typing.FilterToStepType"]], "pyprobedatatype (in module pyprobe.typing)": [[22, "pyprobe.typing.PyProBEDataType"]], "pyproberawdatatype (in module pyprobe.typing)": [[22, "pyprobe.typing.PyProBERawDataType"]], "pyprobe.typing": [[22, "module-pyprobe.typing"]], "units (class in pyprobe.units)": [[23, "pyprobe.units.Units"]], "from_default_unit() (pyprobe.units.units method)": [[23, "pyprobe.units.Units.from_default_unit"]], "get_quantity_and_unit() (pyprobe.units.units static method)": [[23, "pyprobe.units.Units.get_quantity_and_unit"]], "prefix_dict (pyprobe.units.units attribute)": [[23, "pyprobe.units.Units.prefix_dict"]], "pyprobe.units": [[23, "module-pyprobe.units"]], "time_unit_dict (pyprobe.units.units attribute)": [[23, "pyprobe.units.Units.time_unit_dict"]], "to_default_name_and_unit() (pyprobe.units.units method)": [[23, "pyprobe.units.Units.to_default_name_and_unit"]], "to_default_unit() (pyprobe.units.units method)": [[23, "pyprobe.units.Units.to_default_unit"]], "unit_dict (pyprobe.units.units attribute)": [[23, "pyprobe.units.Units.unit_dict"]]}})