Search.setIndex({"alltitles": {"Accessing Data": [[39, null]], "Adding a Cycler": [[24, null]], "Adding data not from a cycler": [[41, "adding-data-not-from-a-cycler"]], "Adding data to a cell object": [[41, "adding-data-to-a-cell-object"]], "Analysing GITT data": [[30, null]], "Analysis": [[40, null]], "Analysis Class Validation": [[37, "Analysis-Class-Validation"]], "Base": [[25, "base"]], "Batch preprocessing": [[41, "batch-preprocessing"]], "Comparing PyProBE Performance": [[31, null]], "Contributing to the Analysis Module": [[25, null]], "Convert data to standard format": [[35, "Convert-data-to-standard-format"]], "Converting data to PyProBE Format": [[41, "converting-data-to-pyprobe-format"]], "Dependency Guide": [[26, null]], "Developer Guide": [[27, null]], "Differentiating voltage data": [[32, null]], "Differentiating with the LEAN algorithm": [[29, null]], "Examples": [[33, null]], "Filtering": [[39, "filtering"]], "Filtering data": [[34, null]], "Getting started with PyProBE": [[35, null]], "Importing Data": [[41, null]], "Input Data Guidance": [[42, null]], "Installation": [[28, null], [43, null]], "Introduction": [[44, null]], "Making a cell object": [[41, "making-a-cell-object"]], "Methods": [[25, "methods"]], "OCV Fitting": [[36, null]], "Plotting": [[45, null]], "Polars": [[26, "polars"]], "Providing Valid Inputs": [[37, null]], "PyProBE Structure": [[44, "pyprobe-structure"]], "PyProBE data columns": [[42, "pyprobe-data-columns"]], "PyProBE documentation": [[38, null]], "Pydantic": [[26, "pydantic"]], "RawData Validation": [[37, "RawData-Validation"]], "RawData objects": [[39, "rawdata-objects"]], "Setup": [[25, "setup"]], "Shortcuts": [[47, "shortcuts"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [13, "submodules"]], "Subpackages": [[1, "subpackages"], [2, "subpackages"]], "Supported cyclers and formats": [[42, "supported-cyclers-and-formats"]], "This documentation": [[44, "this-documentation"]], "User Guide": [[46, null]], "Working with multiple input files": [[41, "working-with-multiple-input-files"]], "Writing a README file": [[47, null]], "Writing an Experiment record": [[48, null]], "pyprobe": [[0, null]], "pyprobe package": [[1, null]], "pyprobe.analysis package": [[2, null]], "pyprobe.analysis.base package": [[3, null]], "pyprobe.analysis.base.degradation_mode_analysis_functions module": [[4, null]], "pyprobe.analysis.base.differentiation_functions module": [[5, null]], "pyprobe.analysis.cycling module": [[6, null]], "pyprobe.analysis.degradation_mode_analysis module": [[7, null]], "pyprobe.analysis.differentiation module": [[8, null]], "pyprobe.analysis.pulsing module": [[9, null]], "pyprobe.analysis.smoothing module": [[10, null]], "pyprobe.analysis.utils module": [[11, null]], "pyprobe.cell module": [[12, null]], "pyprobe.cyclers package": [[13, null]], "pyprobe.cyclers.basecycler module": [[14, null]], "pyprobe.cyclers.biologic module": [[15, null]], "pyprobe.cyclers.neware module": [[16, null]], "pyprobe.dashboard module": [[17, null]], "pyprobe.filters module": [[18, null]], "pyprobe.plot module": [[19, null]], "pyprobe.rawdata module": [[20, null]], "pyprobe.result module": [[21, null]], "pyprobe.typing module": [[22, null]], "pyprobe.units module": [[23, null]]}, "docnames": ["api/modules", "api/pyprobe", "api/pyprobe.analysis", "api/pyprobe.analysis.base", "api/pyprobe.analysis.base.degradation_mode_analysis_functions", "api/pyprobe.analysis.base.differentiation_functions", "api/pyprobe.analysis.cycling", "api/pyprobe.analysis.degradation_mode_analysis", "api/pyprobe.analysis.differentiation", "api/pyprobe.analysis.pulsing", "api/pyprobe.analysis.smoothing", "api/pyprobe.analysis.utils", "api/pyprobe.cell", "api/pyprobe.cyclers", "api/pyprobe.cyclers.basecycler", "api/pyprobe.cyclers.biologic", "api/pyprobe.cyclers.neware", "api/pyprobe.dashboard", "api/pyprobe.filters", "api/pyprobe.plot", "api/pyprobe.rawdata", "api/pyprobe.result", "api/pyprobe.typing", "api/pyprobe.units", "developer_guide/adding_a_cycler", "developer_guide/contributing_to_the_analysis_module", "developer_guide/dependency_guide", "developer_guide/developer_guide", "developer_guide/developer_installation", "examples/LEAN-differentiation", "examples/analysing-GITT-data", "examples/comparing-pyprobe-performance", "examples/differentiating-voltage-data", "examples/examples", "examples/filtering-data", "examples/getting-started", "examples/ocv-fitting", "examples/providing-valid-inputs", "index", "user_guide/accessing_data", "user_guide/analysis", "user_guide/importing_data", "user_guide/input_data_guidance", "user_guide/installation", "user_guide/introduction", "user_guide/plotting", "user_guide/user_guide", "user_guide/writing_a_readme_file", "user_guide/writing_an_experiment_record"], "envversion": {"nbsphinx": 4, "sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["api/modules.rst", "api/pyprobe.rst", "api/pyprobe.analysis.rst", "api/pyprobe.analysis.base.rst", "api/pyprobe.analysis.base.degradation_mode_analysis_functions.rst", "api/pyprobe.analysis.base.differentiation_functions.rst", "api/pyprobe.analysis.cycling.rst", "api/pyprobe.analysis.degradation_mode_analysis.rst", "api/pyprobe.analysis.differentiation.rst", "api/pyprobe.analysis.pulsing.rst", "api/pyprobe.analysis.smoothing.rst", "api/pyprobe.analysis.utils.rst", "api/pyprobe.cell.rst", "api/pyprobe.cyclers.rst", "api/pyprobe.cyclers.basecycler.rst", "api/pyprobe.cyclers.biologic.rst", "api/pyprobe.cyclers.neware.rst", "api/pyprobe.dashboard.rst", "api/pyprobe.filters.rst", "api/pyprobe.plot.rst", "api/pyprobe.rawdata.rst", "api/pyprobe.result.rst", "api/pyprobe.typing.rst", "api/pyprobe.units.rst", "developer_guide/adding_a_cycler.rst", "developer_guide/contributing_to_the_analysis_module.rst", "developer_guide/dependency_guide.rst", "developer_guide/developer_guide.rst", "developer_guide/developer_installation.rst", "examples/LEAN-differentiation.ipynb", "examples/analysing-GITT-data.ipynb", "examples/comparing-pyprobe-performance.ipynb", "examples/differentiating-voltage-data.ipynb", "examples/examples.rst", "examples/filtering-data.ipynb", "examples/getting-started.ipynb", "examples/ocv-fitting.ipynb", "examples/providing-valid-inputs.ipynb", "index.rst", "user_guide/accessing_data.rst", "user_guide/analysis.rst", "user_guide/importing_data.rst", "user_guide/input_data_guidance.rst", "user_guide/installation.rst", "user_guide/introduction.rst", "user_guide/plotting.rst", "user_guide/user_guide.rst", "user_guide/writing_a_readme_file.rst", "user_guide/writing_an_experiment_record.rst"], "indexentries": {"add_colorbar() (pyprobe.plot.plot method)": [[19, "pyprobe.plot.Plot.add_colorbar", false]], "add_colorscaled_line() (pyprobe.plot.plot method)": [[19, "pyprobe.plot.Plot.add_colorscaled_line", false]], "add_external_data() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.add_external_data", false]], "add_line() (pyprobe.plot.plot method)": [[19, "pyprobe.plot.Plot.add_line", false]], "add_new_data_columns() (pyprobe.result.result method)": [[21, "pyprobe.result.Result.add_new_data_columns", false]], "add_procedure() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.add_procedure", false]], "analysisvalidator (class in pyprobe.analysis.utils)": [[11, "pyprobe.analysis.utils.AnalysisValidator", false]], "apply_step_correction() (pyprobe.cyclers.biologic.biologicmb static method)": [[15, "pyprobe.cyclers.biologic.BiologicMB.apply_step_correction", false]], "array() (pyprobe.result.result method)": [[21, "pyprobe.result.Result.array", false]], "assemble_array() (in module pyprobe.analysis.utils)": [[11, "pyprobe.analysis.utils.assemble_array", false]], "average_ocv_curves() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.average_OCV_curves", false]], "average_ocvs() (pyprobe.analysis.degradation_mode_analysis.dma static method)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.average_ocvs", false]], "axis_font_size (pyprobe.plot.plot attribute)": [[19, "pyprobe.plot.Plot.axis_font_size", false]], "base_dataframe (pyprobe.filters.cycle attribute)": [[18, "pyprobe.filters.Cycle.base_dataframe", false]], "base_dataframe (pyprobe.filters.experiment attribute)": [[18, "pyprobe.filters.Experiment.base_dataframe", false]], "base_dataframe (pyprobe.filters.procedure attribute)": [[18, "pyprobe.filters.Procedure.base_dataframe", false]], "base_dataframe (pyprobe.filters.step attribute)": [[18, "pyprobe.filters.Step.base_dataframe", false]], "base_dataframe (pyprobe.rawdata.rawdata attribute)": [[20, "pyprobe.rawdata.RawData.base_dataframe", false]], "base_dataframe (pyprobe.result.result attribute)": [[21, "pyprobe.result.Result.base_dataframe", false]], "basecycler (class in pyprobe.cyclers.basecycler)": [[14, "pyprobe.cyclers.basecycler.BaseCycler", false]], "biologic (class in pyprobe.cyclers.biologic)": [[15, "pyprobe.cyclers.biologic.Biologic", false]], "biologicmb (class in pyprobe.cyclers.biologic)": [[15, "pyprobe.cyclers.biologic.BiologicMB", false]], "build() (pyprobe.result.result class method)": [[21, "pyprobe.result.Result.build", false]], "calc_electrode_capacities() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_electrode_capacities", false]], "calc_full_cell_ocv() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_full_cell_OCV", false]], "calc_gradient_with_lean() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.calc_gradient_with_LEAN", false]], "calculate_dma_parameters() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calculate_dma_parameters", false]], "capacity (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.capacity", false]], "capacity (pyprobe.rawdata.rawdata property)": [[20, "pyprobe.rawdata.RawData.capacity", false]], "capacity_from_ch_dch (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.capacity_from_ch_dch", false]], "cell (class in pyprobe.cell)": [[12, "pyprobe.cell.Cell", false]], "charge() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.charge", false]], "charge() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.charge", false]], "charge() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.charge", false]], "charge_capacity (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.charge_capacity", false]], "chargeordischarge() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.chargeordischarge", false]], "chargeordischarge() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.chargeordischarge", false]], "chargeordischarge() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.chargeordischarge", false]], "clean_copy() (pyprobe.result.result method)": [[21, "pyprobe.result.Result.clean_copy", false]], "column_definitions (pyprobe.filters.cycle attribute)": [[18, "pyprobe.filters.Cycle.column_definitions", false]], "column_definitions (pyprobe.filters.experiment attribute)": [[18, "pyprobe.filters.Experiment.column_definitions", false]], "column_definitions (pyprobe.filters.procedure attribute)": [[18, "pyprobe.filters.Procedure.column_definitions", false]], "column_definitions (pyprobe.filters.step attribute)": [[18, "pyprobe.filters.Step.column_definitions", false]], "column_definitions (pyprobe.rawdata.rawdata attribute)": [[20, "pyprobe.rawdata.RawData.column_definitions", false]], "column_definitions (pyprobe.result.result attribute)": [[21, "pyprobe.result.Result.column_definitions", false]], "column_dict (pyprobe.cyclers.basecycler.basecycler attribute)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.column_dict", false]], "column_dict (pyprobe.cyclers.biologic.biologic attribute)": [[15, "pyprobe.cyclers.biologic.Biologic.column_dict", false]], "column_dict (pyprobe.cyclers.neware.neware attribute)": [[16, "pyprobe.cyclers.neware.Neware.column_dict", false]], "column_list (pyprobe.result.result property)": [[21, "pyprobe.result.Result.column_list", false]], "constant_current() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.constant_current", false]], "constant_current() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.constant_current", false]], "constant_current() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.constant_current", false]], "constant_current() (pyprobe.filters.step method)": [[18, "pyprobe.filters.Step.constant_current", false]], "constant_voltage() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.constant_voltage", false]], "constant_voltage() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.constant_voltage", false]], "constant_voltage() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.constant_voltage", false]], "constant_voltage() (pyprobe.filters.step method)": [[18, "pyprobe.filters.Step.constant_voltage", false]], "contains_lazyframe (pyprobe.result.result property)": [[21, "pyprobe.result.Result.contains_lazyframe", false]], "convert_names() (pyprobe.cyclers.basecycler.basecycler method)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.convert_names", false]], "current (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.current", false]], "cycle (class in pyprobe.filters)": [[18, "pyprobe.filters.Cycle", false]], "cycle (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.cycle", false]], "cycle() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.cycle", false]], "cycle() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.cycle", false]], "cycle_details (pyprobe.cell.readmemodel attribute)": [[12, "pyprobe.cell.ReadmeModel.cycle_details", false]], "cycling (class in pyprobe.analysis.cycling)": [[6, "pyprobe.analysis.cycling.Cycling", false]], "data (pyprobe.result.result property)": [[21, "pyprobe.result.Result.data", false]], "date (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.date", false]], "default_layout (pyprobe.plot.plot attribute)": [[19, "pyprobe.plot.Plot.default_layout", false]], "define_column() (pyprobe.result.result method)": [[21, "pyprobe.result.Result.define_column", false]], "differentiate_fd() (pyprobe.analysis.differentiation.differentiation method)": [[8, "pyprobe.analysis.differentiation.Differentiation.differentiate_FD", false]], "differentiate_lean() (pyprobe.analysis.differentiation.differentiation method)": [[8, "pyprobe.analysis.differentiation.Differentiation.differentiate_LEAN", false]], "differentiation (class in pyprobe.analysis.differentiation)": [[8, "pyprobe.analysis.differentiation.Differentiation", false]], "discharge() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.discharge", false]], "discharge() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.discharge", false]], "discharge() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.discharge", false]], "discharge_capacity (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.discharge_capacity", false]], "dma (class in pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA", false]], "dma_result (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.dma_result", false]], "event (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.event", false]], "experiment (class in pyprobe.filters)": [[18, "pyprobe.filters.Experiment", false]], "experiment() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.experiment", false]], "experiment_names (pyprobe.filters.procedure property)": [[18, "pyprobe.filters.Procedure.experiment_names", false]], "fig (pyprobe.plot.plot property)": [[19, "pyprobe.plot.Plot.fig", false]], "filtertocycletype (in module pyprobe.typing)": [[22, "pyprobe.typing.FilterToCycleType", false]], "filtertoexperimenttype (in module pyprobe.typing)": [[22, "pyprobe.typing.FilterToExperimentType", false]], "filtertosteptype (in module pyprobe.typing)": [[22, "pyprobe.typing.FilterToStepType", false]], "fit_ocv() (pyprobe.analysis.degradation_mode_analysis.dma method)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.fit_ocv", false]], "fitted_ocv (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.fitted_OCV", false]], "from_default_unit() (pyprobe.units.units method)": [[23, "pyprobe.units.Units.from_default_unit", false]], "from_regexp() (pyprobe.units.units static method)": [[23, "pyprobe.units.Units.from_regexp", false]], "get() (pyprobe.result.result method)": [[21, "pyprobe.result.Result.get", false]], "get_cycle_details() (pyprobe.cell.readmemodel method)": [[12, "pyprobe.cell.ReadmeModel.get_cycle_details", false]], "get_dataframe_list() (pyprobe.cyclers.basecycler.basecycler method)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.get_dataframe_list", false]], "get_dx() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_dx", false]], "get_dy_and_counts() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_dy_and_counts", false]], "get_imported_dataframe() (pyprobe.cyclers.basecycler.basecycler method)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.get_imported_dataframe", false]], "get_imported_dataframe() (pyprobe.cyclers.biologic.biologicmb method)": [[15, "pyprobe.cyclers.biologic.BiologicMB.get_imported_dataframe", false]], "get_only() (pyprobe.result.result method)": [[21, "pyprobe.result.Result.get_only", false]], "get_pybamm_experiment() (pyprobe.cell.readmemodel method)": [[12, "pyprobe.cell.ReadmeModel.get_pybamm_experiment", false]], "get_pybamm_experiment_descriptions() (pyprobe.cell.readmemodel method)": [[12, "pyprobe.cell.ReadmeModel.get_pybamm_experiment_descriptions", false]], "get_pybamm_experiment_list() (pyprobe.cell.readmemodel method)": [[12, "pyprobe.cell.ReadmeModel.get_pybamm_experiment_list", false]], "get_step_descriptions() (pyprobe.cell.readmemodel method)": [[12, "pyprobe.cell.ReadmeModel.get_step_descriptions", false]], "get_step_indices() (pyprobe.cell.readmemodel method)": [[12, "pyprobe.cell.ReadmeModel.get_step_indices", false]], "get_step_numbers() (pyprobe.cell.readmemodel method)": [[12, "pyprobe.cell.ReadmeModel.get_step_numbers", false]], "get_x_sections() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_x_sections", false]], "info (pyprobe.cell.cell attribute)": [[12, "pyprobe.cell.Cell.info", false]], "info (pyprobe.filters.cycle attribute)": [[18, "pyprobe.filters.Cycle.info", false]], "info (pyprobe.filters.experiment attribute)": [[18, "pyprobe.filters.Experiment.info", false]], "info (pyprobe.filters.procedure attribute)": [[18, "pyprobe.filters.Procedure.info", false]], "info (pyprobe.filters.step attribute)": [[18, "pyprobe.filters.Step.info", false]], "info (pyprobe.rawdata.rawdata attribute)": [[20, "pyprobe.rawdata.RawData.info", false]], "info (pyprobe.result.result attribute)": [[21, "pyprobe.result.Result.info", false]], "input_data (pyprobe.analysis.cycling.cycling attribute)": [[6, "pyprobe.analysis.cycling.Cycling.input_data", false]], "input_data (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.input_data", false]], "input_data (pyprobe.analysis.differentiation.differentiation attribute)": [[8, "pyprobe.analysis.differentiation.Differentiation.input_data", false]], "input_data (pyprobe.analysis.pulsing.pulsing attribute)": [[9, "pyprobe.analysis.pulsing.Pulsing.input_data", false]], "input_data (pyprobe.analysis.smoothing.smoothing attribute)": [[10, "pyprobe.analysis.smoothing.Smoothing.input_data", false]], "input_data (pyprobe.analysis.utils.analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.input_data", false]], "input_data_path (pyprobe.cyclers.basecycler.basecycler attribute)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.input_data_path", false]], "input_data_path (pyprobe.cyclers.biologic.biologic attribute)": [[15, "pyprobe.cyclers.biologic.Biologic.input_data_path", false]], "input_data_path (pyprobe.cyclers.neware.neware attribute)": [[16, "pyprobe.cyclers.neware.Neware.input_data_path", false]], "launch_dashboard() (pyprobe.cell.cell static method)": [[12, "pyprobe.cell.Cell.launch_dashboard", false]], "level_smoothing() (pyprobe.analysis.smoothing.smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.level_smoothing", false]], "load_external_file() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.load_external_file", false]], "make_cell_list() (pyprobe.cell.cell class method)": [[12, "pyprobe.cell.Cell.make_cell_list", false]], "make_colorscale() (pyprobe.plot.plot static method)": [[19, "pyprobe.plot.Plot.make_colorscale", false]], "map_columns() (pyprobe.cyclers.basecycler.basecycler class method)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.map_columns", false]], "match_unit() (pyprobe.cyclers.basecycler.basecycler static method)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.match_unit", false]], "model_post_init() (pyprobe.cell.readmemodel method)": [[12, "pyprobe.cell.ReadmeModel.model_post_init", false]], "model_post_init() (pyprobe.cyclers.basecycler.basecycler method)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.model_post_init", false]], "model_post_init() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.model_post_init", false]], "model_post_init() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.model_post_init", false]], "model_post_init() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.model_post_init", false]], "model_post_init() (pyprobe.filters.step method)": [[18, "pyprobe.filters.Step.model_post_init", false]], "model_post_init() (pyprobe.rawdata.rawdata method)": [[20, "pyprobe.rawdata.RawData.model_post_init", false]], "module": [[1, "module-pyprobe", false], [2, "module-pyprobe.analysis", false], [3, "module-pyprobe.analysis.base", false], [4, "module-pyprobe.analysis.base.degradation_mode_analysis_functions", false], [5, "module-pyprobe.analysis.base.differentiation_functions", false], [6, "module-pyprobe.analysis.cycling", false], [7, "module-pyprobe.analysis.degradation_mode_analysis", false], [8, "module-pyprobe.analysis.differentiation", false], [9, "module-pyprobe.analysis.pulsing", false], [10, "module-pyprobe.analysis.smoothing", false], [11, "module-pyprobe.analysis.utils", false], [12, "module-pyprobe.cell", false], [13, "module-pyprobe.cyclers", false], [14, "module-pyprobe.cyclers.basecycler", false], [15, "module-pyprobe.cyclers.biologic", false], [16, "module-pyprobe.cyclers.neware", false], [17, "module-pyprobe.dashboard", false], [18, "module-pyprobe.filters", false], [19, "module-pyprobe.plot", false], [20, "module-pyprobe.rawdata", false], [21, "module-pyprobe.result", false], [22, "module-pyprobe.typing", false], [23, "module-pyprobe.units", false]], "neware (class in pyprobe.cyclers.neware)": [[16, "pyprobe.cyclers.neware.Neware", false]], "number_of_experiments (pyprobe.cell.readmemodel attribute)": [[12, "pyprobe.cell.ReadmeModel.number_of_experiments", false]], "ocv_curve_fit() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.ocv_curve_fit", false]], "plot (class in pyprobe.plot)": [[19, "pyprobe.plot.Plot", false]], "prefix_dict (pyprobe.units.units attribute)": [[23, "pyprobe.units.Units.prefix_dict", false]], "print_definitions() (pyprobe.result.result method)": [[21, "pyprobe.result.Result.print_definitions", false]], "procedure (class in pyprobe.filters)": [[18, "pyprobe.filters.Procedure", false]], "procedure (pyprobe.cell.cell attribute)": [[12, "pyprobe.cell.Cell.procedure", false]], "process_cycler_file() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.process_cycler_file", false]], "process_generic_file() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.process_generic_file", false]], "pulse() (pyprobe.analysis.pulsing.pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse", false]], "pulse_rest() (pyprobe.analysis.pulsing.pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse_rest", false]], "pulse_summary() (pyprobe.analysis.pulsing.pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse_summary", false]], "pulsing (class in pyprobe.analysis.pulsing)": [[9, "pyprobe.analysis.pulsing.Pulsing", false]], "pybamm_experiment (pyprobe.cell.readmemodel attribute)": [[12, "pyprobe.cell.ReadmeModel.pybamm_experiment", false]], "pybamm_experiment (pyprobe.filters.procedure attribute)": [[18, "pyprobe.filters.Procedure.pybamm_experiment", false]], "pybamm_experiment_descriptions (pyprobe.cell.readmemodel attribute)": [[12, "pyprobe.cell.ReadmeModel.pybamm_experiment_descriptions", false]], "pybamm_experiment_list (pyprobe.cell.readmemodel attribute)": [[12, "pyprobe.cell.ReadmeModel.pybamm_experiment_list", false]], "pybamm_experiment_list (pyprobe.filters.procedure attribute)": [[18, "pyprobe.filters.Procedure.pybamm_experiment_list", false]], "pyprobe": [[1, "module-pyprobe", false]], "pyprobe.analysis": [[2, "module-pyprobe.analysis", false]], "pyprobe.analysis.base": [[3, "module-pyprobe.analysis.base", false]], "pyprobe.analysis.base.degradation_mode_analysis_functions": [[4, "module-pyprobe.analysis.base.degradation_mode_analysis_functions", false]], "pyprobe.analysis.base.differentiation_functions": [[5, "module-pyprobe.analysis.base.differentiation_functions", false]], "pyprobe.analysis.cycling": [[6, "module-pyprobe.analysis.cycling", false]], "pyprobe.analysis.degradation_mode_analysis": [[7, "module-pyprobe.analysis.degradation_mode_analysis", false]], "pyprobe.analysis.differentiation": [[8, "module-pyprobe.analysis.differentiation", false]], "pyprobe.analysis.pulsing": [[9, "module-pyprobe.analysis.pulsing", false]], "pyprobe.analysis.smoothing": [[10, "module-pyprobe.analysis.smoothing", false]], "pyprobe.analysis.utils": [[11, "module-pyprobe.analysis.utils", false]], "pyprobe.cell": [[12, "module-pyprobe.cell", false]], "pyprobe.cyclers": [[13, "module-pyprobe.cyclers", false]], "pyprobe.cyclers.basecycler": [[14, "module-pyprobe.cyclers.basecycler", false]], "pyprobe.cyclers.biologic": [[15, "module-pyprobe.cyclers.biologic", false]], "pyprobe.cyclers.neware": [[16, "module-pyprobe.cyclers.neware", false]], "pyprobe.dashboard": [[17, "module-pyprobe.dashboard", false]], "pyprobe.filters": [[18, "module-pyprobe.filters", false]], "pyprobe.plot": [[19, "module-pyprobe.plot", false]], "pyprobe.rawdata": [[20, "module-pyprobe.rawdata", false]], "pyprobe.result": [[21, "module-pyprobe.result", false]], "pyprobe.typing": [[22, "module-pyprobe.typing", false]], "pyprobe.units": [[23, "module-pyprobe.units", false]], "pyprobe_dataframe (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.pyprobe_dataframe", false]], "pyprobedatatype (in module pyprobe.typing)": [[22, "pyprobe.typing.PyProBEDataType", false]], "pyproberawdatatype (in module pyprobe.typing)": [[22, "pyprobe.typing.PyProBERawDataType", false]], "quantify_degradation_modes() (pyprobe.analysis.degradation_mode_analysis.dma method)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.quantify_degradation_modes", false]], "quantities (pyprobe.result.result property)": [[21, "pyprobe.result.Result.quantities", false]], "rawdata (class in pyprobe.rawdata)": [[20, "pyprobe.rawdata.RawData", false]], "read_file() (pyprobe.cyclers.basecycler.basecycler static method)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.read_file", false]], "read_file() (pyprobe.cyclers.biologic.biologic static method)": [[15, "pyprobe.cyclers.biologic.Biologic.read_file", false]], "readme_dict (pyprobe.cell.readmemodel attribute)": [[12, "pyprobe.cell.ReadmeModel.readme_dict", false]], "readme_type (pyprobe.cell.readmemodel attribute)": [[12, "pyprobe.cell.ReadmeModel.readme_type", false]], "readmemodel (class in pyprobe.cell)": [[12, "pyprobe.cell.ReadmeModel", false]], "required_columns (pyprobe.analysis.utils.analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.required_columns", false]], "required_type (pyprobe.analysis.utils.analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.required_type", false]], "rest() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.rest", false]], "rest() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.rest", false]], "rest() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.rest", false]], "result (class in pyprobe.result)": [[21, "pyprobe.result.Result", false]], "savgol_smoothing() (pyprobe.analysis.smoothing.smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.savgol_smoothing", false]], "set_color_scheme() (pyprobe.cell.cell static method)": [[12, "pyprobe.cell.Cell.set_color_scheme", false]], "set_reference_capacity() (pyprobe.rawdata.rawdata method)": [[20, "pyprobe.rawdata.RawData.set_reference_capacity", false]], "set_soc() (pyprobe.rawdata.rawdata method)": [[20, "pyprobe.rawdata.RawData.set_SOC", false]], "show() (pyprobe.plot.plot method)": [[19, "pyprobe.plot.Plot.show", false]], "show_image() (pyprobe.plot.plot method)": [[19, "pyprobe.plot.Plot.show_image", false]], "smooth_gradient() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.smooth_gradient", false]], "smoothing (class in pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.Smoothing", false]], "spline_smoothing() (pyprobe.analysis.smoothing.smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.spline_smoothing", false]], "step (class in pyprobe.filters)": [[18, "pyprobe.filters.Step", false]], "step (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.step", false]], "step (pyprobe.cyclers.biologic.biologic property)": [[15, "pyprobe.cyclers.biologic.Biologic.step", false]], "step() (pyprobe.filters.cycle method)": [[18, "pyprobe.filters.Cycle.step", false]], "step() (pyprobe.filters.experiment method)": [[18, "pyprobe.filters.Experiment.step", false]], "step() (pyprobe.filters.procedure method)": [[18, "pyprobe.filters.Procedure.step", false]], "step() (pyprobe.filters.step method)": [[18, "pyprobe.filters.Step.step", false]], "step_descriptions (pyprobe.cell.readmemodel attribute)": [[12, "pyprobe.cell.ReadmeModel.step_descriptions", false]], "step_indices (pyprobe.cell.readmemodel attribute)": [[12, "pyprobe.cell.ReadmeModel.step_indices", false]], "step_numbers (pyprobe.cell.readmemodel attribute)": [[12, "pyprobe.cell.ReadmeModel.step_numbers", false]], "steps_idx (pyprobe.filters.procedure attribute)": [[18, "pyprobe.filters.Procedure.steps_idx", false]], "stoichiometry_limits (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.stoichiometry_limits", false]], "summary() (pyprobe.analysis.cycling.cycling method)": [[6, "pyprobe.analysis.cycling.Cycling.summary", false]], "temperature (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.temperature", false]], "time (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.time", false]], "time (pyprobe.cyclers.neware.neware property)": [[16, "pyprobe.cyclers.neware.Neware.time", false]], "time_unit_dict (pyprobe.units.units attribute)": [[23, "pyprobe.units.Units.time_unit_dict", false]], "title_font_size (pyprobe.plot.plot attribute)": [[19, "pyprobe.plot.Plot.title_font_size", false]], "titles (pyprobe.cell.readmemodel attribute)": [[12, "pyprobe.cell.ReadmeModel.titles", false]], "titles (pyprobe.filters.procedure attribute)": [[18, "pyprobe.filters.Procedure.titles", false]], "to_default_unit() (pyprobe.units.units method)": [[23, "pyprobe.units.Units.to_default_unit", false]], "unit_dict (pyprobe.units.units attribute)": [[23, "pyprobe.units.Units.unit_dict", false]], "units (class in pyprobe.units)": [[23, "pyprobe.units.Units", false]], "validate_input_data_type() (pyprobe.analysis.utils.analysisvalidator method)": [[11, "pyprobe.analysis.utils.AnalysisValidator.validate_input_data_type", false]], "validate_required_columns() (pyprobe.analysis.utils.analysisvalidator method)": [[11, "pyprobe.analysis.utils.AnalysisValidator.validate_required_columns", false]], "variables (pyprobe.analysis.utils.analysisvalidator property)": [[11, "pyprobe.analysis.utils.AnalysisValidator.variables", false]], "voltage (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.voltage", false]], "x_range (pyprobe.plot.plot property)": [[19, "pyprobe.plot.Plot.x_range", false]], "y2_range (pyprobe.plot.plot property)": [[19, "pyprobe.plot.Plot.y2_range", false]], "y_range (pyprobe.plot.plot property)": [[19, "pyprobe.plot.Plot.y_range", false]], "y_sampling_interval() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.y_sampling_interval", false]], "zero_column() (pyprobe.rawdata.rawdata method)": [[20, "pyprobe.rawdata.RawData.zero_column", false]]}, "objects": {"": [[1, 0, 0, "-", "pyprobe"]], "pyprobe": [[2, 0, 0, "-", "analysis"], [12, 0, 0, "-", "cell"], [13, 0, 0, "-", "cyclers"], [17, 0, 0, "-", "dashboard"], [18, 0, 0, "-", "filters"], [19, 0, 0, "-", "plot"], [20, 0, 0, "-", "rawdata"], [21, 0, 0, "-", "result"], [22, 0, 0, "-", "typing"], [23, 0, 0, "-", "units"]], "pyprobe.analysis": [[3, 0, 0, "-", "base"], [6, 0, 0, "-", "cycling"], [7, 0, 0, "-", "degradation_mode_analysis"], [8, 0, 0, "-", "differentiation"], [9, 0, 0, "-", "pulsing"], [10, 0, 0, "-", "smoothing"], [11, 0, 0, "-", "utils"]], "pyprobe.analysis.base": [[4, 0, 0, "-", "degradation_mode_analysis_functions"], [5, 0, 0, "-", "differentiation_functions"]], "pyprobe.analysis.base.degradation_mode_analysis_functions": [[4, 1, 1, "", "average_OCV_curves"], [4, 1, 1, "", "calc_electrode_capacities"], [4, 1, 1, "", "calc_full_cell_OCV"], [4, 1, 1, "", "calculate_dma_parameters"], [4, 1, 1, "", "ocv_curve_fit"]], "pyprobe.analysis.base.differentiation_functions": [[5, 1, 1, "", "calc_gradient_with_LEAN"], [5, 1, 1, "", "get_dx"], [5, 1, 1, "", "get_dy_and_counts"], [5, 1, 1, "", "get_x_sections"], [5, 1, 1, "", "smooth_gradient"], [5, 1, 1, "", "y_sampling_interval"]], "pyprobe.analysis.cycling": [[6, 2, 1, "", "Cycling"]], "pyprobe.analysis.cycling.Cycling": [[6, 3, 1, "", "input_data"], [6, 4, 1, "", "summary"]], "pyprobe.analysis.degradation_mode_analysis": [[7, 2, 1, "", "DMA"]], "pyprobe.analysis.degradation_mode_analysis.DMA": [[7, 4, 1, "", "average_ocvs"], [7, 3, 1, "", "dma_result"], [7, 4, 1, "", "fit_ocv"], [7, 3, 1, "", "fitted_OCV"], [7, 3, 1, "", "input_data"], [7, 4, 1, "", "quantify_degradation_modes"], [7, 3, 1, "", "stoichiometry_limits"]], "pyprobe.analysis.differentiation": [[8, 2, 1, "", "Differentiation"]], "pyprobe.analysis.differentiation.Differentiation": [[8, 4, 1, "", "differentiate_FD"], [8, 4, 1, "", "differentiate_LEAN"], [8, 3, 1, "", "input_data"]], "pyprobe.analysis.pulsing": [[9, 2, 1, "", "Pulsing"]], "pyprobe.analysis.pulsing.Pulsing": [[9, 3, 1, "", "input_data"], [9, 4, 1, "", "pulse"], [9, 4, 1, "", "pulse_rest"], [9, 4, 1, "", "pulse_summary"]], "pyprobe.analysis.smoothing": [[10, 2, 1, "", "Smoothing"]], "pyprobe.analysis.smoothing.Smoothing": [[10, 3, 1, "", "input_data"], [10, 4, 1, "", "level_smoothing"], [10, 4, 1, "", "savgol_smoothing"], [10, 4, 1, "", "spline_smoothing"]], "pyprobe.analysis.utils": [[11, 2, 1, "", "AnalysisValidator"], [11, 1, 1, "", "assemble_array"]], "pyprobe.analysis.utils.AnalysisValidator": [[11, 3, 1, "", "input_data"], [11, 3, 1, "", "required_columns"], [11, 3, 1, "", "required_type"], [11, 4, 1, "", "validate_input_data_type"], [11, 4, 1, "", "validate_required_columns"], [11, 5, 1, "", "variables"]], "pyprobe.cell": [[12, 2, 1, "", "Cell"], [12, 2, 1, "", "ReadmeModel"]], "pyprobe.cell.Cell": [[12, 4, 1, "", "add_procedure"], [12, 3, 1, "", "info"], [12, 4, 1, "", "launch_dashboard"], [12, 4, 1, "", "make_cell_list"], [12, 3, 1, "", "procedure"], [12, 4, 1, "", "process_cycler_file"], [12, 4, 1, "", "process_generic_file"], [12, 4, 1, "", "set_color_scheme"]], "pyprobe.cell.ReadmeModel": [[12, 3, 1, "", "cycle_details"], [12, 4, 1, "", "get_cycle_details"], [12, 4, 1, "", "get_pybamm_experiment"], [12, 4, 1, "", "get_pybamm_experiment_descriptions"], [12, 4, 1, "", "get_pybamm_experiment_list"], [12, 4, 1, "", "get_step_descriptions"], [12, 4, 1, "", "get_step_indices"], [12, 4, 1, "", "get_step_numbers"], [12, 4, 1, "", "model_post_init"], [12, 3, 1, "", "number_of_experiments"], [12, 3, 1, "", "pybamm_experiment"], [12, 3, 1, "", "pybamm_experiment_descriptions"], [12, 3, 1, "", "pybamm_experiment_list"], [12, 3, 1, "", "readme_dict"], [12, 3, 1, "", "readme_type"], [12, 3, 1, "", "step_descriptions"], [12, 3, 1, "", "step_indices"], [12, 3, 1, "", "step_numbers"], [12, 3, 1, "", "titles"]], "pyprobe.cyclers": [[14, 0, 0, "-", "basecycler"], [15, 0, 0, "-", "biologic"], [16, 0, 0, "-", "neware"]], "pyprobe.cyclers.basecycler": [[14, 2, 1, "", "BaseCycler"]], "pyprobe.cyclers.basecycler.BaseCycler": [[14, 5, 1, "", "capacity"], [14, 5, 1, "", "capacity_from_ch_dch"], [14, 5, 1, "", "charge_capacity"], [14, 3, 1, "", "column_dict"], [14, 4, 1, "", "convert_names"], [14, 5, 1, "", "current"], [14, 5, 1, "", "cycle"], [14, 5, 1, "", "date"], [14, 5, 1, "", "discharge_capacity"], [14, 5, 1, "", "event"], [14, 4, 1, "", "get_dataframe_list"], [14, 4, 1, "", "get_imported_dataframe"], [14, 3, 1, "", "input_data_path"], [14, 4, 1, "", "map_columns"], [14, 4, 1, "", "match_unit"], [14, 4, 1, "", "model_post_init"], [14, 5, 1, "", "pyprobe_dataframe"], [14, 4, 1, "", "read_file"], [14, 5, 1, "", "step"], [14, 5, 1, "", "temperature"], [14, 5, 1, "", "time"], [14, 5, 1, "", "voltage"]], "pyprobe.cyclers.biologic": [[15, 2, 1, "", "Biologic"], [15, 2, 1, "", "BiologicMB"]], "pyprobe.cyclers.biologic.Biologic": [[15, 3, 1, "", "column_dict"], [15, 3, 1, "", "input_data_path"], [15, 4, 1, "", "read_file"], [15, 5, 1, "", "step"]], "pyprobe.cyclers.biologic.BiologicMB": [[15, 4, 1, "", "apply_step_correction"], [15, 4, 1, "", "get_imported_dataframe"]], "pyprobe.cyclers.neware": [[16, 2, 1, "", "Neware"]], "pyprobe.cyclers.neware.Neware": [[16, 3, 1, "", "column_dict"], [16, 3, 1, "", "input_data_path"], [16, 5, 1, "", "time"]], "pyprobe.filters": [[18, 2, 1, "", "Cycle"], [18, 2, 1, "", "Experiment"], [18, 2, 1, "", "Procedure"], [18, 2, 1, "", "Step"]], "pyprobe.filters.Cycle": [[18, 3, 1, "", "base_dataframe"], [18, 4, 1, "", "charge"], [18, 4, 1, "", "chargeordischarge"], [18, 3, 1, "", "column_definitions"], [18, 4, 1, "", "constant_current"], [18, 4, 1, "", "constant_voltage"], [18, 4, 1, "", "discharge"], [18, 3, 1, "", "info"], [18, 4, 1, "", "model_post_init"], [18, 4, 1, "", "rest"], [18, 4, 1, "", "step"]], "pyprobe.filters.Experiment": [[18, 3, 1, "", "base_dataframe"], [18, 4, 1, "", "charge"], [18, 4, 1, "", "chargeordischarge"], [18, 3, 1, "", "column_definitions"], [18, 4, 1, "", "constant_current"], [18, 4, 1, "", "constant_voltage"], [18, 4, 1, "", "cycle"], [18, 4, 1, "", "discharge"], [18, 3, 1, "", "info"], [18, 4, 1, "", "model_post_init"], [18, 4, 1, "", "rest"], [18, 4, 1, "", "step"]], "pyprobe.filters.Procedure": [[18, 4, 1, "", "add_external_data"], [18, 3, 1, "", "base_dataframe"], [18, 4, 1, "", "charge"], [18, 4, 1, "", "chargeordischarge"], [18, 3, 1, "", "column_definitions"], [18, 4, 1, "", "constant_current"], [18, 4, 1, "", "constant_voltage"], [18, 4, 1, "", "cycle"], [18, 4, 1, "", "discharge"], [18, 4, 1, "", "experiment"], [18, 5, 1, "", "experiment_names"], [18, 3, 1, "", "info"], [18, 4, 1, "", "load_external_file"], [18, 4, 1, "", "model_post_init"], [18, 3, 1, "", "pybamm_experiment"], [18, 3, 1, "", "pybamm_experiment_list"], [18, 4, 1, "", "rest"], [18, 4, 1, "", "step"], [18, 3, 1, "", "steps_idx"], [18, 3, 1, "", "titles"]], "pyprobe.filters.Step": [[18, 3, 1, "", "base_dataframe"], [18, 3, 1, "", "column_definitions"], [18, 4, 1, "", "constant_current"], [18, 4, 1, "", "constant_voltage"], [18, 3, 1, "", "info"], [18, 4, 1, "", "model_post_init"], [18, 4, 1, "", "step"]], "pyprobe.plot": [[19, 2, 1, "", "Plot"]], "pyprobe.plot.Plot": [[19, 4, 1, "", "add_colorbar"], [19, 4, 1, "", "add_colorscaled_line"], [19, 4, 1, "", "add_line"], [19, 3, 1, "", "axis_font_size"], [19, 3, 1, "", "default_layout"], [19, 5, 1, "", "fig"], [19, 4, 1, "", "make_colorscale"], [19, 4, 1, "", "show"], [19, 4, 1, "", "show_image"], [19, 3, 1, "", "title_font_size"], [19, 5, 1, "", "x_range"], [19, 5, 1, "", "y2_range"], [19, 5, 1, "", "y_range"]], "pyprobe.rawdata": [[20, 2, 1, "", "RawData"]], "pyprobe.rawdata.RawData": [[20, 3, 1, "", "base_dataframe"], [20, 5, 1, "", "capacity"], [20, 3, 1, "", "column_definitions"], [20, 3, 1, "", "info"], [20, 4, 1, "", "model_post_init"], [20, 4, 1, "", "set_SOC"], [20, 4, 1, "", "set_reference_capacity"], [20, 4, 1, "", "zero_column"]], "pyprobe.result": [[21, 2, 1, "", "Result"]], "pyprobe.result.Result": [[21, 4, 1, "", "add_new_data_columns"], [21, 4, 1, "", "array"], [21, 3, 1, "", "base_dataframe"], [21, 4, 1, "", "build"], [21, 4, 1, "", "clean_copy"], [21, 3, 1, "", "column_definitions"], [21, 5, 1, "", "column_list"], [21, 5, 1, "", "contains_lazyframe"], [21, 5, 1, "", "data"], [21, 4, 1, "", "define_column"], [21, 4, 1, "", "get"], [21, 4, 1, "", "get_only"], [21, 3, 1, "", "info"], [21, 4, 1, "", "print_definitions"], [21, 5, 1, "", "quantities"]], "pyprobe.typing": [[22, 6, 1, "", "FilterToCycleType"], [22, 6, 1, "", "FilterToExperimentType"], [22, 6, 1, "", "FilterToStepType"], [22, 6, 1, "", "PyProBEDataType"], [22, 6, 1, "", "PyProBERawDataType"]], "pyprobe.units": [[23, 2, 1, "", "Units"]], "pyprobe.units.Units": [[23, 4, 1, "", "from_default_unit"], [23, 4, 1, "", "from_regexp"], [23, 3, 1, "", "prefix_dict"], [23, 3, 1, "", "time_unit_dict"], [23, 4, 1, "", "to_default_unit"], [23, 3, 1, "", "unit_dict"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property", "6": "py:data"}, "terms": {"": [10, 18, 21, 23, 29, 31, 34, 35, 37, 38, 39, 42, 43, 44, 45, 47, 48], "0": [8, 10, 21, 23, 24, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 43, 44, 47], "000001": 35, "000002": 35, "000003": 35, "000005": 35, "00001": 35, "00004": 35, "0004": 35, "0004023": 35, "00040614": 35, "000464": 35, "001": [23, 35], "001267": 35, "002": 32, "00399931": 35, "004": 30, "00400001": 35, "00400004": 35, "008001": 30, "012001": 30, "016001": 30, "018585": 35, "02": [35, 41], "020002": 30, "020355": 35, "020356": 35, "020357": 35, "020359": 35, "02036": 35, "0205": 36, "020824": 35, "022805": 35, "024002": 30, "026056": 30, "028002": 30, "03": [35, 36], "030002": 36, "030003": 36, "032002": 30, "036003": 30, "04": [29, 30, 31, 32, 34, 35, 37, 41, 47], "040937": 35, "041086": 35, "041138": 35, "041241": 35, "041247": 35, "041296": 35, "04132": 35, "041329": 35, "041362": 35, "04139": 35, "041391": 35, "041392": 35, "041393": 35, "041395": 35, "0428": 36, "04478": 36, "05": 35, "06": [23, 35], "0668": 8, "082022": 35, "09": [23, 35, 41], "0909": 36, "094": 35, "0949": 30, "0x7fc74867cd50": 35, "1": [5, 8, 23, 24, 25, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 43, 47], "10": [5, 8, 29, 30, 31, 32, 34, 35, 37, 47], "100": [30, 31, 35], "1000": [23, 36], "1000000": 23, "100051": [5, 8, 29, 32], "1016": [5, 8, 29, 32], "1059": 8, "11": [28, 31, 34, 35, 37, 43, 47], "119273": 35, "12": [23, 28, 31, 34, 35, 37, 43, 47], "121": 8, "1234": 36, "13": 35, "131485": 30, "14": [19, 31, 35, 36], "15": 36, "164407": 35, "17": [35, 36], "1745": 8, "18": [19, 36], "19": 41, "191": 37, "1919": 30, "192": 37, "193": 37, "197": 35, "1972": 8, "1d": [35, 39], "1e": [23, 32], "2": [25, 29, 30, 31, 32, 34, 35, 36, 37, 39, 42, 44, 45, 47], "20": [34, 35, 47], "2001": 35, "2020": [5, 8, 29, 32, 36], "2024": [35, 41], "21": 35, "210305": 35, "227986": 30, "23": 35, "238": 37, "239": 37, "240": 37, "2417": 8, "245": 37, "246": 37, "246969": 35, "247": 37, "248": 37, "2482": 36, "249": 37, "25": 8, "250": 37, "251": 37, "252": 37, "254": 37, "255": 37, "27": 36, "270001": 36, "27001": 36, "2769": 36, "28448": 35, "28449": 35, "28450": 35, "28451": 35, "28452": 35, "2895": 35, "29": [35, 36, 41], "2962": 35, "2979": 35, "2f": 31, "3": [5, 8, 25, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 42, 43, 47], "30": [34, 35, 36, 47], "301386": 35, "31": 35, "3117": 36, "3120": 36, "32": 35, "324487": 30, "329627": 35, "33": 35, "34": [31, 35, 37], "345855": 30, "35": 35, "36": 35, "3600": 23, "3631": 36, "37": 35, "3741776162": 31, "38": 35, "383": 8, "3830": 8, "3863093695": 31, "39": [30, 31, 32, 35, 36, 37], "390765": 30, "392471": 35, "393179": 35, "397": 35, "4": [25, 29, 30, 31, 32, 34, 35, 36, 37, 39, 45, 47], "40": 35, "400785": 30, "4023": 35, "40614": 35, "41": 35, "420988": 30, "43": 31, "4444": 36, "4513": 35, "455110": 35, "455111": 35, "455112": 35, "455113": 35, "455114": 35, "455_167": 35, "47": 35, "48": 35, "483558": 35, "483559": 35, "483560": 35, "483561": 35, "483562": 35, "4875": 36, "49": 35, "490732": 35, "495": 35, "497": 35, "4ma": [34, 35, 47], "5": [8, 25, 29, 30, 31, 32, 34, 35, 36, 37, 47], "50": [31, 35], "50003": 36, "500426": 36, "51": 35, "5138": 36, "5164": 30, "517489": 30, "554": 41, "5542": 36, "562745": 35, "562746": 35, "562747": 35, "562748": 35, "562749": 35, "565912": 30, "5711": 35, "58": 41, "5842": 36, "5866": 30, "591": 35, "6": [25, 29, 30, 31, 32, 34, 35, 36, 37, 47], "60": 23, "600": 19, "6103": 36, "613991": 30, "620704": 36, "621925": 36, "63": 31, "6334": 30, "640815": 30, "665": 30, "672765": 35, "68": 31, "685915": 30, "7": [8, 25, 29, 30, 31, 32, 34, 35, 36, 37, 47], "705558": 30, "705622": 30, "710493": 30, "7114": 30, "7172": 35, "7197": 35, "7201": 35, "7205": 35, "7208": 35, "725532": 30, "7326": 36, "735555": 30, "735943": 30, "740624": 35, "743512": 35, "747055": 36, "7472": 36, "750596": 30, "775612": 30, "7890": 36, "789_589": 35, "795638": 30, "8": [29, 30, 31, 34, 35, 36, 37, 47], "800": 19, "8022": 30, "805578": 30, "805967": 30, "806994": 30, "8090": 36, "835632": 30, "849927": 36, "85": 36, "8538": 36, "876766": 35, "8987": 30, "899992": 36, "9": [30, 31, 34, 35, 36, 37, 47], "900013": 36, "900663": 30, "903497": 30, "910931": 30, "9159": 36, "9308": 36, "938073181": 31, "959186": 35, "9793": 36, "9934": 30, "999212": 35, "99931": 35, "999406": 35, "999854": 35, "A": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 29, 31, 32, 34, 35, 37, 41, 42, 47], "And": [30, 35, 36], "As": [30, 37], "BY": [29, 32], "But": 37, "By": 25, "For": [18, 24, 25, 35, 37, 40, 41, 43, 45, 47], "If": [5, 10, 18, 24, 25, 29, 35, 37, 41, 44, 47], "In": [24, 25, 28, 36, 37, 40, 41, 43, 47], "It": [24, 25, 26, 28, 37, 39, 41, 43, 44, 47, 48], "Its": 42, "On": 29, "One": [34, 36], "Or": 39, "That": 34, "The": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 35, 37, 39, 41, 42, 43, 44, 45, 47, 48], "Then": [25, 30, 39, 44, 45], "There": 47, "These": [12, 25, 35, 37, 41, 44, 47], "To": [28, 29, 30, 38, 39, 40, 43], "With": [30, 31], "_": 41, "__init__": 37, "__pydantic_validator__": 37, "__tracebackhide__": 37, "_basecycler__context": 14, "_cycle__context": 18, "_experiment__context": 18, "_mb": 41, "_procedure__context": 18, "_rawdata__context": 20, "_readmemodel__context": 12, "_step__context": 18, "abl": [31, 34, 41, 42], "about": [12, 23, 37, 40, 41, 47, 48], "abov": [25, 29, 31, 47], "acceler": 44, "accept": 25, "access": [25, 35, 44, 46], "acquisit": 42, "across": [19, 20, 26], "activ": [28, 43], "ad": [21, 27, 46], "add": [12, 15, 18, 19, 20, 21, 24, 25, 30, 35, 41, 45, 47, 48], "add_colorbar": [1, 19], "add_colorscaled_lin": [1, 19], "add_external_data": [1, 18, 41], "add_lin": [1, 19, 29, 30, 32, 34, 35, 36, 37, 45], "add_new_data_column": [1, 21], "add_procedur": [1, 12, 29, 30, 31, 32, 34, 35, 37, 41], "addit": [12, 25, 40, 41, 48], "addition": 44, "adjust": [24, 31], "after": [9, 30, 39, 41], "ag": 36, "against": [31, 37], "agnost": [24, 41], "ah": [9, 20, 23, 29, 30, 31, 32, 34, 35, 36, 37, 41, 42], "al": [5, 8, 29, 32], "algorithm": [4, 33], "alia": [22, 31], "alias": [22, 25], "align": [29, 37, 44], "all": [8, 10, 12, 14, 24, 25, 26, 29, 31, 39, 41, 44], "allclos": 31, "allow": [24, 25, 26, 29, 34, 40, 44, 47], "almost": 44, "alongsid": [25, 34, 35, 41, 44, 47], "alpha": 5, "alreadi": 41, "also": [25, 30, 32, 36, 37, 40, 44], "altern": [8, 32], "alwai": [25, 40], "amper": 42, "an": [4, 11, 12, 14, 18, 19, 20, 22, 23, 24, 25, 30, 32, 37, 38, 39, 40, 41, 44, 46, 47], "analys": [6, 8, 10, 25, 29, 32, 33, 35, 44, 47], "analysi": [0, 1, 26, 27, 29, 30, 31, 32, 33, 35, 36, 44, 46], "analysis_object": 40, "analysisclass": 40, "analysisvalid": [1, 2, 11, 25, 26, 37], "ani": [4, 11, 12, 14, 18, 20, 24, 25, 28, 35, 37, 39, 40, 41, 43, 44, 45, 47], "anod": [4, 7, 25, 36], "anoth": [18, 24], "api": [38, 40], "appear": [34, 41], "appli": [5, 8, 18, 20, 32, 39], "applic": 29, "apply_step_correct": [13, 15], "approach": [5, 8, 29, 31, 32, 39, 44], "ar": [5, 11, 14, 18, 24, 25, 26, 28, 29, 30, 32, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 47], "arg": [24, 25, 37], "argument": [8, 9, 12, 18, 30, 41, 45], "arrai": [1, 11, 19, 21, 25, 35, 39], "articl": [5, 8], "assembl": 11, "assemble_arrai": [1, 2, 11], "assert": 31, "assign": [25, 40, 41], "assum": [5, 8, 10, 41], "asterisk": [14, 24], "ata": 12, "attribut": [12, 25, 39, 40, 41, 44], "auto": 42, "automat": [24, 26, 28, 30, 42, 47, 48], "avail": [34, 36, 40, 43], "averag": [4, 7, 31, 37], "average_differ": 31, "average_final_differ": 31, "average_ocv": [2, 7, 37], "average_ocv_curv": [2, 3, 4], "averaged_ocv_dma": 37, "ax1": 31, "ax2": 31, "axi": [19, 31], "axis_font_s": [1, 19], "back": 26, "backend": [31, 44], "base": [1, 2, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 27, 32, 37, 39, 42, 45], "base_": 37, "base_datafram": [1, 18, 20, 21, 31, 35, 36, 37, 42], "basecycl": [1, 13, 15, 16, 24], "basemodel": [6, 7, 8, 9, 10, 11, 12, 14, 21, 24, 25, 26, 37], "bat": [15, 41, 42], "batch": 46, "batteri": [5, 6, 8, 9, 12, 14, 15, 16, 18, 24, 29, 30, 32, 41, 44, 47], "becaus": [31, 37], "been": [12, 31, 35, 40, 41, 44], "befor": [6, 18, 41, 47], "begin": [7, 24, 29, 35, 37, 41], "behaviour": 29, "behind": [26, 31, 37], "being": 24, "below": [24, 25, 29, 31, 42, 44], "benefit": 31, "best": 31, "between": [4, 7, 10], "bin": [5, 8, 28, 43], "biolog": [1, 12, 13, 24, 41, 42], "biologic_mb": [41, 42], "biologicmb": [1, 13, 15, 24], "blue": [29, 30, 32, 34, 37], "bool": [6, 10, 19, 21], "bor": [5, 8], "both": 37, "bound": 19, "boxplot": 31, "branch": 44, "break": [29, 30, 31, 32, 34, 35, 37, 44, 47], "break_in": 34, "browser": 44, "buffer": 19, "build": [1, 21, 44], "built": [25, 30, 31, 36, 41, 44, 48], "c": [23, 29, 32, 35], "caihao": [5, 8], "calc_electrode_capac": [2, 3, 4, 25], "calc_full_cell_ocv": [2, 3, 4], "calc_gradient_with_lean": [2, 3, 5], "calcul": [3, 4, 5, 6, 8, 9, 14, 20, 25, 30, 37], "calculate_dma_paramet": [2, 3, 4], "call": [12, 18, 20, 25, 28, 30, 31, 35, 37, 39, 40, 43], "can": [8, 18, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47], "cap": [16, 42], "capabl": 38, "capac": [1, 4, 6, 7, 9, 13, 14, 15, 16, 20, 23, 24, 25, 29, 30, 31, 32, 34, 35, 36, 37, 41, 42], "capacity_from_ch_dch": [13, 14], "care": 31, "carefulli": 30, "case": [24, 34], "cast": 14, "cathod": [4, 7, 25, 36], "caus": 26, "cc": [34, 47], "cc_charg": 34, "cc_discharg": 34, "cd": [28, 43, 44], "cell": [0, 1, 4, 6, 7, 9, 25, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48], "cell_capac": [4, 25], "cell_list": [12, 41], "chain": [26, 39], "chang": [7, 14, 24, 28, 35, 42], "changyong": [5, 8], "channel": [12, 29, 30, 31, 32, 34, 35, 37, 41], "characteris": 32, "charg": [1, 4, 6, 7, 14, 15, 16, 18, 20, 24, 29, 30, 34, 35, 37, 39, 40, 42, 44, 45, 47], "charge_capac": [4, 13, 14], "charge_curr": 4, "charge_differenti": 29, "charge_dqdv": 29, "charge_filt": [7, 37], "charge_numb": 18, "charge_ocv": 4, "charge_result": 7, "charge_soc": 4, "chargeordischarg": [1, 18, 39], "chargeordischarge_numb": 18, "check": [11, 25, 26, 37], "checkout": 43, "chemistri": [29, 30, 31, 32, 34, 35, 37, 41], "chen": 36, "chen2020": 36, "chg": [16, 42], "choos": [29, 47], "circuit": [4, 7, 36], "class": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 33, 35, 38, 39, 40, 42, 44, 45, 48], "classmethod": [12, 14, 21], "clean": 25, "clean_copi": [1, 21, 25], "clearer": 37, "clearli": [25, 32], "clone": [28, 43], "code": [25, 28, 43, 44], "coeffici": [5, 8], "col": 31, "collect": 41, "color": [12, 19, 29, 30, 32, 34, 35, 36, 37], "color_bi": 19, "color_bound": 19, "colorbar": 19, "colormap": 19, "colorscal": 19, "colour": 12, "column": [8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 30, 31, 35, 37, 39, 40, 41, 46, 48], "column_definit": [1, 18, 20, 21, 25, 35], "column_dict": [12, 13, 14, 15, 16, 24], "column_list": [1, 21, 32], "column_nam": [14, 21], "com": [5, 8, 28, 43], "come": [6, 37], "comma": 47, "command": [26, 35, 43, 44], "comment": [29, 32, 34, 35, 36, 37], "commit": 28, "commonli": 44, "commun": 44, "compar": [26, 32, 33], "compat": [25, 44], "complet": [24, 31, 36, 48], "complex": 44, "comput": [10, 25, 29, 31, 40, 44], "concaten": 24, "conda": [28, 43], "condit": 18, "conduct": [25, 36], "consid": [8, 18, 34, 47], "constant": [8, 18, 34], "constant_curr": [1, 18, 29, 34, 37], "constant_current_numb": 18, "constant_voltag": [1, 18, 34], "constant_voltage_numb": 18, "construct": [25, 26, 34], "consum": 47, "contain": [4, 5, 7, 8, 9, 10, 12, 14, 18, 19, 20, 21, 25, 34, 36, 37, 39, 40, 41, 44, 47], "contains_lazyfram": [1, 21], "content": 24, "continu": [19, 44], "contribut": [26, 27, 38, 40, 44], "convers": [23, 24, 29, 31, 42], "convert": [12, 14, 18, 23, 24, 33, 39, 42, 46], "convert_nam": [13, 14], "copi": [21, 24, 25], "core": 44, "correct": [14, 15, 26, 37], "correctli": 26, "correspond": [41, 42, 47], "coulomb": 35, "count": [5, 34, 35, 39, 47], "creat": [17, 18, 19, 21, 23, 25, 28, 29, 30, 31, 32, 34, 35, 37, 40, 41, 43, 45, 48], "critic": 26, "csv": [18, 31, 41, 42], "cumbersom": 47, "cumul": 31, "cumulative_tim": 31, "current": [13, 14, 15, 16, 18, 23, 24, 31, 34, 35, 37, 39, 40, 42], "current_ma": [35, 39], "curv": [4, 7, 10, 29, 32, 36, 37], "custom": 26, "customiz": 48, "cv": [34, 47], "cv_hold": 34, "cycl": [0, 1, 2, 7, 8, 11, 12, 13, 14, 18, 20, 21, 22, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 42, 44, 45, 47], "cycle_3": 34, "cycle_detail": [1, 12], "cycle_numb": 18, "cycler": [0, 1, 12, 27, 29, 30, 31, 32, 34, 35, 37, 44, 46, 47], "cycler_fil": 41, "cycler_file_": 41, "cycler_file_1": 41, "cycler_file_2": 41, "d": [12, 25, 29, 32], "dash": [19, 32, 36], "dashboard": [0, 1, 12, 35], "dashdot": 19, "data": [1, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 36, 37, 40, 43, 44, 45, 46, 47], "data_directori": [29, 30, 31, 32, 34, 35, 37], "data_list": 21, "datafram": [14, 15, 18, 19, 20, 21, 24, 25, 26, 31, 35, 36, 37, 39], "dataframe_column": 14, "dataframe_list": [14, 15], "datapoint": 8, "dataset": [29, 32, 34, 37, 41], "datatyp": [14, 42], "date": [13, 14, 15, 16, 18, 21, 24, 35, 41, 42], "date_column_nam": [18, 21], "datetim": [18, 35, 41, 42], "dchg": [16, 42], "dchg_before_chg": 6, "deal": 37, "declar": [24, 25], "decreas": [14, 42], "deeper": 37, "def": [25, 31, 36, 41], "default": [6, 8, 10, 12, 18, 23, 25, 29, 41], "default_layout": [1, 19], "default_tim": 31, "defin": [3, 14, 21, 24, 25, 30, 36, 37, 41, 44, 47], "define_column": [1, 21], "definit": [18, 20, 21, 25], "degrad": [4, 7, 25, 32, 36, 40, 41], "degradation_mode_analysi": [1, 2, 36, 37], "degradation_mode_analysis_funct": [2, 3, 25], "delai": 31, "delta": [5, 8, 20], "demonstr": [26, 30, 31, 37], "depend": [8, 27, 28, 40, 43], "deprec": 31, "deprecationwarn": 31, "deriv": 10, "describ": [8, 25, 32, 35, 41, 44, 47], "descript": [12, 34, 47], "design": [39, 40, 44], "desir": [10, 43], "detail": [12, 41, 47, 48], "dev": [28, 37], "develop": [28, 29, 38, 40, 44], "df": [15, 31], "diagnosi": [5, 8, 29, 32], "dict": [12, 14, 15, 16, 18, 20, 21, 24, 37, 41], "dictionari": [12, 14, 18, 20, 21, 24, 25, 35, 37, 39, 41, 44, 48], "diff": 29, "differ": [8, 25, 32, 35, 44, 47], "differenti": [1, 2, 5, 25, 33, 36], "differentiate_fd": [2, 8, 25, 32], "differentiate_lean": [2, 8, 29, 32], "differentiation_funct": [2, 3], "differentiation_object": 32, "dimension": 39, "direct": [25, 40], "directli": 39, "directori": [28, 41, 43], "discharg": [1, 4, 6, 7, 14, 15, 16, 18, 24, 29, 30, 31, 32, 34, 35, 37, 39, 40, 42, 47], "discharge_capac": [4, 13, 14], "discharge_curr": 4, "discharge_differenti": [29, 32], "discharge_dqdv": 29, "discharge_filt": [7, 37], "discharge_numb": 18, "discharge_ocv": 4, "discharge_pocv": 40, "discharge_result": [7, 37], "discharge_soc": 4, "discret": [5, 8, 19, 29, 32], "displai": [12, 35, 44, 45], "distinctipi": 12, "distinguish": 48, "dma": [1, 2, 4, 7, 25, 36, 37, 40], "dma_object": [36, 40], "dma_result": [2, 7], "do": [24, 26, 41], "doc": [35, 44], "document": [25, 29, 32, 34, 35, 36, 37, 40, 45, 46, 47], "doe": [14, 24, 41], "doesn": 30, "doi": [5, 8, 29, 32], "done": [24, 25, 28, 41, 47], "dongsheng": [5, 8], "dot": 19, "down": [34, 44], "dqdv": 36, "drop": 31, "dsocdv": 36, "dt": 29, "dtype": [4, 11], "due": [31, 32], "dure": 20, "dva": 32, "dx": 8, "dxdy": [5, 8, 25, 29, 32], "dy": [5, 8], "dydx": [5, 8, 25, 32], "e": [12, 19, 24, 28, 37, 39, 41, 42, 47], "each": [7, 9, 18, 24, 25, 41, 47], "eas": 44, "easi": [25, 44], "easili": [25, 32], "ecel": [15, 24, 42], "edit": 28, "effect": 32, "effici": 35, "either": [5, 8, 20, 25, 28, 39], "elaps": [35, 42], "electrod": [4, 7, 25, 36], "elif": 25, "els": 25, "empti": 12, "enabl": 47, "encourag": [25, 37, 44], "end": [24, 26, 34, 47], "enough": 25, "ensur": [24, 25, 37, 44], "enter": [28, 43], "entir": 34, "environ": [28, 35, 43], "error": [26, 37, 40], "et": [5, 8, 29, 32], "etc": [25, 39, 41], "etran": [5, 8, 29, 32], "etransport": [5, 8, 29, 32], "evalu": [8, 9, 26, 30], "evenli": 8, "event": [13, 14, 18, 31, 35, 37, 42], "everi": 39, "exampl": [8, 24, 25, 26, 28, 29, 30, 31, 32, 34, 36, 37, 38, 40, 41, 43, 47, 48], "excel": [18, 41, 48], "except": 31, "execut": [26, 31], "exist": [24, 25, 35, 37, 40], "exp": 36, "experi": [0, 1, 6, 7, 8, 9, 11, 12, 18, 22, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47], "experiment": [5, 8, 10, 18, 25, 32, 39, 40, 41, 44, 47, 48], "experiment_fold": 41, "experiment_nam": [1, 18, 30], "experiment_object": 37, "experiment_record": 41, "explain": 31, "explor": [32, 38, 44], "expr": [14, 15, 16, 18, 23], "express": [14, 15, 16, 18, 23, 26, 31], "extens": 24, "extern": 18, "extract": [24, 30, 34], "f": [25, 31, 41], "f64": [30, 35, 36], "fair": 44, "fals": [10, 21, 31], "familiar": 39, "fast": 44, "faster": 31, "fastest": 41, "feng": [5, 8, 29, 32], "fetch": 43, "few": [31, 44], "ff00ff": 35, "field": [12, 25, 35, 40, 41], "fig": [1, 19, 29, 30, 31, 32, 34, 36, 37], "figsiz": 31, "figur": [19, 31, 35, 36], "file": [12, 14, 15, 18, 24, 31, 34, 35, 37, 39, 42, 44, 46, 48], "filenam": [12, 29, 30, 31, 32, 34, 35, 37, 41], "filename_funct": 12, "filename_input": [12, 41], "filepath": [14, 15, 18], "fill": 41, "filter": [0, 1, 8, 10, 20, 22, 26, 29, 30, 31, 33, 35, 37, 40, 41, 42, 44, 46, 47], "filtering_column_nam": 21, "filtertocycletyp": [0, 1, 18, 22, 37], "filtertoexperimenttyp": [0, 1, 18, 22], "filtertosteptyp": [0, 1, 22], "final": [26, 30, 31], "final_cycl": [29, 32], "finit": [8, 25, 32], "first": [20, 21, 25, 29, 30, 31, 32, 35, 39, 41, 45, 47], "fit": [4, 7, 10, 33], "fit_ocv": [2, 7, 25, 36, 40], "fitted_curv": 36, "fitted_ocv": [2, 7], "fitting_target": [4, 7, 36], "fitting_target_data": 4, "fix": 20, "flag": 28, "flexibl": 44, "float": [4, 5, 8, 9, 10, 12, 18, 19, 20, 21, 25], "float64": [4, 5, 7, 11, 19, 21, 42], "flowchart": 44, "fly": 29, "folder": [12, 41], "folder_path": [12, 29, 30, 31, 32, 34, 35, 37, 41], "follow": [15, 24, 25, 26, 28, 37, 41, 42, 43, 44, 47, 48], "font": 19, "fork": 28, "form": [24, 25], "format": [12, 14, 16, 18, 24, 25, 31, 33, 37, 44, 46, 47], "found": [14, 26], "four": 44, "frac": 8, "framework": 26, "from": [10, 11, 12, 14, 15, 18, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 42, 44, 46, 47], "from_default_unit": [1, 23], "from_regexp": [1, 23], "full": [4, 7, 30, 31, 36, 39], "full_procedur": 34, "function": [3, 4, 5, 8, 12, 13, 19, 24, 25, 32, 34, 37, 40, 41, 44], "further": [20, 25, 34, 35, 37, 40, 44], "futur": 47, "g": [12, 19, 24, 41], "gener": [12, 19, 36, 40, 41, 42, 44, 47], "get": [1, 5, 12, 21, 29, 31, 33, 37, 38, 39], "get_cycle_detail": [1, 12], "get_dataframe_list": [13, 14], "get_dx": [2, 3, 5], "get_dy_and_count": [2, 3, 5], "get_imported_datafram": [13, 14, 15, 24], "get_onli": [1, 21], "get_pybamm_experi": [1, 12], "get_pybamm_experiment_descript": [1, 12], "get_pybamm_experiment_list": [1, 12], "get_step_descript": [1, 12], "get_step_indic": [1, 12], "get_step_numb": [1, 12], "get_x_sect": [2, 3, 5], "git": [28, 43], "github": [28, 43], "gitt": 33, "give": [12, 25, 32], "given": 47, "go": [19, 24, 29, 30, 32, 36], "golai": 10, "good": [25, 44], "gradient": [5, 8, 10, 25, 29, 32], "gradient_data": 25, "gradient_result": 25, "gradient_titl": 25, "graph": 31, "graphic": 44, "graphit": 36, "graphite_lgm50_ocp_chen2020": 36, "green": [32, 34], "gregori": [5, 8], "gt": [35, 37], "guess": [4, 7], "gui": 44, "guid": [24, 38, 40, 44], "guidanc": [41, 44, 46], "guidelin": 44, "h": 23, "ha": [25, 29, 31, 32, 35, 36, 37, 39, 41, 44, 45], "half": [4, 7, 36], "han": [5, 8], "hand": 31, "happen": 37, "have": [12, 18, 24, 25, 39, 40, 41, 43], "he": [5, 8, 29, 32], "head": 24, "header": [24, 42], "health": 6, "height": 19, "help": [25, 37, 48], "here": 25, "hex": 12, "high": 36, "highest": [4, 25], "hint": 22, "hold": [34, 35, 39, 47], "hook": 28, "host": 44, "hostedtoolcach": 37, "hour": [34, 35, 42, 47], "how": [29, 37, 38], "howev": [24, 25, 29, 30, 37, 44, 47], "hr": [23, 29, 30, 32], "html": 44, "http": [5, 8, 28, 29, 32, 37, 43], "huang": [5, 8], "human": [44, 47], "i": [5, 6, 8, 10, 11, 14, 15, 18, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48], "i64": 35, "ica": 32, "identifi": [14, 15, 16, 37, 41, 42, 47], "illustr": 31, "imag": 19, "immedi": 35, "imperialcollegelondon": [28, 43], "implement": [31, 40], "import": [13, 14, 15, 18, 24, 26, 29, 30, 31, 32, 34, 35, 36, 37, 39, 42, 43, 46, 47], "importing_column": 18, "includ": [8, 9, 12, 21, 24, 25, 30, 39, 41, 42, 44, 47, 48], "inclus": [34, 47], "incorrect": 40, "incorrect_data_dict": 37, "incorrect_datafram": 37, "increas": [14, 15, 42, 47], "increment": 32, "index": [16, 21, 24, 34, 39, 42, 44, 47], "indic": [12, 14, 18, 21, 24, 39], "individu": [30, 35, 39], "info": [1, 12, 18, 20, 21, 25, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 44, 48], "info_dictionari": [29, 30, 31, 32, 34, 35, 37, 41], "inform": [12, 21, 23, 25, 37, 41, 47, 48], "inherit": [24, 25, 26, 37], "initi": [4, 7, 14, 20, 30, 31, 34, 35, 47], "initial_charg": 34, "inlin": 31, "inner": 47, "input": [7, 10, 11, 12, 14, 15, 16, 24, 25, 26, 33, 36, 44, 46], "input_data": [2, 6, 7, 8, 9, 10, 11, 25, 29, 30, 32, 35, 36, 37, 40], "input_data_path": [13, 14, 15, 16, 24], "input_filenam": [12, 31, 35, 41], "input_name_gener": 41, "input_quant": 23, "input_typ": 37, "input_unit": 23, "input_valu": 37, "insid": [25, 28], "instal": [27, 46], "instanc": [23, 25, 30, 37, 40, 41, 45, 47], "instanti": 40, "instead": [25, 29, 31, 47], "instruct": [30, 34, 42, 47], "int": [5, 8, 9, 10, 12, 18, 20, 21], "int64": 42, "integ": [5, 8, 10], "integr": 40, "intens": 31, "interact": [25, 26, 29, 32, 34, 35, 36, 37, 44], "interfac": [39, 44], "intern": 40, "interpol": [18, 41], "interpret": [18, 41], "interv": [5, 8, 10, 32], "introduct": [38, 46], "intuit": 44, "inventori": [4, 25, 36], "ipykernel_2247": 31, "is_in": 31, "is_instance_of": 37, "isin": 31, "its": [14, 24, 25, 31, 34, 41, 47], "itself": 25, "j": [5, 8, 29, 32], "jin": [5, 8], "jupyt": 43, "just": [8, 24, 47], "k": [5, 8, 23, 29, 32], "keep": [25, 48], "kei": [9, 12, 18, 30, 35, 36, 41, 48], "keyword": [12, 41, 47], "know": 37, "kwarg": 12, "label": [19, 29, 30, 31, 32, 34, 36, 37], "lam_n": [4, 7], "lam_p": [4, 7], "languag": [34, 39, 44], "languang": [5, 8], "larg": 24, "last": [29, 32, 37, 47], "later": [25, 28, 43], "launch": [12, 35], "launch_dashboard": [1, 12, 35], "layout": [19, 31], "laz": 37, "lazi": [26, 31], "lazyfram": [14, 15, 18, 20, 21, 26, 31, 35, 37], "lean": [8, 32, 33], "lean_dqdv": 32, "learn": 38, "least": 7, "legend": 19, "length": [10, 18], "lenient": 25, "less": 39, "level": [8, 32], "level_smooothed_data": 32, "level_smooth": [2, 10, 32], "level_smoothed_data_dvdq": 32, "li": [5, 8, 36], "li_inventori": [4, 25], "liaw": [5, 8, 29, 32], "lib": 37, "librari": [30, 31, 44], "life": [7, 41], "light": [8, 25], "like": [24, 26, 34, 37, 41, 42, 44], "limit": [4, 7, 25, 36, 47], "line": [19, 37, 44, 45, 47], "linspac": 36, "list": [5, 8, 9, 11, 12, 14, 15, 18, 19, 21, 24, 30, 34, 41, 43, 47, 48], "lithium": [4, 25], "littl": [25, 44], "liu": [5, 8], "ll": 30, "lli": [4, 7], "load": [14, 15, 16, 18, 24, 35], "load_external_fil": [1, 18], "local": [28, 35, 43, 44], "longest": [8, 29], "look": [29, 32, 42, 47], "loop": [6, 34, 47], "low": 36, "lowest": [4, 25], "lt": [31, 35, 37], "lu": [5, 8], "m": [23, 28, 29, 32, 43], "ma": [34, 35, 39, 47], "machin": [28, 43], "made": 31, "mah": 29, "mai": [12, 24, 25, 37, 40, 41], "main": [26, 28, 34, 37, 41, 44], "maintain": 44, "make": [12, 24, 28, 38, 44, 46], "make_boxplot": 31, "make_cell_list": [1, 12, 41], "make_colorscal": [1, 19], "manipul": [25, 26], "manual": [31, 47], "manufactur": 41, "map": [12, 14], "map_column": [13, 14], "mark": 42, "match": [14, 23, 41], "match_unit": [13, 14], "mathemat": 25, "matplotlib": [31, 36], "matplotlibdeprecationwarn": 31, "matrix": 8, "maximis": 44, "maximum": [15, 18, 20], "mb": 15, "mean": [26, 28, 31, 34, 41], "measur": [31, 42], "measure_panda": 31, "measure_pyprob": 31, "mengchao": [5, 8], "merla": [5, 8, 29, 32], "metadata": 44, "method": [2, 7, 8, 10, 14, 15, 18, 20, 24, 26, 27, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 44], "method_paramet": 40, "metric": 30, "midpoint": 5, "might": [26, 42], "min": 23, "minggao": [5, 8], "minimum": 10, "minut": [34, 35, 47], "miss": 37, "mode": [4, 7, 25, 28, 36, 40], "model": [20, 26, 41], "model_post_init": [1, 12, 13, 14, 18, 20], "model_typ": 37, "modifi": 24, "modul": [0, 1, 2, 3, 13, 24, 26, 27, 35, 37, 38, 39, 40, 44, 45], "modulo": [15, 41, 42], "modulobat": 24, "monoton": [10, 15, 32], "more": [21, 25, 37, 39, 41], "most": [24, 25, 26, 31, 37, 47], "mpt": [41, 42], "much": [31, 37], "multipl": [5, 8, 24, 25, 26, 29, 32, 35, 39, 46, 47, 48], "must": [10, 12, 18, 21, 25, 28, 30, 31, 35, 37, 40, 41, 43, 47], "n": [15, 23, 24, 28, 39, 42, 43], "n_color": 12, "n_pt": 36, "name": [8, 10, 11, 12, 14, 18, 20, 21, 23, 25, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 45, 47, 48], "natur": [34, 39, 44], "navig": 44, "ndarrai": [4, 5, 7, 11, 19, 21, 25, 35], "ne_capac": [4, 25], "ne_stoich_limit": 4, "neccessari": 25, "necessari": 36, "need": [24, 25, 31, 40, 44, 48], "neg": 36, "nest": 47, "net": 35, "never": 37, "new": [20, 21, 24, 43, 44], "new_column_definit": 20, "new_column_nam": 20, "new_data": 21, "newar": [1, 12, 13, 29, 30, 31, 32, 34, 35, 37, 41, 42, 47], "nmc": 36, "nmc622": [29, 30, 31, 32, 34, 35, 37, 41], "nmc_lgm50_ocp_chen2020": 36, "nois": 32, "noisi": [8, 10], "nomin": [29, 30, 31, 32, 34, 35, 37, 41], "none": [7, 10, 11, 12, 14, 18, 19, 20, 21, 25, 37], "normal": [31, 35, 36, 37, 41], "notat": 39, "note": 24, "notebook": 43, "notic": 37, "now": [32, 36, 37, 47], "np": [4, 5, 7, 19, 21, 25, 29, 31, 32, 34, 36], "null": 35, "number": [9, 12, 14, 15, 24, 25, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 47], "number_of_experi": [1, 12], "numer": [18, 39], "numpi": [8, 21, 25, 29, 31, 32, 34, 35, 36, 39], "object": [6, 7, 8, 9, 10, 12, 18, 19, 20, 21, 23, 25, 29, 30, 32, 34, 35, 36, 37, 40, 44, 45, 46], "ocp": [4, 7, 36], "ocp_n": [4, 7, 36, 40], "ocp_p": [4, 7, 36, 40], "ocv": [4, 7, 9, 29, 30, 32, 33, 37, 40], "ocv_curve_fit": [2, 3, 4], "ocv_result": 36, "odd": 10, "offer": [5, 8, 32], "often": 25, "ohm": [9, 23, 30], "old": 31, "omit": 37, "onc": [24, 31, 35, 40, 41, 42, 44], "one": [21, 24, 31, 37, 39, 43, 47], "onli": [24, 25, 26, 29, 30, 31, 37, 41, 44, 48], "open": [4, 7, 34, 36, 44], "opt": 37, "optim": [4, 7, 31], "option": [8, 10, 12, 14, 18, 20, 21, 25, 29], "order": [10, 41], "org": [5, 8, 29, 32], "origin": 35, "other": [12, 25, 37, 40, 44, 45], "otherwis": 21, "our": [30, 36], "out": [29, 30, 32, 34, 35, 36, 37, 47], "outer": 47, "output": 41, "output_filenam": [12, 31, 35, 41], "output_name_gener": 41, "outsid": [35, 37], "ouyang": [5, 8, 29, 32], "overal": 31, "overhead": 31, "overrid": 24, "own": [24, 25, 28, 34, 47], "p": 23, "packag": [0, 25, 28, 29, 32, 37, 43, 44], "pair": 41, "panda": 31, "paper": [5, 8], "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 25, 30, 31, 40], "parametr": 41, "parquet": [12, 18, 29, 30, 31, 32, 34, 35, 37, 41], "pars": 24, "part": [35, 40, 47], "particular": [37, 44], "particularli": 47, "pass": [20, 25, 35, 39, 40, 42], "patch_artist": 31, "patel": [5, 8], "path": [12, 14, 15, 16, 18, 24, 28, 41, 43], "pattern": [14, 23, 41], "pd": 31, "pe_capac": [4, 25], "pe_stoich_limit": 4, "peng": [5, 8], "perform": [18, 24, 25, 26, 33, 37, 40, 41, 44], "period": 29, "perman": 20, "pii": [5, 8], "ping": [5, 8], "pip": [28, 43], "pl": [14, 15, 16, 18, 20, 21, 23, 25, 36, 37], "place": 14, "plan": 47, "plot": [0, 1, 12, 21, 26, 29, 30, 31, 32, 34, 35, 36, 37, 40, 41, 44, 46, 48], "plotli": [19, 45], "plt": [31, 36], "pocv": [37, 40], "pocv_cycl": 37, "point": [8, 10, 19, 25, 30, 35], "polar": [14, 15, 16, 18, 20, 21, 27, 31, 36, 37, 39, 42], "polynomi": 10, "polynomial_ord": 10, "polyord": 10, "poor": 32, "popul": [25, 41], "popular": [31, 32], "portabl": [25, 44], "posit": [10, 36], "possibl": [25, 39], "post": [14, 20, 44], "potenti": [4, 7], "power": 34, "practic": 44, "pre": 28, "predic": 31, "prefix_dict": [1, 23], "preprocess": [12, 46], "present": 11, "prevent": 37, "previou": [15, 34, 47], "previous": 41, "principl": [26, 44], "print": [21, 26, 29, 30, 31, 32, 34, 35, 36, 37, 41], "print_definit": [1, 21], "prior": 32, "problem": 37, "procedur": [0, 1, 6, 7, 8, 9, 11, 12, 18, 22, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 44, 45, 47], "procedure_nam": [12, 29, 30, 31, 32, 34, 35, 37, 41], "process": [12, 14, 15, 16, 24, 25, 31, 39, 41, 42, 43, 44], "process_cycler_fil": [1, 12, 31, 35, 41], "process_generic_fil": [1, 12], "processed_cycler_fil": 41, "processed_cycler_file_": 41, "processed_cycler_file_cycl": 41, "processed_cycler_file_rpt": 41, "produc": [12, 36, 44], "program": [42, 44], "project": 31, "properti": [11, 14, 15, 16, 18, 19, 20, 21, 24, 35], "provid": [7, 8, 9, 20, 25, 26, 30, 33, 34, 35, 40, 41, 47], "pseudo": [29, 32, 40], "puls": [1, 2, 29, 30, 34, 35, 44, 47], "pulse_numb": 9, "pulse_object": 30, "pulse_rest": [2, 9, 29], "pulse_summari": [2, 9, 30], "pulsing_experi": 30, "purpl": [34, 37], "purpos": 47, "put": 36, "py": [31, 37], "pybamm": [12, 34, 35, 47], "pybamm_experi": [1, 12, 18, 35], "pybamm_experiment_descript": [1, 12], "pybamm_experiment_list": [1, 12, 18, 35], "pydant": [24, 25, 27, 37], "pyplot": [31, 36], "pyprob": [24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 39, 40, 43, 45, 46, 47, 48], "pyprobe_datafram": [13, 14], "pyprobedatatyp": [0, 1, 22, 25], "pyproberawdatatyp": [0, 1, 8, 22, 25], "pytest": 37, "python": [28, 34, 37, 39, 43, 44], "python3": 37, "q": [15, 24, 42], "quantifi": 7, "quantify_degradation_mod": [2, 7, 25], "quantiti": [1, 14, 21, 23, 45], "queri": 31, "quickli": [34, 35, 44], "r": [5, 8, 28, 34, 43], "r0": [9, 30], "r_10": 30, "r_time": [9, 30], "rais": [5, 25], "rang": [18, 19, 31, 36], "rank": 31, "rate": 8, "raw": [8, 9, 10, 22, 25, 32, 35], "raw_data_dvdq": 32, "rawdata": [0, 1, 7, 8, 11, 18, 22, 25, 26, 33, 42, 45, 46], "re": [24, 29, 32], "read": [12, 14, 15, 24, 25, 31, 34, 40], "read_csv": 31, "read_fil": [13, 14, 15, 24], "read_parquet": 31, "readabl": [25, 44, 47], "readm": [12, 34, 39, 41, 44, 46], "readme_dict": [1, 12], "readme_nam": 12, "readme_typ": [1, 12], "readmemodel": [0, 1, 12], "real": 47, "reason": 30, "recent": 37, "recogn": 24, "recommend": [28, 43], "record": [12, 41, 46], "record_filepath": [12, 41], "red": [29, 30, 32, 34, 36, 37], "reduc": 24, "refer": [5, 8, 20, 30, 41], "referenc": 20, "reference_capac": 20, "reference_charg": [20, 30], "reference_stoichiometry_limit": 7, "reflect": 28, "regular": 23, "regular_express": 23, "rel": [20, 42], "relat": [24, 48], "releas": [43, 44], "reliabl": [5, 8, 29, 32], "remain": [20, 25], "remov": [21, 31, 32], "ren": [5, 8], "renam": [18, 31], "repeat": [31, 42, 47], "repetit": 14, "replac": [25, 31], "repositori": [25, 28, 43, 44], "repres": 5, "request": [26, 31], "requir": [11, 14, 24, 25, 28, 30, 31, 35, 37, 40, 41, 42, 43, 44, 48], "required_column": [2, 11, 25, 37], "required_typ": [2, 11, 25, 37], "resampl": 10, "reset": 39, "resist": [9, 23, 30], "respect": 10, "rest": [1, 9, 18, 25, 29, 34, 35, 39, 47], "rest_0": 34, "rest_1": 34, "rest_numb": [9, 18], "result": [0, 1, 6, 7, 8, 9, 10, 11, 19, 20, 22, 25, 26, 30, 31, 32, 35, 36, 37, 39, 40, 44, 45], "retriev": [25, 34, 39], "return": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 25, 31, 35, 36, 37, 39, 40, 41], "rig": 12, "right": 31, "root_fold": 41, "rpt": [41, 44], "ruih": [5, 8], "run": [12, 28, 31, 35, 41, 43, 44, 48], "s2590116820300084": [5, 8], "sake": [29, 32, 34, 35, 36, 37], "same": [10, 24, 41, 47], "sampl": [5, 8, 10, 29, 30, 31, 32, 34, 35, 37, 41], "sample_data": [29, 30, 31, 32, 34, 35, 37], "sample_data_newar": [29, 30, 31, 32, 34, 35, 37], "santhanagopalan": [5, 8], "save": [25, 41], "savgol_smooth": [2, 10], "savitzki": 10, "scale": 19, "scan": 31, "scene": [26, 37], "scheme": 12, "scienc": [5, 8], "sciencedirect": [5, 8], "script": [17, 43], "second": [9, 21, 31, 34, 35, 36, 41, 45, 47], "secondari": 19, "secondary_i": 19, "section": [5, 8, 29, 34, 35, 40, 41, 42, 44, 47], "see": [37, 38, 40, 41, 44, 45], "select": [31, 34, 39, 40], "self": [25, 37], "self_inst": 37, "separ": [30, 34, 43, 47], "seper": [34, 47], "seri": [21, 31, 41], "set": [12, 24, 26, 28, 29, 31, 36, 37], "set_color_schem": [1, 12], "set_reference_capac": [1, 20], "set_soc": [1, 20, 30, 37], "set_titl": 31, "set_vis": 31, "set_ylabel": 31, "setup": [27, 44, 48], "shape": [21, 30, 35, 36, 37], "sharei": 31, "shortcut": 46, "should": [24, 25, 37, 43, 47], "show": [1, 19, 29, 31, 32, 34, 35, 36, 37, 45], "show_imag": [1, 19, 29, 30, 32, 34, 35, 36, 37], "showflier": 31, "showlegend": 19, "shown": 44, "shriram": [5, 8], "simpl": [25, 36, 39, 40, 44], "simplest": 24, "simpli": [3, 24, 25, 39, 44], "simplifi": 44, "sinc": [31, 35], "singl": [14, 21, 41, 42, 47], "sit": 44, "site": 37, "size": [5, 8, 19], "skip": [34, 47], "slice": 5, "slower": 31, "smooth": [1, 2, 5, 8, 25, 32], "smooth_gradi": [2, 3, 5], "smoother": 32, "smoothing_filt": 8, "smoothing_lambda": [10, 32], "so": [15, 25, 26, 29, 32, 34, 35, 37, 39, 41, 47], "soc": [4, 9, 20, 25, 30, 36, 37], "soh": [4, 6, 7, 35], "solid": 19, "some": [24, 25, 34, 35, 37, 41, 47], "sometim": 24, "sourc": [18, 24, 28, 41, 43], "space": [5, 8, 29], "special": 39, "specif": [24, 37, 40, 44], "specifi": [10, 20, 21, 25, 39], "speed": [31, 41], "spline": [10, 32], "spline_smooth": [2, 10, 32], "spline_smoothed_data": 32, "spline_smoothed_data_dvdq": 32, "split": [5, 34], "stabl": 43, "stage": 44, "standard": [24, 25, 33, 37, 41, 42], "start": [24, 25, 29, 33, 34, 37, 42, 47], "start_tim": 31, "state": [6, 30, 32], "static": [7, 12, 14, 15, 19, 23], "statist": 9, "step": [0, 1, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 24, 25, 28, 31, 34, 35, 36, 37, 39, 41, 42, 43, 44, 47], "step_descript": [1, 12], "step_indic": [1, 12], "step_numb": [1, 12, 18], "steps_idx": [1, 18, 35], "still": 34, "sto": 36, "stoichiometri": [4, 7, 25, 36], "stoichiometry_limit": [2, 7, 25, 36, 40], "storag": 26, "store": [21, 23, 25, 34, 37, 41, 42, 44, 47], "str": [4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 31], "streamlit": 17, "strength": 34, "strict": 25, "stricter": [25, 37], "string": [12, 24, 34, 39, 41, 47], "structur": 46, "style": 19, "submodul": [0, 25], "subpackag": 0, "subplot": 31, "summari": [2, 6, 9, 30, 35], "summaris": [9, 42, 44], "support": [18, 31, 41, 46], "syntax": 47, "synthet": 36, "t": [30, 31, 37], "t1": 16, "tabl": 42, "tag": 43, "take": 30, "taken": 42, "tanh": 36, "target": [4, 10], "target_column": [10, 32], "tell": 37, "temperatur": [13, 14, 15, 16, 23, 24, 35], "templat": 19, "tempt": 25, "termin": 35, "test": [12, 18, 20, 21, 29, 30, 31, 32, 34, 35, 37, 41, 44, 47], "testabl": 25, "text": 36, "than": [25, 31, 37, 39], "thei": [14, 15, 25, 35, 37, 41], "them": [18, 24, 34, 37, 38, 40, 41], "therefor": [37, 39, 47], "thi": [8, 12, 15, 18, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 46, 47], "third": [34, 44, 45], "those": 44, "three": 34, "through": [24, 26, 35], "throughout": [26, 41], "throughput": 35, "tick_label": 31, "tickfont": 19, "tight_layout": 31, "time": [9, 10, 13, 14, 15, 16, 18, 21, 23, 24, 29, 30, 31, 32, 34, 35, 37, 41, 42, 45, 47], "time_unit_dict": [1, 23], "timeit": 31, "timeseri": 41, "timestamp": [18, 35, 42], "titl": [1, 12, 18, 19, 34, 35, 47], "title_font_s": [1, 19], "tmp": 31, "to_default_unit": [1, 23], "togeth": 26, "told": 37, "too": [35, 47], "tool": [37, 44], "top": 25, "total": 47, "total_time_panda": 31, "total_time_polar": 31, "traceback": 37, "track": 48, "treat": 47, "tree_format": 31, "true": [6, 10, 19, 21, 31, 32, 37], "try": 37, "tupl": [4, 5, 7, 11, 12, 21, 25], "twice": 42, "two": [7, 29, 34, 36, 41, 43, 47], "txt": [28, 42, 43], "type": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 35, 37, 39, 40, 45], "u32": 30, "u_eq": 36, "uncom": 35, "under": 24, "undergo": 41, "undergon": 41, "underli": 25, "underpin": 25, "understand": 44, "unexpect": 37, "unifomli": 8, "uniformli": [5, 29], "union": [20, 21, 37], "uniqu": [31, 42], "unique_cycl": 31, "unique_ev": 31, "unit": [0, 1, 14, 21, 24, 29, 35, 39, 42], "unit_dict": [1, 23], "unset": 24, "until": [30, 31, 34, 35, 47], "up": [24, 26, 31, 38, 41, 44], "updat": [37, 43], "upon": 20, "upward": 47, "url": [5, 8], "us": [4, 8, 10, 12, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48], "user": [20, 25, 26, 30, 32, 37, 38, 39, 44, 48], "usual": 41, "util": [1, 2], "v": [9, 23, 29, 30, 31, 32, 34, 35, 36, 37, 39, 42, 45, 47], "v0": 43, "valid": [25, 26, 33, 40], "validate_input_data_typ": [2, 11], "validate_python": 37, "validate_required_column": [2, 11], "validationerror": 37, "valu": [5, 14, 18, 20, 30, 31, 37, 41, 42, 47], "value_error": 37, "valueerror": [5, 25], "variabl": [2, 8, 10, 11, 18, 24, 25], "variant": [37, 39, 40], "vector": [5, 36], "venv": [28, 43], "veri": 24, "verifi": [37, 41], "version": 43, "vert": 31, "viridi": 19, "virtual": [28, 43], "visit": 37, "visualis": 44, "volt": 42, "voltag": [13, 14, 15, 16, 18, 23, 24, 29, 30, 31, 33, 34, 35, 36, 37, 39, 42, 45], "voltage_panda": 31, "voltage_pyprob": 31, "w": 23, "wa": 42, "wai": [25, 34, 41], "wang": [5, 8], "want": 18, "we": [25, 29, 30, 31, 32, 34, 35, 36, 37], "web": 44, "well": 48, "weng": [5, 8, 29, 32], "were": [37, 42], "when": [12, 21, 24, 25, 26, 29, 30, 35, 37, 39, 40, 42, 47, 48], "whenev": 37, "where": [24, 31, 41, 47], "wherea": 31, "whether": [6, 19, 21], "which": [8, 9, 20, 24, 25, 26, 28, 29, 30, 32, 34, 37, 40, 41, 43, 44, 47, 48], "whichev": 29, "while": [24, 25, 44], "who": 39, "why": 47, "width": 19, "wildcard": 41, "window": 10, "window_length": 10, "wish": [28, 40, 43], "with_column": 31, "within": [24, 37, 40, 47], "without": [21, 25], "work": [24, 25, 26, 28, 30, 37, 43, 46], "workflow": 41, "worksheet": 12, "worksheet_nam": [12, 41], "would": 37, "wrapper": [8, 25], "write": [14, 25, 41, 44, 46], "written": [37, 44, 47], "www": [5, 8], "x": [5, 8, 10, 19, 25, 29, 32, 35, 36, 37, 45], "x64": 37, "x_data": 25, "x_guess": [4, 7, 36, 40], "x_ne": [4, 7, 36, 40], "x_ne_hi": [4, 25, 36], "x_ne_lo": [4, 25, 36], "x_pe": [4, 7, 36, 40], "x_pe_hi": [4, 25, 36], "x_pe_lo": [4, 25, 36], "x_rang": [1, 19], "xaxi": 19, "xiangm": [5, 8], "xlabel": 36, "xlsx": [12, 31, 35, 41, 42], "xueb": [5, 8], "xuemin": [5, 8], "xune": [5, 8], "y": [5, 8, 19, 25, 29, 31, 32, 35, 36, 37, 45], "y2_rang": [1, 19], "y_data": 25, "y_rang": [1, 19], "y_sampling_interv": [2, 3, 5], "yaml": [12, 34, 39, 41, 47], "yan": [5, 8], "yann": [5, 8], "yatish": [5, 8], "yaxi": [19, 31], "yaxis_titl": 30, "ye": 42, "yi": [5, 8], "ylabel": [31, 36], "you": [18, 24, 25, 28, 29, 32, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47], "your": [24, 25, 26, 28, 29, 35, 40, 41, 43, 44, 47], "yu": [5, 8], "z": 36, "zero": [20, 24, 29, 31, 34, 39], "zero_column": [1, 20], "zhao": [5, 8], "\u00b5": 23, "\u03bc": 35}, "titles": ["pyprobe", "pyprobe package", "pyprobe.analysis package", "pyprobe.analysis.base package", "pyprobe.analysis.base.degradation_mode_analysis_functions module", "pyprobe.analysis.base.differentiation_functions module", "pyprobe.analysis.cycling module", "pyprobe.analysis.degradation_mode_analysis module", "pyprobe.analysis.differentiation module", "pyprobe.analysis.pulsing module", "pyprobe.analysis.smoothing module", "pyprobe.analysis.utils module", "pyprobe.cell module", "pyprobe.cyclers package", "pyprobe.cyclers.basecycler module", "pyprobe.cyclers.biologic module", "pyprobe.cyclers.neware module", "pyprobe.dashboard module", "pyprobe.filters module", "pyprobe.plot module", "pyprobe.rawdata module", "pyprobe.result module", "pyprobe.typing module", "pyprobe.units module", "Adding a Cycler", "Contributing to the Analysis Module", "Dependency Guide", "Developer Guide", "Installation", "Differentiating with the LEAN algorithm", "Analysing GITT data", "Comparing PyProBE Performance", "Differentiating voltage data", "Examples", "Filtering data", "Getting started with PyProBE", "OCV Fitting", "Providing Valid Inputs", "PyProBE documentation", "Accessing Data", "Analysis", "Importing Data", "Input Data Guidance", "Installation", "Introduction", "Plotting", "User Guide", "Writing a README file", "Writing an Experiment record"], "titleterms": {"access": 39, "ad": [24, 41], "algorithm": 29, "an": 48, "analys": 30, "analysi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 37, 40], "base": [3, 4, 5, 25], "basecycl": 14, "batch": 41, "biolog": 15, "cell": [12, 41], "class": 37, "column": 42, "compar": 31, "contribut": 25, "convert": [35, 41], "cycl": 6, "cycler": [13, 14, 15, 16, 24, 41, 42], "dashboard": 17, "data": [30, 32, 34, 35, 39, 41, 42], "degradation_mode_analysi": 7, "degradation_mode_analysis_funct": 4, "depend": 26, "develop": 27, "differenti": [8, 29, 32], "differentiation_funct": 5, "document": [38, 44], "exampl": 33, "experi": 48, "file": [41, 47], "filter": [18, 34, 39], "fit": 36, "format": [35, 41, 42], "from": 41, "get": 35, "gitt": 30, "guid": [26, 27, 46], "guidanc": 42, "import": 41, "input": [37, 41, 42], "instal": [28, 43], "introduct": 44, "lean": 29, "make": 41, "method": 25, "modul": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "multipl": 41, "newar": 16, "object": [39, 41], "ocv": 36, "packag": [1, 2, 3, 13], "perform": 31, "plot": [19, 45], "polar": 26, "preprocess": 41, "provid": 37, "puls": 9, "pydant": 26, "pyprob": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 35, 38, 41, 42, 44], "rawdata": [20, 37, 39], "readm": 47, "record": 48, "result": 21, "setup": 25, "shortcut": 47, "smooth": 10, "standard": 35, "start": 35, "structur": 44, "submodul": [1, 2, 3, 13], "subpackag": [1, 2], "support": 42, "thi": 44, "type": 22, "unit": 23, "user": 46, "util": 11, "valid": 37, "voltag": 32, "work": 41, "write": [47, 48]}})