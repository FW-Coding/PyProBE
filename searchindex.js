Search.setIndex({"alltitles": {"Accessing Data": [[46, null]], "Adding a Cycler": [[30, null]], "Adding data not from a cycler": [[48, "adding-data-not-from-a-cycler"]], "Adding data to a cell object": [[48, "adding-data-to-a-cell-object"]], "Analysing GITT data": [[36, null]], "Analysis": [[47, null]], "Analysis Module Validation": [[43, "Analysis-Module-Validation"]], "Base": [[31, "base"]], "Batch preprocessing": [[48, "batch-preprocessing"]], "Comparing PyProBE Performance": [[37, null]], "Contributing to the Analysis Module": [[31, null]], "Convert data to standard format": [[41, "Convert-data-to-standard-format"]], "Converting data to PyProBE Format": [[48, "converting-data-to-pyprobe-format"]], "Dependency Guide": [[32, null]], "Developer Guide": [[33, null]], "Differentiating voltage data": [[38, null]], "Differentiating with the LEAN algorithm": [[35, null]], "Examples": [[39, null]], "Filtering": [[46, "filtering"]], "Filtering data": [[40, null]], "Functions": [[31, "functions"]], "Getting started with PyProBE": [[41, null]], "Importing Data": [[48, null]], "Input Data Guidance": [[49, null]], "Installation": [[34, null], [50, null]], "Introduction": [[51, null]], "Making a cell object": [[48, "making-a-cell-object"]], "OCV Fitting": [[42, null]], "Plotting": [[52, null]], "Polars": [[32, "polars"]], "Providing Valid Inputs": [[43, null]], "PyProBE Structure": [[51, "pyprobe-structure"]], "PyProBE data columns": [[49, "pyprobe-data-columns"]], "PyProBE documentation": [[45, null]], "Pydantic": [[32, "pydantic"]], "RawData Validation": [[43, "RawData-Validation"]], "RawData objects": [[46, "rawdata-objects"]], "Sharing Data": [[44, null]], "Shortcuts": [[54, "shortcuts"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [13, "submodules"]], "Subpackages": [[1, "subpackages"], [2, "subpackages"]], "Supported cyclers and formats": [[49, "supported-cyclers-and-formats"]], "The PyProBE README format": [[54, "the-pyprobe-readme-format"]], "The YAML format": [[54, "the-yaml-format"]], "This documentation": [[51, "this-documentation"]], "User Guide": [[53, null]], "Working with multiple input files": [[48, "working-with-multiple-input-files"]], "Writing a README file": [[54, null]], "Writing an Experiment record": [[55, null]], "pyprobe": [[0, null]], "pyprobe package": [[1, null]], "pyprobe.analysis package": [[2, null]], "pyprobe.analysis.base package": [[3, null]], "pyprobe.analysis.base.degradation_mode_analysis_functions module": [[4, null]], "pyprobe.analysis.base.differentiation_functions module": [[5, null]], "pyprobe.analysis.cycling module": [[6, null]], "pyprobe.analysis.degradation_mode_analysis module": [[7, null]], "pyprobe.analysis.differentiation module": [[8, null]], "pyprobe.analysis.pulsing module": [[9, null]], "pyprobe.analysis.smoothing module": [[10, null]], "pyprobe.analysis.utils module": [[11, null]], "pyprobe.cell module": [[12, null]], "pyprobe.cyclers package": [[13, null]], "pyprobe.cyclers.arbin module": [[14, null]], "pyprobe.cyclers.basecycler module": [[15, null]], "pyprobe.cyclers.basytec module": [[16, null]], "pyprobe.cyclers.biologic module": [[17, null]], "pyprobe.cyclers.maccor module": [[18, null]], "pyprobe.cyclers.neware module": [[19, null]], "pyprobe.dashboard module": [[20, null]], "pyprobe.filters module": [[21, null]], "pyprobe.plot module": [[22, null]], "pyprobe.pyprobe_types module": [[23, null]], "pyprobe.rawdata module": [[24, null]], "pyprobe.readme_processor module": [[25, null]], "pyprobe.result module": [[26, null]], "pyprobe.typing module": [[27, null]], "pyprobe.units module": [[28, null]], "pyprobe.utils module": [[29, null]]}, "docnames": ["api/modules", "api/pyprobe", "api/pyprobe.analysis", "api/pyprobe.analysis.base", "api/pyprobe.analysis.base.degradation_mode_analysis_functions", "api/pyprobe.analysis.base.differentiation_functions", "api/pyprobe.analysis.cycling", "api/pyprobe.analysis.degradation_mode_analysis", "api/pyprobe.analysis.differentiation", "api/pyprobe.analysis.pulsing", "api/pyprobe.analysis.smoothing", "api/pyprobe.analysis.utils", "api/pyprobe.cell", "api/pyprobe.cyclers", "api/pyprobe.cyclers.arbin", "api/pyprobe.cyclers.basecycler", "api/pyprobe.cyclers.basytec", "api/pyprobe.cyclers.biologic", "api/pyprobe.cyclers.maccor", "api/pyprobe.cyclers.neware", "api/pyprobe.dashboard", "api/pyprobe.filters", "api/pyprobe.plot", "api/pyprobe.pyprobe_types", "api/pyprobe.rawdata", "api/pyprobe.readme_processor", "api/pyprobe.result", "api/pyprobe.typing", "api/pyprobe.units", "api/pyprobe.utils", "developer_guide/adding_a_cycler", "developer_guide/contributing_to_the_analysis_module", "developer_guide/dependency_guide", "developer_guide/developer_guide", "developer_guide/developer_installation", "examples/LEAN-differentiation", "examples/analysing-GITT-data", "examples/comparing-pyprobe-performance", "examples/differentiating-voltage-data", "examples/examples", "examples/filtering-data", "examples/getting-started", "examples/ocv-fitting", "examples/providing-valid-inputs", "examples/sharing-data", "index", "user_guide/accessing_data", "user_guide/analysis", "user_guide/importing_data", "user_guide/input_data_guidance", "user_guide/installation", "user_guide/introduction", "user_guide/plotting", "user_guide/user_guide", "user_guide/writing_a_readme_file", "user_guide/writing_an_experiment_record"], "envversion": {"nbsphinx": 4, "sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["api/modules.rst", "api/pyprobe.rst", "api/pyprobe.analysis.rst", "api/pyprobe.analysis.base.rst", "api/pyprobe.analysis.base.degradation_mode_analysis_functions.rst", "api/pyprobe.analysis.base.differentiation_functions.rst", "api/pyprobe.analysis.cycling.rst", "api/pyprobe.analysis.degradation_mode_analysis.rst", "api/pyprobe.analysis.differentiation.rst", "api/pyprobe.analysis.pulsing.rst", "api/pyprobe.analysis.smoothing.rst", "api/pyprobe.analysis.utils.rst", "api/pyprobe.cell.rst", "api/pyprobe.cyclers.rst", "api/pyprobe.cyclers.arbin.rst", "api/pyprobe.cyclers.basecycler.rst", "api/pyprobe.cyclers.basytec.rst", "api/pyprobe.cyclers.biologic.rst", "api/pyprobe.cyclers.maccor.rst", "api/pyprobe.cyclers.neware.rst", "api/pyprobe.dashboard.rst", "api/pyprobe.filters.rst", "api/pyprobe.plot.rst", "api/pyprobe.pyprobe_types.rst", "api/pyprobe.rawdata.rst", "api/pyprobe.readme_processor.rst", "api/pyprobe.result.rst", "api/pyprobe.typing.rst", "api/pyprobe.units.rst", "api/pyprobe.utils.rst", "developer_guide/adding_a_cycler.rst", "developer_guide/contributing_to_the_analysis_module.rst", "developer_guide/dependency_guide.rst", "developer_guide/developer_guide.rst", "developer_guide/developer_installation.rst", "examples/LEAN-differentiation.ipynb", "examples/analysing-GITT-data.ipynb", "examples/comparing-pyprobe-performance.ipynb", "examples/differentiating-voltage-data.ipynb", "examples/examples.rst", "examples/filtering-data.ipynb", "examples/getting-started.ipynb", "examples/ocv-fitting.ipynb", "examples/providing-valid-inputs.ipynb", "examples/sharing-data.ipynb", "index.rst", "user_guide/accessing_data.rst", "user_guide/analysis.rst", "user_guide/importing_data.rst", "user_guide/input_data_guidance.rst", "user_guide/installation.rst", "user_guide/introduction.rst", "user_guide/plotting.rst", "user_guide/user_guide.rst", "user_guide/writing_a_readme_file.rst", "user_guide/writing_an_experiment_record.rst"], "indexentries": {"add_colorbar() (plot method)": [[22, "pyprobe.plot.Plot.add_colorbar", false]], "add_colorscaled_line() (plot method)": [[22, "pyprobe.plot.Plot.add_colorscaled_line", false]], "add_external_data() (procedure method)": [[21, "pyprobe.filters.Procedure.add_external_data", false]], "add_line() (plot method)": [[22, "pyprobe.plot.Plot.add_line", false]], "add_new_data_columns() (result method)": [[26, "pyprobe.result.Result.add_new_data_columns", false]], "add_procedure() (cell method)": [[12, "pyprobe.cell.Cell.add_procedure", false]], "akima_interpolator() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.akima_interpolator", false]], "apply_step_correction() (biologicmb static method)": [[17, "pyprobe.cyclers.biologic.BiologicMB.apply_step_correction", false]], "archive() (cell method)": [[12, "pyprobe.cell.Cell.archive", false]], "array() (result method)": [[26, "pyprobe.result.Result.array", false]], "assemble_array() (in module pyprobe.analysis.utils)": [[11, "pyprobe.analysis.utils.assemble_array", false]], "average_ocv_curves() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.average_OCV_curves", false]], "average_ocvs() (in module pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.average_ocvs", false]], "axis_font_size (plot attribute)": [[22, "pyprobe.plot.Plot.axis_font_size", false]], "base_dataframe (result attribute)": [[26, "pyprobe.result.Result.base_dataframe", false]], "build() (result class method)": [[26, "pyprobe.result.Result.build", false]], "calc_electrode_capacities() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_electrode_capacities", false]], "calc_full_cell_ocv() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_full_cell_OCV", false]], "calc_full_cell_ocv_composite() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_full_cell_OCV_composite", false]], "calc_gradient_with_lean() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.calc_gradient_with_LEAN", false]], "calculate_dma_parameters() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calculate_dma_parameters", false]], "capacity (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.capacity", false]], "capacity (maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.capacity", false]], "capacity (neware property)": [[19, "pyprobe.cyclers.neware.Neware.capacity", false]], "capacity (rawdata property)": [[24, "pyprobe.rawdata.RawData.capacity", false]], "capacity_from_ch_dch (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.capacity_from_ch_dch", false]], "charge() (cycle method)": [[21, "pyprobe.filters.Cycle.charge", false]], "charge() (experiment method)": [[21, "pyprobe.filters.Experiment.charge", false]], "charge() (procedure method)": [[21, "pyprobe.filters.Procedure.charge", false]], "charge_capacity (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.charge_capacity", false]], "charge_capacity (maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.charge_capacity", false]], "charge_capacity (neware property)": [[19, "pyprobe.cyclers.neware.Neware.charge_capacity", false]], "chargeordischarge() (cycle method)": [[21, "pyprobe.filters.Cycle.chargeordischarge", false]], "chargeordischarge() (experiment method)": [[21, "pyprobe.filters.Experiment.chargeordischarge", false]], "chargeordischarge() (procedure method)": [[21, "pyprobe.filters.Procedure.chargeordischarge", false]], "check_and_set_name() (cell class method)": [[12, "pyprobe.cell.Cell.check_and_set_name", false]], "check_required_columns() (rawdata class method)": [[24, "pyprobe.rawdata.RawData.check_required_columns", false]], "clean_copy() (result method)": [[26, "pyprobe.result.Result.clean_copy", false]], "column_definitions (rawdata attribute)": [[24, "pyprobe.rawdata.RawData.column_definitions", false]], "column_definitions (result attribute)": [[26, "pyprobe.result.Result.column_definitions", false]], "column_dict (arbin attribute)": [[14, "pyprobe.cyclers.arbin.Arbin.column_dict", false]], "column_dict (basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.column_dict", false]], "column_dict (basytec attribute)": [[16, "pyprobe.cyclers.basytec.Basytec.column_dict", false]], "column_dict (biologic attribute)": [[17, "pyprobe.cyclers.biologic.Biologic.column_dict", false]], "column_dict (maccor attribute)": [[18, "pyprobe.cyclers.maccor.Maccor.column_dict", false]], "column_dict (neware attribute)": [[19, "pyprobe.cyclers.neware.Neware.column_dict", false]], "column_list (result property)": [[26, "pyprobe.result.Result.column_list", false]], "compositeocp (class in pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.CompositeOCP", false]], "constant_current() (cycle method)": [[21, "pyprobe.filters.Cycle.constant_current", false]], "constant_current() (experiment method)": [[21, "pyprobe.filters.Experiment.constant_current", false]], "constant_current() (procedure method)": [[21, "pyprobe.filters.Procedure.constant_current", false]], "constant_current() (step method)": [[21, "pyprobe.filters.Step.constant_current", false]], "constant_voltage() (cycle method)": [[21, "pyprobe.filters.Cycle.constant_voltage", false]], "constant_voltage() (experiment method)": [[21, "pyprobe.filters.Experiment.constant_voltage", false]], "constant_voltage() (procedure method)": [[21, "pyprobe.filters.Procedure.constant_voltage", false]], "constant_voltage() (step method)": [[21, "pyprobe.filters.Step.constant_voltage", false]], "contains_lazyframe (result property)": [[26, "pyprobe.result.Result.contains_lazyframe", false]], "cubic_interpolator() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.cubic_interpolator", false]], "current (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.current", false]], "cycle() (experiment method)": [[21, "pyprobe.filters.Experiment.cycle", false]], "cycle() (procedure method)": [[21, "pyprobe.filters.Procedure.cycle", false]], "cycle_info (cycle attribute)": [[21, "pyprobe.filters.Cycle.cycle_info", false]], "cycle_info (experiment attribute)": [[21, "pyprobe.filters.Experiment.cycle_info", false]], "cycle_info (procedure attribute)": [[21, "pyprobe.filters.Procedure.cycle_info", false]], "data (result property)": [[26, "pyprobe.result.Result.data", false]], "date (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.date", false]], "date (maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.date", false]], "datetime_format (arbin attribute)": [[14, "pyprobe.cyclers.arbin.Arbin.datetime_format", false]], "datetime_format (basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.datetime_format", false]], "datetime_format (maccor attribute)": [[18, "pyprobe.cyclers.maccor.Maccor.datetime_format", false]], "default_layout (plot attribute)": [[22, "pyprobe.plot.Plot.default_layout", false]], "define_column() (result method)": [[26, "pyprobe.result.Result.define_column", false]], "differentiate_fd() (differentiation method)": [[8, "pyprobe.analysis.differentiation.Differentiation.differentiate_FD", false]], "differentiate_lean() (differentiation method)": [[8, "pyprobe.analysis.differentiation.Differentiation.differentiate_LEAN", false]], "differentiate_lean() (in module pyprobe.analysis.differentiation)": [[8, "pyprobe.analysis.differentiation.differentiate_LEAN", false]], "discharge() (cycle method)": [[21, "pyprobe.filters.Cycle.discharge", false]], "discharge() (experiment method)": [[21, "pyprobe.filters.Experiment.discharge", false]], "discharge() (procedure method)": [[21, "pyprobe.filters.Procedure.discharge", false]], "discharge_capacity (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.discharge_capacity", false]], "discharge_capacity (maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.discharge_capacity", false]], "discharge_capacity (neware property)": [[19, "pyprobe.cyclers.neware.Neware.discharge_capacity", false]], "downsample() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.downsample", false]], "downsample() (smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.downsample", false]], "eval (compositeocp property)": [[7, "pyprobe.analysis.degradation_mode_analysis.CompositeOCP.eval", false]], "eval (ocp property)": [[7, "pyprobe.analysis.degradation_mode_analysis.OCP.eval", false]], "event (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.event", false]], "experiment() (procedure method)": [[21, "pyprobe.filters.Procedure.experiment", false]], "experiment_names (procedure property)": [[21, "pyprobe.filters.Procedure.experiment_names", false]], "experimentorcycletype (in module pyprobe.pyprobe_types)": [[23, "pyprobe.pyprobe_types.ExperimentOrCycleType", false]], "extend() (result method)": [[26, "pyprobe.result.Result.extend", false]], "fig (plot property)": [[22, "pyprobe.plot.Plot.fig", false]], "filtertocycletype (in module pyprobe.pyprobe_types)": [[23, "pyprobe.pyprobe_types.FilterToCycleType", false]], "filtertoexperimenttype (in module pyprobe.pyprobe_types)": [[23, "pyprobe.pyprobe_types.FilterToExperimentType", false]], "filtertosteptype (in module pyprobe.pyprobe_types)": [[23, "pyprobe.pyprobe_types.FilterToStepType", false]], "flatten_list() (in module pyprobe.utils)": [[29, "pyprobe.utils.flatten_list", false]], "from_data() (compositeocp static method)": [[7, "pyprobe.analysis.degradation_mode_analysis.CompositeOCP.from_data", false]], "from_data() (ocp static method)": [[7, "pyprobe.analysis.degradation_mode_analysis.OCP.from_data", false]], "from_default_unit() (units method)": [[28, "pyprobe.units.Units.from_default_unit", false]], "from_expression() (ocp static method)": [[7, "pyprobe.analysis.degradation_mode_analysis.OCP.from_expression", false]], "get() (result method)": [[26, "pyprobe.result.Result.get", false]], "get_cycle_column() (in module pyprobe.filters)": [[21, "pyprobe.filters.get_cycle_column", false]], "get_dx() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_dx", false]], "get_dy_and_counts() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_dy_and_counts", false]], "get_imported_dataframe() (basecycler method)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.get_imported_dataframe", false]], "get_imported_dataframe() (biologicmb method)": [[17, "pyprobe.cyclers.biologic.BiologicMB.get_imported_dataframe", false]], "get_ocv_curve() (in module pyprobe.analysis.pulsing)": [[9, "pyprobe.analysis.pulsing.get_ocv_curve", false]], "get_only() (result method)": [[26, "pyprobe.result.Result.get_only", false]], "get_resistances() (in module pyprobe.analysis.pulsing)": [[9, "pyprobe.analysis.pulsing.get_resistances", false]], "get_x_sections() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_x_sections", false]], "grad (compositeocp property)": [[7, "pyprobe.analysis.degradation_mode_analysis.CompositeOCP.grad", false]], "grad (ocp property)": [[7, "pyprobe.analysis.degradation_mode_analysis.OCP.grad", false]], "gradient() (in module pyprobe.analysis.differentiation)": [[8, "pyprobe.analysis.differentiation.gradient", false]], "import_and_validate_data() (basecycler method)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.import_and_validate_data", false]], "import_pybamm_solution() (cell method)": [[12, "pyprobe.cell.Cell.import_pybamm_solution", false]], "info (cell attribute)": [[12, "pyprobe.cell.Cell.info", false]], "info (result attribute)": [[26, "pyprobe.result.Result.info", false]], "input_data (analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.input_data", false]], "input_data (cycling attribute)": [[6, "pyprobe.analysis.cycling.Cycling.input_data", false]], "input_data (differentiation attribute)": [[8, "pyprobe.analysis.differentiation.Differentiation.input_data", false]], "input_data (pulsing attribute)": [[9, "pyprobe.analysis.pulsing.Pulsing.input_data", false]], "input_data (smoothing attribute)": [[10, "pyprobe.analysis.smoothing.Smoothing.input_data", false]], "input_data_path (arbin attribute)": [[14, "pyprobe.cyclers.arbin.Arbin.input_data_path", false]], "input_data_path (basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.input_data_path", false]], "input_data_path (basytec attribute)": [[16, "pyprobe.cyclers.basytec.Basytec.input_data_path", false]], "input_data_path (biologic attribute)": [[17, "pyprobe.cyclers.biologic.Biologic.input_data_path", false]], "input_data_path (maccor attribute)": [[18, "pyprobe.cyclers.maccor.Maccor.input_data_path", false]], "input_data_path (neware attribute)": [[19, "pyprobe.cyclers.neware.Neware.input_data_path", false]], "join() (result method)": [[26, "pyprobe.result.Result.join", false]], "launch_dashboard() (in module pyprobe.dashboard)": [[20, "pyprobe.dashboard.launch_dashboard", false]], "level_smoothing() (smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.level_smoothing", false]], "linear_interpolator() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.linear_interpolator", false]], "load_archive() (in module pyprobe.cell)": [[12, "pyprobe.cell.load_archive", false]], "load_external_file() (procedure method)": [[21, "pyprobe.filters.Procedure.load_external_file", false]], "make_cell_list() (in module pyprobe.cell)": [[12, "pyprobe.cell.make_cell_list", false]], "make_colorscale() (plot static method)": [[22, "pyprobe.plot.Plot.make_colorscale", false]], "module": [[1, "module-pyprobe", false], [2, "module-pyprobe.analysis", false], [3, "module-pyprobe.analysis.base", false], [4, "module-pyprobe.analysis.base.degradation_mode_analysis_functions", false], [5, "module-pyprobe.analysis.base.differentiation_functions", false], [6, "module-pyprobe.analysis.cycling", false], [7, "module-pyprobe.analysis.degradation_mode_analysis", false], [8, "module-pyprobe.analysis.differentiation", false], [9, "module-pyprobe.analysis.pulsing", false], [10, "module-pyprobe.analysis.smoothing", false], [11, "module-pyprobe.analysis.utils", false], [12, "module-pyprobe.cell", false], [13, "module-pyprobe.cyclers", false], [14, "module-pyprobe.cyclers.arbin", false], [15, "module-pyprobe.cyclers.basecycler", false], [16, "module-pyprobe.cyclers.basytec", false], [17, "module-pyprobe.cyclers.biologic", false], [18, "module-pyprobe.cyclers.maccor", false], [19, "module-pyprobe.cyclers.neware", false], [20, "module-pyprobe.dashboard", false], [21, "module-pyprobe.filters", false], [22, "module-pyprobe.plot", false], [23, "module-pyprobe.pyprobe_types", false], [24, "module-pyprobe.rawdata", false], [25, "module-pyprobe.readme_processor", false], [26, "module-pyprobe.result", false], [28, "module-pyprobe.units", false], [29, "module-pyprobe.utils", false]], "ocp (class in pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.OCP", false]], "ocv_curve_fit() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.ocv_curve_fit", false]], "pchip_interpolator() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.pchip_interpolator", false]], "plot (class in pyprobe.plot)": [[22, "pyprobe.plot.Plot", false]], "prefix_dict (units attribute)": [[28, "pyprobe.units.Units.prefix_dict", false]], "print_definitions() (result method)": [[26, "pyprobe.result.Result.print_definitions", false]], "procedure (cell attribute)": [[12, "pyprobe.cell.Cell.procedure", false]], "process_cycler_file() (cell method)": [[12, "pyprobe.cell.Cell.process_cycler_file", false]], "process_generic_file() (cell method)": [[12, "pyprobe.cell.Cell.process_generic_file", false]], "process_readme() (in module pyprobe.readme_processor)": [[25, "pyprobe.readme_processor.process_readme", false]], "pulse() (pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse", false]], "pulse_rest() (pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse_rest", false]], "pulse_summary() (pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse_summary", false]], "pybamm_experiment (rawdata property)": [[24, "pyprobe.rawdata.RawData.pybamm_experiment", false]], "pyprobe": [[1, "module-pyprobe", false]], "pyprobe.analysis": [[2, "module-pyprobe.analysis", false]], "pyprobe.analysis.base": [[3, "module-pyprobe.analysis.base", false]], "pyprobe.analysis.base.degradation_mode_analysis_functions": [[4, "module-pyprobe.analysis.base.degradation_mode_analysis_functions", false]], "pyprobe.analysis.base.differentiation_functions": [[5, "module-pyprobe.analysis.base.differentiation_functions", false]], "pyprobe.analysis.cycling": [[6, "module-pyprobe.analysis.cycling", false]], "pyprobe.analysis.degradation_mode_analysis": [[7, "module-pyprobe.analysis.degradation_mode_analysis", false]], "pyprobe.analysis.differentiation": [[8, "module-pyprobe.analysis.differentiation", false]], "pyprobe.analysis.pulsing": [[9, "module-pyprobe.analysis.pulsing", false]], "pyprobe.analysis.smoothing": [[10, "module-pyprobe.analysis.smoothing", false]], "pyprobe.analysis.utils": [[11, "module-pyprobe.analysis.utils", false]], "pyprobe.cell": [[12, "module-pyprobe.cell", false]], "pyprobe.cyclers": [[13, "module-pyprobe.cyclers", false]], "pyprobe.cyclers.arbin": [[14, "module-pyprobe.cyclers.arbin", false]], "pyprobe.cyclers.basecycler": [[15, "module-pyprobe.cyclers.basecycler", false]], "pyprobe.cyclers.basytec": [[16, "module-pyprobe.cyclers.basytec", false]], "pyprobe.cyclers.biologic": [[17, "module-pyprobe.cyclers.biologic", false]], "pyprobe.cyclers.maccor": [[18, "module-pyprobe.cyclers.maccor", false]], "pyprobe.cyclers.neware": [[19, "module-pyprobe.cyclers.neware", false]], "pyprobe.dashboard": [[20, "module-pyprobe.dashboard", false]], "pyprobe.filters": [[21, "module-pyprobe.filters", false]], "pyprobe.plot": [[22, "module-pyprobe.plot", false]], "pyprobe.pyprobe_types": [[23, "module-pyprobe.pyprobe_types", false]], "pyprobe.rawdata": [[24, "module-pyprobe.rawdata", false]], "pyprobe.readme_processor": [[25, "module-pyprobe.readme_processor", false]], "pyprobe.result": [[26, "module-pyprobe.result", false]], "pyprobe.units": [[28, "module-pyprobe.units", false]], "pyprobe.utils": [[29, "module-pyprobe.utils", false]], "pyprobe_dataframe (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.pyprobe_dataframe", false]], "pyprobedatatype (in module pyprobe.pyprobe_types)": [[23, "pyprobe.pyprobe_types.PyProBEDataType", false]], "pyproberawdatatype (in module pyprobe.pyprobe_types)": [[23, "pyprobe.pyprobe_types.PyProBERawDataType", false]], "quantify_degradation_modes() (in module pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.quantify_degradation_modes", false]], "quantities (result property)": [[26, "pyprobe.result.Result.quantities", false]], "read_file() (basecycler static method)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.read_file", false]], "read_file() (basytec static method)": [[16, "pyprobe.cyclers.basytec.Basytec.read_file", false]], "read_file() (biologic static method)": [[17, "pyprobe.cyclers.biologic.Biologic.read_file", false]], "read_file() (maccor static method)": [[18, "pyprobe.cyclers.maccor.Maccor.read_file", false]], "read_file() (neware static method)": [[19, "pyprobe.cyclers.neware.Neware.read_file", false]], "readme_dict (procedure attribute)": [[21, "pyprobe.filters.Procedure.readme_dict", false]], "readmemodel (class in pyprobe.readme_processor)": [[25, "pyprobe.readme_processor.ReadmeModel", false]], "remove_experiment() (procedure method)": [[21, "pyprobe.filters.Procedure.remove_experiment", false]], "required_columns (analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.required_columns", false]], "rest() (cycle method)": [[21, "pyprobe.filters.Cycle.rest", false]], "rest() (experiment method)": [[21, "pyprobe.filters.Experiment.rest", false]], "rest() (procedure method)": [[21, "pyprobe.filters.Procedure.rest", false]], "run_batch_dma_parallel() (in module pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.run_batch_dma_parallel", false]], "run_batch_dma_sequential() (in module pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.run_batch_dma_sequential", false]], "run_ocv_curve_fit() (in module pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.run_ocv_curve_fit", false]], "savgol_smoothing() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.savgol_smoothing", false]], "savgol_smoothing() (smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.savgol_smoothing", false]], "set_reference_capacity() (rawdata method)": [[24, "pyprobe.rawdata.RawData.set_reference_capacity", false]], "set_soc() (rawdata method)": [[24, "pyprobe.rawdata.RawData.set_SOC", false]], "show() (plot method)": [[22, "pyprobe.plot.Plot.show", false]], "show_image() (plot method)": [[22, "pyprobe.plot.Plot.show_image", false]], "smooth_gradient() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.smooth_gradient", false]], "spline_smoothing() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.spline_smoothing", false]], "spline_smoothing() (smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.spline_smoothing", false]], "step (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.step", false]], "step() (cycle method)": [[21, "pyprobe.filters.Cycle.step", false]], "step() (experiment method)": [[21, "pyprobe.filters.Experiment.step", false]], "step() (procedure method)": [[21, "pyprobe.filters.Procedure.step", false]], "step() (step method)": [[21, "pyprobe.filters.Step.step", false]], "step_descriptions (rawdata attribute)": [[24, "pyprobe.rawdata.RawData.step_descriptions", false]], "summary() (cycling method)": [[6, "pyprobe.analysis.cycling.Cycling.summary", false]], "summary() (in module pyprobe.analysis.cycling)": [[6, "pyprobe.analysis.cycling.summary", false]], "temperature (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.temperature", false]], "time (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.time", false]], "time (neware property)": [[19, "pyprobe.cyclers.neware.Neware.time", false]], "time_unit_dict (units attribute)": [[28, "pyprobe.units.Units.time_unit_dict", false]], "title_font_size (plot attribute)": [[22, "pyprobe.plot.Plot.title_font_size", false]], "to_default_unit() (units method)": [[28, "pyprobe.units.Units.to_default_unit", false]], "unit_dict (units attribute)": [[28, "pyprobe.units.Units.unit_dict", false]], "unit_from_regexp() (in module pyprobe.units)": [[28, "pyprobe.units.unit_from_regexp", false]], "units (class in pyprobe.units)": [[28, "pyprobe.units.Units", false]], "validate_required_columns() (analysisvalidator method)": [[11, "pyprobe.analysis.utils.AnalysisValidator.validate_required_columns", false]], "variables (analysisvalidator property)": [[11, "pyprobe.analysis.utils.AnalysisValidator.variables", false]], "voltage (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.voltage", false]], "x_range (plot property)": [[22, "pyprobe.plot.Plot.x_range", false]], "y2_range (plot property)": [[22, "pyprobe.plot.Plot.y2_range", false]], "y_range (plot property)": [[22, "pyprobe.plot.Plot.y_range", false]], "y_sampling_interval() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.y_sampling_interval", false]], "zero_column() (rawdata method)": [[24, "pyprobe.rawdata.RawData.zero_column", false]]}, "objects": {"": [[1, 0, 0, "-", "pyprobe"]], "pyprobe": [[2, 0, 0, "-", "analysis"], [12, 0, 0, "-", "cell"], [13, 0, 0, "-", "cyclers"], [20, 0, 0, "-", "dashboard"], [21, 0, 0, "-", "filters"], [22, 0, 0, "-", "plot"], [23, 0, 0, "-", "pyprobe_types"], [24, 0, 0, "-", "rawdata"], [25, 0, 0, "-", "readme_processor"], [26, 0, 0, "-", "result"], [28, 0, 0, "-", "units"], [29, 0, 0, "-", "utils"]], "pyprobe.analysis": [[3, 0, 0, "-", "base"], [6, 0, 0, "-", "cycling"], [7, 0, 0, "-", "degradation_mode_analysis"], [8, 0, 0, "-", "differentiation"], [9, 0, 0, "-", "pulsing"], [10, 0, 0, "-", "smoothing"], [11, 0, 0, "-", "utils"]], "pyprobe.analysis.base": [[4, 0, 0, "-", "degradation_mode_analysis_functions"], [5, 0, 0, "-", "differentiation_functions"]], "pyprobe.analysis.base.degradation_mode_analysis_functions": [[4, 1, 1, "", "average_OCV_curves"], [4, 1, 1, "", "calc_electrode_capacities"], [4, 1, 1, "", "calc_full_cell_OCV"], [4, 1, 1, "", "calc_full_cell_OCV_composite"], [4, 1, 1, "", "calculate_dma_parameters"], [4, 1, 1, "", "ocv_curve_fit"]], "pyprobe.analysis.base.differentiation_functions": [[5, 1, 1, "", "calc_gradient_with_LEAN"], [5, 1, 1, "", "get_dx"], [5, 1, 1, "", "get_dy_and_counts"], [5, 1, 1, "", "get_x_sections"], [5, 1, 1, "", "smooth_gradient"], [5, 1, 1, "", "y_sampling_interval"]], "pyprobe.analysis.cycling": [[6, 2, 1, "", "Cycling"], [6, 1, 1, "", "summary"]], "pyprobe.analysis.cycling.Cycling": [[6, 3, 1, "", "input_data"], [6, 4, 1, "", "summary"]], "pyprobe.analysis.degradation_mode_analysis": [[7, 5, 1, "", "CompositeOCP"], [7, 5, 1, "", "OCP"], [7, 1, 1, "", "average_ocvs"], [7, 1, 1, "", "quantify_degradation_modes"], [7, 1, 1, "", "run_batch_dma_parallel"], [7, 1, 1, "", "run_batch_dma_sequential"], [7, 1, 1, "", "run_ocv_curve_fit"]], "pyprobe.analysis.degradation_mode_analysis.CompositeOCP": [[7, 6, 1, "", "eval"], [7, 4, 1, "", "from_data"], [7, 6, 1, "", "grad"]], "pyprobe.analysis.degradation_mode_analysis.OCP": [[7, 6, 1, "", "eval"], [7, 4, 1, "", "from_data"], [7, 4, 1, "", "from_expression"], [7, 6, 1, "", "grad"]], "pyprobe.analysis.differentiation": [[8, 2, 1, "", "Differentiation"], [8, 1, 1, "", "differentiate_LEAN"], [8, 1, 1, "", "gradient"]], "pyprobe.analysis.differentiation.Differentiation": [[8, 4, 1, "", "differentiate_FD"], [8, 4, 1, "", "differentiate_LEAN"], [8, 3, 1, "", "input_data"]], "pyprobe.analysis.pulsing": [[9, 2, 1, "", "Pulsing"], [9, 1, 1, "", "get_ocv_curve"], [9, 1, 1, "", "get_resistances"]], "pyprobe.analysis.pulsing.Pulsing": [[9, 3, 1, "", "input_data"], [9, 4, 1, "", "pulse"], [9, 4, 1, "", "pulse_rest"], [9, 4, 1, "", "pulse_summary"]], "pyprobe.analysis.smoothing": [[10, 2, 1, "", "Smoothing"], [10, 1, 1, "", "akima_interpolator"], [10, 1, 1, "", "cubic_interpolator"], [10, 1, 1, "", "downsample"], [10, 1, 1, "", "linear_interpolator"], [10, 1, 1, "", "pchip_interpolator"], [10, 1, 1, "", "savgol_smoothing"], [10, 1, 1, "", "spline_smoothing"]], "pyprobe.analysis.smoothing.Smoothing": [[10, 4, 1, "", "downsample"], [10, 3, 1, "", "input_data"], [10, 4, 1, "", "level_smoothing"], [10, 4, 1, "", "savgol_smoothing"], [10, 4, 1, "", "spline_smoothing"]], "pyprobe.analysis.utils": [[11, 2, 1, "", "AnalysisValidator"], [11, 1, 1, "", "assemble_array"]], "pyprobe.analysis.utils.AnalysisValidator": [[11, 3, 1, "", "input_data"], [11, 3, 1, "", "required_columns"], [11, 7, 1, "", "validate_required_columns"], [11, 6, 1, "", "variables"]], "pyprobe.cell": [[12, 2, 1, "", "Cell"], [12, 1, 1, "", "load_archive"], [12, 1, 1, "", "make_cell_list"]], "pyprobe.cell.Cell": [[12, 4, 1, "", "add_procedure"], [12, 4, 1, "", "archive"], [12, 7, 1, "", "check_and_set_name"], [12, 4, 1, "", "import_pybamm_solution"], [12, 3, 1, "", "info"], [12, 3, 1, "", "procedure"], [12, 4, 1, "", "process_cycler_file"], [12, 4, 1, "", "process_generic_file"]], "pyprobe.cyclers": [[14, 0, 0, "-", "arbin"], [15, 0, 0, "-", "basecycler"], [16, 0, 0, "-", "basytec"], [17, 0, 0, "-", "biologic"], [18, 0, 0, "-", "maccor"], [19, 0, 0, "-", "neware"]], "pyprobe.cyclers.arbin": [[14, 2, 1, "", "Arbin"]], "pyprobe.cyclers.arbin.Arbin": [[14, 3, 1, "", "column_dict"], [14, 3, 1, "", "datetime_format"], [14, 3, 1, "", "input_data_path"]], "pyprobe.cyclers.basecycler": [[15, 2, 1, "", "BaseCycler"]], "pyprobe.cyclers.basecycler.BaseCycler": [[15, 6, 1, "", "capacity"], [15, 6, 1, "", "capacity_from_ch_dch"], [15, 6, 1, "", "charge_capacity"], [15, 3, 1, "", "column_dict"], [15, 6, 1, "", "current"], [15, 6, 1, "", "date"], [15, 3, 1, "", "datetime_format"], [15, 6, 1, "", "discharge_capacity"], [15, 6, 1, "", "event"], [15, 4, 1, "", "get_imported_dataframe"], [15, 7, 1, "", "import_and_validate_data"], [15, 3, 1, "", "input_data_path"], [15, 6, 1, "", "pyprobe_dataframe"], [15, 4, 1, "", "read_file"], [15, 6, 1, "", "step"], [15, 6, 1, "", "temperature"], [15, 6, 1, "", "time"], [15, 6, 1, "", "voltage"]], "pyprobe.cyclers.basytec": [[16, 2, 1, "", "Basytec"]], "pyprobe.cyclers.basytec.Basytec": [[16, 3, 1, "", "column_dict"], [16, 3, 1, "", "input_data_path"], [16, 4, 1, "", "read_file"]], "pyprobe.cyclers.biologic": [[17, 2, 1, "", "Biologic"], [17, 2, 1, "", "BiologicMB"]], "pyprobe.cyclers.biologic.Biologic": [[17, 3, 1, "", "column_dict"], [17, 3, 1, "", "input_data_path"], [17, 4, 1, "", "read_file"]], "pyprobe.cyclers.biologic.BiologicMB": [[17, 4, 1, "", "apply_step_correction"], [17, 4, 1, "", "get_imported_dataframe"]], "pyprobe.cyclers.maccor": [[18, 2, 1, "", "Maccor"]], "pyprobe.cyclers.maccor.Maccor": [[18, 6, 1, "", "capacity"], [18, 6, 1, "", "charge_capacity"], [18, 3, 1, "", "column_dict"], [18, 6, 1, "", "date"], [18, 3, 1, "", "datetime_format"], [18, 6, 1, "", "discharge_capacity"], [18, 3, 1, "", "input_data_path"], [18, 4, 1, "", "read_file"]], "pyprobe.cyclers.neware": [[19, 2, 1, "", "Neware"]], "pyprobe.cyclers.neware.Neware": [[19, 6, 1, "", "capacity"], [19, 6, 1, "", "charge_capacity"], [19, 3, 1, "", "column_dict"], [19, 6, 1, "", "discharge_capacity"], [19, 3, 1, "", "input_data_path"], [19, 4, 1, "", "read_file"], [19, 6, 1, "", "time"]], "pyprobe.dashboard": [[20, 1, 1, "", "launch_dashboard"]], "pyprobe.filters": [[21, 2, 1, "", "Cycle"], [21, 2, 1, "", "Experiment"], [21, 2, 1, "", "Procedure"], [21, 2, 1, "", "Step"], [21, 1, 1, "", "get_cycle_column"]], "pyprobe.filters.Cycle": [[21, 4, 1, "", "charge"], [21, 4, 1, "", "chargeordischarge"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 3, 1, "", "cycle_info"], [21, 4, 1, "", "discharge"], [21, 4, 1, "", "rest"], [21, 4, 1, "", "step"]], "pyprobe.filters.Experiment": [[21, 4, 1, "", "charge"], [21, 4, 1, "", "chargeordischarge"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 4, 1, "", "cycle"], [21, 3, 1, "", "cycle_info"], [21, 4, 1, "", "discharge"], [21, 4, 1, "", "rest"], [21, 4, 1, "", "step"]], "pyprobe.filters.Procedure": [[21, 4, 1, "", "add_external_data"], [21, 4, 1, "", "charge"], [21, 4, 1, "", "chargeordischarge"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 4, 1, "", "cycle"], [21, 3, 1, "", "cycle_info"], [21, 4, 1, "", "discharge"], [21, 4, 1, "", "experiment"], [21, 6, 1, "", "experiment_names"], [21, 4, 1, "", "load_external_file"], [21, 3, 1, "", "readme_dict"], [21, 4, 1, "", "remove_experiment"], [21, 4, 1, "", "rest"], [21, 4, 1, "", "step"]], "pyprobe.filters.Step": [[21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 4, 1, "", "step"]], "pyprobe.plot": [[22, 5, 1, "", "Plot"]], "pyprobe.plot.Plot": [[22, 4, 1, "", "add_colorbar"], [22, 4, 1, "", "add_colorscaled_line"], [22, 4, 1, "", "add_line"], [22, 8, 1, "", "axis_font_size"], [22, 8, 1, "", "default_layout"], [22, 6, 1, "", "fig"], [22, 4, 1, "", "make_colorscale"], [22, 4, 1, "", "show"], [22, 4, 1, "", "show_image"], [22, 8, 1, "", "title_font_size"], [22, 6, 1, "", "x_range"], [22, 6, 1, "", "y2_range"], [22, 6, 1, "", "y_range"]], "pyprobe.pyprobe_types": [[23, 9, 1, "", "ExperimentOrCycleType"], [23, 9, 1, "", "FilterToCycleType"], [23, 9, 1, "", "FilterToExperimentType"], [23, 9, 1, "", "FilterToStepType"], [23, 9, 1, "", "PyProBEDataType"], [23, 9, 1, "", "PyProBERawDataType"]], "pyprobe.rawdata": [[24, 2, 1, "", "RawData"]], "pyprobe.rawdata.RawData": [[24, 6, 1, "", "capacity"], [24, 7, 1, "", "check_required_columns"], [24, 3, 1, "", "column_definitions"], [24, 6, 1, "", "pybamm_experiment"], [24, 4, 1, "", "set_SOC"], [24, 4, 1, "", "set_reference_capacity"], [24, 3, 1, "", "step_descriptions"], [24, 4, 1, "", "zero_column"]], "pyprobe.readme_processor": [[25, 5, 1, "", "ReadmeModel"], [25, 1, 1, "", "process_readme"]], "pyprobe.result": [[26, 2, 1, "", "Result"]], "pyprobe.result.Result": [[26, 4, 1, "", "add_new_data_columns"], [26, 4, 1, "", "array"], [26, 3, 1, "", "base_dataframe"], [26, 4, 1, "", "build"], [26, 4, 1, "", "clean_copy"], [26, 3, 1, "", "column_definitions"], [26, 6, 1, "", "column_list"], [26, 6, 1, "", "contains_lazyframe"], [26, 6, 1, "", "data"], [26, 4, 1, "", "define_column"], [26, 4, 1, "", "extend"], [26, 4, 1, "", "get"], [26, 4, 1, "", "get_only"], [26, 3, 1, "", "info"], [26, 4, 1, "", "join"], [26, 4, 1, "", "print_definitions"], [26, 6, 1, "", "quantities"]], "pyprobe.units": [[28, 5, 1, "", "Units"], [28, 1, 1, "", "unit_from_regexp"]], "pyprobe.units.Units": [[28, 4, 1, "", "from_default_unit"], [28, 8, 1, "", "prefix_dict"], [28, 8, 1, "", "time_unit_dict"], [28, 4, 1, "", "to_default_unit"], [28, 8, 1, "", "unit_dict"]], "pyprobe.utils": [[29, 1, 1, "", "flatten_list"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "pydantic_model", "Python model"], "3": ["py", "pydantic_field", "Python field"], "4": ["py", "method", "Python method"], "5": ["py", "class", "Python class"], "6": ["py", "property", "Python property"], "7": ["py", "pydantic_validator", "Python validator"], "8": ["py", "attribute", "Python attribute"], "9": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:pydantic_model", "3": "py:pydantic_field", "4": "py:method", "5": "py:class", "6": "py:property", "7": "py:pydantic_validator", "8": "py:attribute", "9": "py:data"}, "terms": {"": [10, 14, 18, 21, 24, 26, 28, 31, 37, 40, 41, 43, 45, 46, 49, 50, 52, 54, 55], "0": [7, 8, 10, 28, 30, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 48, 50, 54], "000001": 41, "000002": 41, "000003": 41, "000005": 41, "00001": 41, "00004": 41, "0004": 41, "0004023": 41, "00040614": 41, "001": [28, 41], "001267": 41, "002": 38, "00399931": 41, "00400001": 41, "00400004": 41, "018585": 41, "02": [41, 48], "0205": 42, "022805": 41, "026056": 36, "026211": 36, "027357": 37, "03": [41, 42], "030007": 42, "030212": 36, "034212": 36, "036755": 37, "038212": 36, "04": [35, 36, 37, 38, 40, 41, 43, 44, 48, 54], "040937": 41, "041086": 41, "041138": 41, "041241": 41, "041247": 41, "041296": 41, "04132": 41, "041329": 41, "041362": 41, "04139": 41, "041391": 41, "041392": 41, "041393": 41, "041395": 41, "042212": 36, "0428": 42, "04478": 42, "046213": 36, "050213": 36, "054213": 36, "058214": 36, "06": [28, 41], "060290": 37, "062214": 36, "0668": 8, "07": 42, "080534": 42, "082022": 41, "09": [28, 41, 48], "0909": 42, "094": 41, "0949": 36, "0x7f15551cd910": 41, "0x7fd1994ccc10": 37, "0x7fd19dd834d0": 37, "0x7fd1c8180c90": 37, "1": [4, 5, 7, 8, 9, 18, 28, 30, 31, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 48, 49, 50, 54], "10": [5, 8, 35, 36, 37, 38, 40, 41, 42, 43, 54], "100": [36, 37, 41], "1000": [28, 42], "1000000": 28, "100051": [5, 8, 35, 38], "1016": [5, 8, 35, 38], "1059": 8, "11": [34, 37, 40, 41, 43, 50, 54], "1149": 42, "119273": 41, "12": [28, 34, 37, 40, 41, 42, 50, 54], "121": 8, "1234": 42, "131485": 36, "14": [22, 37, 42], "15": 42, "154": 42, "16": 42, "164407": 41, "167": 42, "17": 42, "1745": 8, "18": [22, 42], "19": 48, "191": 43, "1919": 36, "192": 43, "193": 43, "1945": 42, "197": 41, "1972": 8, "1d": [26, 41, 46], "1e": [28, 38], "2": [4, 7, 31, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 49, 52, 54], "20": [37, 40, 41, 54], "2001": 41, "2020": [5, 8, 35, 38, 42], "2024": [41, 42, 48], "21": 41, "210305": 41, "22": 43, "227986": 36, "23": 43, "24": [37, 43], "2417": 8, "246969": 41, "2482": 42, "25": 8, "27": 42, "270011": 42, "2769": 42, "28448": 41, "2895": 41, "29": [41, 42, 48], "2962": 41, "2979": 41, "2f": 37, "3": [5, 8, 31, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 49, 50, 54], "30": [37, 40, 41, 42, 54], "301386": 41, "31": 41, "3117": 42, "3120": 42, "32": 41, "324487": 36, "329627": 41, "33": 41, "34": [41, 43], "343536": 37, "345855": 36, "35": [41, 43], "36": [41, 42, 43], "3600": [28, 37], "3631": 42, "37": [41, 43], "38": [41, 43], "383": 8, "3830": 8, "39": [36, 38, 41, 42, 43, 44], "390765": 36, "392471": 41, "393179": 41, "4": [31, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 52, 54], "40": 43, "400785": 36, "4023": 41, "40614": 41, "41": 43, "415192": 37, "42": 43, "420988": 36, "43": 43, "44": 43, "4444": 42, "45": 43, "4513": 41, "4875": 42, "490732": 41, "495": 41, "497": 41, "4ma": [40, 41, 54], "5": [8, 31, 35, 36, 37, 38, 40, 41, 42, 43, 44, 54], "500487": 42, "5138": 42, "5164": 36, "517489": 36, "554": 48, "5542": 42, "56": 42, "562745": 41, "562746": 41, "562747": 41, "562748": 41, "562749": 41, "565912": 36, "5711": 41, "58": [43, 48], "5842": 42, "5866": 36, "59": 43, "591": 41, "6": [31, 36, 37, 38, 40, 41, 42, 43, 44, 54], "60": [28, 43], "600": 22, "61": 41, "6103": 42, "613991": 36, "62069": 42, "622007": 42, "6334": 36, "640815": 36, "665": 36, "672765": 41, "685915": 36, "7": [8, 31, 36, 37, 38, 40, 41, 42, 43, 54], "705558": 36, "705622": 36, "710493": 36, "7111": 42, "7114": 36, "7172": 41, "7197": 41, "7201": 41, "7205": 41, "7208": 41, "725532": 36, "7326": 42, "735555": 36, "735943": 36, "740624": 41, "743512": 41, "747103": 42, "747127": 42, "750596": 36, "775612": 36, "7890": 42, "789_589": 41, "795638": 36, "8": [36, 37, 40, 41, 42, 43, 54], "800": 22, "8022": 36, "805578": 36, "805967": 36, "806994": 36, "8090": 42, "835632": 36, "849922": 42, "85": 42, "8538": 42, "86": 42, "87": 37, "876766": 41, "886550": 37, "8987": 36, "9": [7, 36, 37, 40, 41, 42, 43, 54], "900011": 42, "900663": 36, "903497": 36, "910931": 36, "9159": 42, "928": 42, "9308": 42, "95": 43, "959186": 41, "96": 43, "97": 43, "9793": 42, "98": 43, "9934": 36, "999212": 41, "99931": 41, "999406": 41, "999854": 41, "A": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 35, 37, 38, 40, 41, 43, 46, 48, 49, 54], "And": [36, 37, 41, 42], "As": [36, 43], "BY": [35, 38], "But": 43, "By": 31, "For": [18, 19, 21, 30, 41, 43, 47, 48, 50, 52, 54], "If": [5, 7, 10, 11, 12, 21, 26, 30, 31, 41, 43, 48, 50, 51, 54], "In": [30, 31, 34, 37, 42, 43, 47, 48, 50, 54], "It": [12, 24, 30, 31, 32, 34, 46, 48, 50, 54, 55], "Its": 49, "No": 49, "On": [35, 50], "One": [31, 40], "Or": 46, "That": 40, "The": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 41, 42, 43, 44, 46, 48, 49, 50, 52, 53, 55], "Then": [36, 46, 51, 52], "There": 54, "These": [12, 24, 31, 41, 43, 48, 51, 54], "To": [34, 35, 36, 45, 46, 50, 54], "With": [36, 37], "_": [37, 48], "__call__": 43, "__init__": 43, "__pydantic_validator__": 43, "__return_pydantic_validator__": 43, "__tracebackhide__": 43, "_abstractocp": 7, "_check_column_dict": [14, 15, 16, 17, 18, 19], "_check_input_data_path": [14, 15, 16, 17, 18, 19], "_intern": 43, "_load_base_datafram": [21, 24, 26], "_mb": 48, "_validate_cal": 43, "ab9050": 42, "abl": [37, 40, 48, 49, 50], "about": [12, 26, 28, 43, 47, 48, 54, 55], "abov": [26, 37, 54], "accept": 31, "access": [31, 41, 53], "achiev": 12, "acquisit": 49, "across": [7, 22, 24, 32], "activ": [34, 50], "ad": [26, 33, 44, 53], "add": [12, 17, 18, 21, 22, 24, 26, 30, 31, 36, 37, 41, 48, 52, 54, 55], "add_colorbar": [1, 22], "add_colorscaled_lin": [1, 22], "add_external_data": [1, 21, 48], "add_lin": [1, 22, 35, 36, 38, 40, 41, 42, 44, 52], "add_new_data_column": [1, 26], "add_procedur": [1, 12, 35, 36, 37, 38, 40, 41, 43, 44, 48], "addit": [12, 31, 48, 55], "addition": 51, "adjust": [30, 37], "after": [9, 36, 44, 46, 48, 50], "ag": 42, "against": [37, 43], "agnost": [30, 48], "ah": [9, 16, 24, 28, 35, 36, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49], "akima": [7, 10], "akima_interpol": [1, 2, 10], "al": [5, 8, 35, 38], "algorithm": [4, 7, 10, 12, 39], "alia": [23, 37], "alias": 23, "align": 35, "all": [7, 8, 10, 11, 15, 26, 30, 31, 32, 37, 44, 46, 48, 51], "allclos": 37, "allow": [21, 30, 32, 35, 40, 47, 54], "along": 37, "alongsid": [31, 40, 41, 48, 54], "alpha": 5, "alreadi": [12, 37, 42, 48], "also": [36, 38, 42, 43], "altern": [8, 38, 42], "alwai": [31, 47], "amper": 49, "an": [4, 7, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 28, 30, 31, 36, 38, 43, 45, 46, 47, 48, 51, 53, 54], "anaconda": 50, "analys": [35, 38, 39, 41, 44, 54], "analysi": [0, 1, 32, 33, 35, 36, 37, 38, 39, 41, 42, 51, 53], "analysis_modu": 47, "analysisvalid": [1, 2, 11, 31, 32, 43], "ani": [4, 7, 10, 11, 12, 15, 21, 24, 25, 26, 30, 31, 34, 41, 43, 46, 48, 50, 51, 52, 54], "anod": [4, 31, 42], "anoth": [21, 26, 30], "api": [45, 47], "app": 50, "appear": [40, 48], "append": [7, 37], "appli": [5, 7, 8, 21, 24, 38, 46], "apply_step_correct": [13, 17], "approach": [5, 8, 35, 38, 46], "ar": [5, 7, 11, 12, 14, 15, 16, 17, 18, 19, 21, 24, 26, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54], "arang": 37, "arbin": [1, 12, 13, 49], "archiv": [1, 12, 44], "arg": [31, 43], "argskwarg": 43, "argsort": 37, "argument": [7, 8, 9, 10, 21, 32, 36, 48, 52], "around": [26, 37], "arrai": [1, 7, 11, 22, 26, 31, 41, 42, 43, 46], "articl": [5, 8], "assembl": 11, "assemble_arrai": [1, 2, 11], "assert": 37, "assign": [12, 47, 48], "assum": [5, 8, 10, 12, 48, 49], "asterisk": [12, 14, 15, 16, 17, 18, 19, 30], "astyp": 37, "attribut": [26, 31, 43, 44, 46, 47, 48, 51], "auto": 49, "automat": [30, 32, 34, 36, 49, 55], "aux_temperature_1": [14, 49], "avail": [12, 40, 47, 50], "averag": [4, 7, 37], "average_differ": 37, "average_ocv": [1, 2, 7], "average_ocv_curv": [2, 3, 4], "ax1": 37, "ax2": 37, "axi": [22, 37], "axis_font_s": [1, 22], "b": 18, "back": 32, "backend": 37, "bar": 37, "base": [1, 2, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 30, 33, 38, 43, 46, 49, 52], "base_": 43, "base_datafram": [1, 21, 24, 26, 41, 42, 43, 49], "basecycl": [1, 13, 14, 16, 17, 18, 19, 30], "basemodel": [6, 8, 9, 10, 11, 12, 15, 26, 30, 32, 43], "basytec": [1, 12, 13, 49], "bat": [17, 48, 49], "batch": 53, "batteri": [5, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 21, 30, 35, 36, 37, 38, 42, 48, 54], "bbox_to_anchor": 37, "becaus": [37, 43], "been": [12, 21, 37, 41, 47, 48], "befor": [6, 21, 48, 50, 54], "begin": [30, 35, 41, 48], "behaviour": 12, "behind": [32, 37, 43], "being": [30, 31, 37, 50], "below": [30, 37, 49, 50, 51], "benchmark": 37, "benefit": 37, "between": [4, 7, 10, 48], "bin": [5, 8, 10, 34, 50], "biolog": [1, 12, 13, 30, 48, 49], "biologic_mb": [12, 48, 49], "biologicmb": [1, 13, 17, 30], "blue": [35, 36, 37, 38, 40], "bool": [6, 7, 10, 12, 22, 26], "bor": [5, 8], "bound": [7, 22, 42], "boxplot": 37, "branch": 51, "break": [35, 36, 37, 38, 40, 41, 43, 54], "break_in": 40, "breakdown": 37, "browser": 51, "buffer": 22, "build": [1, 26, 51], "built": [31, 36, 37, 42, 48, 51, 55], "c": [28, 35, 38, 41, 43, 49], "caihao": [5, 8], "calc_electrode_capac": [2, 3, 4, 31], "calc_full_cell_ocv": [2, 3, 4], "calc_full_cell_ocv_composit": [2, 3, 4], "calc_gradient_with_lean": [2, 3, 5], "calcul": [3, 4, 5, 6, 8, 9, 15, 18, 19, 24, 31, 35, 36, 43], "calculate_dma_paramet": [2, 3, 4], "call": [7, 12, 21, 24, 26, 31, 34, 36, 37, 43, 46, 47, 50], "callabl": [7, 10, 12, 42], "can": [7, 8, 12, 21, 24, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 44, 46, 47, 48, 50, 51, 52, 54], "cap": [19, 49], "capabl": 45, "capac": [1, 4, 6, 7, 9, 13, 14, 15, 16, 17, 18, 19, 24, 28, 30, 31, 35, 36, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49], "capacity_from_ch_dch": [13, 15], "care": 37, "carefulli": 36, "case": [30, 40, 49], "cathod": [4, 31, 42], "caus": 32, "cc": [40, 54], "cc_charg": 40, "cc_discharg": 40, "cd": [34, 50, 51], "cell": [0, 1, 4, 6, 7, 9, 20, 24, 26, 31, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 51, 52, 53, 54, 55], "cell_capac": [4, 31], "cell_list": [20, 48], "ch": 42, "chain": [32, 46], "chang": [7, 15, 30, 34, 41, 49], "changyong": [5, 8], "channel": [12, 35, 36, 37, 38, 40, 41, 43, 44, 48], "characteris": 38, "charg": [1, 4, 6, 7, 14, 15, 17, 18, 19, 21, 24, 30, 35, 36, 40, 41, 46, 47, 49, 52, 54], "charge_capac": [4, 13, 15, 18, 19], "charge_curr": 4, "charge_dqdv": 35, "charge_filt": 7, "charge_numb": 21, "charge_ocv": 4, "charge_soc": 4, "chargeordischarg": [1, 21, 46], "chargeordischarge_numb": 21, "check": [11, 12, 21, 24, 31, 32, 43], "check_and_set_nam": [1, 12], "check_required_column": [1, 24], "checkout": 50, "chemistri": [35, 36, 37, 38, 40, 41, 43, 44, 48], "chen": 42, "chen2020": 42, "chg": [19, 49], "choos": [35, 44, 48, 54], "chrono": [14, 15, 18], "circuit": [4, 7, 42], "class": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 30, 31, 32, 41, 42, 43, 45, 46, 47, 49, 52, 55], "classmethod": 26, "clean": [31, 44], "clean_copi": [1, 26, 31], "clearli": [31, 38], "clone": [34, 50], "coalesc": 26, "code": [31, 34, 50], "coeffici": [5, 8], "collect": [29, 48], "color": [12, 22, 35, 36, 37, 38, 40, 41, 42, 44], "color_bi": 22, "color_bound": 22, "colorbar": 22, "colormap": 22, "colorscal": 22, "column": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 30, 31, 32, 36, 37, 41, 43, 46, 47, 48, 53, 55], "column_definit": [1, 21, 24, 26, 31, 41], "column_dict": [12, 13, 14, 15, 16, 17, 18, 19, 30], "column_list": [1, 26, 38], "column_nam": 26, "com": [5, 8, 34, 50], "combin": 26, "come": [6, 43], "comma": 54, "command": [32, 41, 50, 51], "comment": [35, 38, 40, 41, 42], "commit": 34, "comp1_frac": 4, "compar": [10, 32, 38, 39, 44], "compat": [31, 51], "complet": [30, 42, 50, 55], "compon": [4, 7], "composit": 7, "compositeocp": [1, 2, 7], "compress": [12, 37, 44], "compression_prior": [12, 37], "comput": [10, 31, 35, 37, 43, 47], "concat": [26, 37], "concat_method": 26, "concaten": [26, 30], "conda": [34, 50], "condit": [10, 21], "conduct": [11, 31, 42], "confirm": [31, 37], "conflict": 26, "consid": [8, 21, 40, 54], "constant": [8, 21, 40], "constant_curr": [1, 21, 35, 40], "constant_current_numb": 21, "constant_voltag": [1, 21, 40], "constant_voltage_numb": 21, "construct": [31, 32, 40], "consum": 54, "contain": [4, 5, 6, 7, 8, 9, 10, 12, 15, 21, 22, 24, 26, 31, 40, 42, 43, 46, 47, 48, 51, 54], "contains_lazyfram": [1, 26], "content": 30, "continu": [22, 51], "contribut": [32, 33, 45, 47], "control": 50, "convers": [12, 28, 30, 35, 37, 49], "convert": [12, 21, 28, 30, 39, 46, 49, 53], "copi": [26, 30, 31], "correct": [17, 31, 32, 43], "correctli": [31, 32], "correspond": [24, 28, 48, 49, 54], "coulomb": 41, "count": [5, 21, 40, 41, 46, 54], "cover": 37, "crate": [14, 15, 18], "creat": [7, 10, 20, 21, 22, 26, 28, 31, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 48, 50, 52, 55], "critic": 32, "csv": [21, 37, 48, 49], "csv_time": 37, "csv_time_panda": 37, "cubic": [7, 10], "cubic_interpol": [1, 2, 10], "cumbersom": 54, "cumsum": 37, "cumul": 37, "cumulative_tim": 37, "current": [9, 13, 14, 15, 16, 17, 18, 19, 21, 24, 28, 30, 37, 40, 41, 43, 46, 47, 49], "current_ma": [41, 46], "curv": [4, 7, 9, 10, 35, 38, 42], "custom": 32, "customiz": 55, "cv": [40, 54], "cv_hold": 40, "cycl": [0, 1, 2, 7, 8, 9, 10, 11, 12, 21, 23, 24, 26, 35, 36, 37, 38, 40, 41, 43, 46, 47, 48, 49, 52, 54], "cycle_3": 40, "cycle_incr": 37, "cycle_info": [1, 21, 41, 43], "cycle_numb": 21, "cycle_rep": 37, "cycler": [0, 1, 12, 33, 35, 36, 37, 38, 40, 41, 43, 44, 53, 54], "cycler_fil": 48, "cycler_file_": 48, "cycler_file_1": 48, "cycler_file_2": 48, "cycling_summari": 41, "d": [14, 18, 31, 35, 38, 42], "dai": 37, "dash": [22, 38, 42], "dashboard": [0, 1, 41, 50], "dashdot": 22, "data": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 28, 30, 31, 32, 35, 37, 39, 42, 43, 47, 50, 51, 52, 53, 54], "data_directori": [35, 36, 37, 38, 40, 41, 43, 44], "data_list": 26, "datafram": [10, 15, 16, 17, 18, 19, 21, 22, 24, 26, 30, 31, 32, 37, 41, 42, 43, 46], "dataframe_list": [15, 17], "datapoint": 8, "dataset": [35, 37, 38, 40, 43, 48], "datatyp": 49, "date": [13, 14, 15, 16, 17, 18, 19, 21, 26, 30, 41, 48, 49], "date_column_nam": [21, 26], "datetim": [21, 41, 48, 49], "datetime_format": [13, 14, 15, 16, 17, 18, 19], "dchg": [19, 49], "dchg_before_chg": 6, "deal": 43, "debug": 31, "declar": [30, 31, 42, 43], "decor": [31, 32], "decreas": [15, 21, 49], "def": [31, 37, 42, 43, 48], "default": [6, 7, 8, 10, 12, 19, 21, 24, 26, 28, 37, 48, 49], "default_layout": [1, 22], "default_tim": 37, "defin": [3, 15, 24, 26, 30, 31, 36, 42, 43, 48, 54], "define_column": [1, 26], "definit": [24, 26, 31], "degrad": [4, 7, 37, 38, 42, 48], "degradation_mode_analysi": [1, 2, 42], "degradation_mode_analysis_funct": [2, 3, 31], "delai": 37, "delta": [5, 8, 24], "demonstr": [32, 36, 37, 43, 44], "depend": [8, 10, 33, 34, 47, 50], "deriv": 10, "describ": [8, 26, 31, 38, 41, 44, 48, 51, 54], "descript": [24, 40, 41, 48, 54], "design": [46, 47], "desir": [10, 50], "desktop": 50, "detail": [21, 48, 54, 55], "determin": [7, 10], "dev": [34, 43], "develop": [34, 35, 42, 45, 47, 51], "df": [17, 37], "diagnosi": [5, 8, 35, 38], "diagon": 26, "dict": [7, 12, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 30, 43, 48], "dictionari": [7, 12, 14, 15, 16, 17, 18, 19, 21, 24, 26, 28, 30, 31, 41, 43, 46, 48, 51, 55], "differ": [8, 10, 31, 38, 41, 43, 48, 54], "differenti": [1, 2, 5, 31, 39, 42, 43, 44, 47], "differential_evolut": [7, 42], "differentiate_fd": [2, 8], "differentiate_lean": [1, 2, 8, 35, 38], "differentiation_funct": [2, 3], "dimension": 46, "direct": 47, "directli": [42, 46, 50], "directori": [12, 34, 48, 50], "discharg": [1, 4, 6, 7, 14, 15, 17, 18, 19, 21, 30, 35, 36, 37, 38, 40, 41, 43, 46, 49, 54], "discharge_capac": [4, 13, 15, 18, 19], "discharge_curr": 4, "discharge_dqdv": 35, "discharge_filt": 7, "discharge_numb": 21, "discharge_ocv": 4, "discharge_soc": 4, "discret": [5, 8, 22, 35, 38], "displai": [20, 51, 52], "distinguish": [48, 55], "dma": [4, 7, 42], "do": [12, 30, 48, 50], "doc": [41, 51], "document": [14, 15, 18, 26, 31, 35, 38, 40, 41, 42, 47, 52, 53, 54], "doe": [30, 43, 48], "doesn": 36, "doi": [5, 8, 35, 38, 42], "done": [30, 31, 34, 48], "dongsheng": [5, 8], "dot": 22, "down": [9, 40], "downsampl": [1, 2, 10, 38], "downsampled_data": 38, "downsampled_data_dvdq": 38, "dpt": [18, 49], "dqdv": [7, 42], "dropdown": 50, "dsocdv": 42, "dtype": [4, 7, 11], "due": [37, 38], "dva": 38, "dvdq": 7, "dx": 8, "dxdy": [5, 8, 35, 38], "dy": [5, 8], "dydx": [5, 8], "e": [7, 12, 22, 30, 34, 42, 43, 46, 48, 49, 54], "each": [7, 9, 10, 30, 48, 54], "easi": [31, 48, 51], "easiest": 50, "easili": [31, 38], "ecel": [17, 30, 49], "edit": [34, 50], "effect": 38, "effici": [10, 41], "either": [5, 8, 19, 24, 34, 37, 46], "elaps": [41, 49], "electrochem": 42, "electrod": [4, 7, 31, 42], "enabl": 54, "encourag": 31, "end": [21, 30, 32, 40, 54], "enough": [31, 43], "ensur": [30, 31, 32, 43], "enter": [34, 50], "entir": 40, "enumer": 37, "environ": [34, 41, 50], "error": [31, 32, 43, 47, 54], "et": [5, 8, 35, 38], "etc": [31, 46, 48], "etran": [5, 8, 35, 38], "etransport": [5, 8, 35, 38], "eval": [2, 7], "evalu": [8, 9, 32, 36], "evenli": 8, "event": [13, 15, 21, 24, 37, 41, 43, 49], "event_incr": 37, "event_rep": 37, "everi": [26, 46], "exampl": [8, 30, 31, 32, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 50, 54, 55], "excel": [12, 21, 37, 48, 55], "except": 37, "execut": [32, 37], "exist": [12, 19, 26, 30, 31, 37, 41, 43, 47], "exp": 42, "experi": [0, 1, 6, 7, 8, 9, 10, 11, 12, 21, 23, 24, 25, 35, 36, 37, 38, 40, 41, 43, 46, 47, 48, 52, 53, 54], "experiment": [5, 8, 10, 21, 38, 42, 46, 47, 48, 51, 54, 55], "experiment_fold": 48, "experiment_nam": [1, 12, 21, 36], "experiment_object": 43, "experiment_record": 48, "experimentorcycletyp": [0, 1, 23], "explor": [38, 45], "expr": [7, 15, 18, 19, 21, 28], "express": [7, 15, 18, 19, 21, 28, 32, 42], "extend": [1, 26], "extens": [30, 54], "extern": 21, "extract": [30, 36, 40], "f": [14, 31, 37, 48], "f64": [36, 41, 42], "factor": [28, 37], "fals": [7, 10, 12, 26, 37], "familiar": 46, "faster": [10, 37], "fastest": 48, "fb": 42, "feng": [5, 8, 35, 38], "fetch": 50, "few": 37, "ff00ff": [41, 44], "field": [6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 24, 26, 31, 41, 44, 48], "fig": [1, 22, 35, 36, 37, 38, 40, 42, 44], "figsiz": 37, "figur": [22, 37, 41, 42], "file": [12, 15, 16, 17, 18, 19, 21, 25, 30, 37, 40, 41, 43, 44, 46, 49, 53, 55], "file_s": 37, "filenam": [12, 35, 36, 37, 38, 40, 41, 43, 44, 48], "filename_funct": 12, "filename_input": [12, 48], "filepath": [15, 16, 17, 18, 19, 21], "fill": [26, 48], "fillna": 37, "filter": [0, 1, 7, 8, 9, 10, 12, 23, 24, 26, 32, 35, 36, 37, 39, 43, 44, 47, 48, 49, 51, 53, 54], "filtering_column_nam": 26, "filtertocycletyp": [0, 1, 21, 23], "filtertoexperimenttyp": [0, 1, 21, 23], "filtertosteptyp": [0, 1, 23], "final": [32, 36, 37], "final_cycl": [35, 38], "finit": [8, 31, 38, 43], "first": [4, 7, 9, 10, 18, 21, 24, 26, 35, 36, 38, 41, 42, 43, 44, 46, 48, 52, 54], "fit": [4, 7, 10, 39, 44], "fitted_curv": 42, "fitting_target": [4, 7, 42], "fitting_target_data": 4, "fix": 24, "flag": 34, "flatten": 29, "flatten_list": [0, 1, 29], "float": [4, 5, 8, 9, 10, 12, 21, 22, 24, 26, 28, 31], "float64": [4, 5, 7, 10, 11, 22, 26, 49], "flowchart": 51, "fly": 35, "folder": [12, 44, 48], "folder_path": [12, 35, 36, 37, 38, 40, 41, 43, 44, 48], "follow": [17, 30, 31, 32, 34, 43, 48, 49, 50, 51, 54, 55], "font": 22, "fontsiz": 37, "fork": 34, "form": [7, 30, 31], "format": [12, 14, 15, 16, 17, 18, 19, 21, 24, 30, 31, 37, 39, 43, 50, 53], "found": 32, "frac": 8, "fraction": 4, "framework": 32, "from": [7, 9, 10, 11, 12, 15, 17, 18, 19, 21, 25, 26, 28, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 47, 49, 50, 51, 53, 54], "from_data": [2, 7, 42], "from_default_unit": [1, 28], "from_express": [2, 7, 42], "full": [4, 7, 36, 42, 46], "full_procedur": 40, "function": [3, 4, 5, 7, 8, 10, 12, 13, 20, 22, 25, 29, 30, 32, 33, 38, 40, 41, 42, 43, 47, 48], "functool": 43, "further": [24, 31, 40, 41, 43, 47, 51], "g": [12, 22, 30, 43, 48], "gastol": 42, "gener": [12, 22, 42, 47, 48, 49, 51, 54], "get": [1, 5, 26, 37, 39, 43, 44, 45, 46, 50], "get_cycle_column": [0, 1, 21], "get_dx": [2, 3, 5], "get_dy_and_count": [2, 3, 5], "get_imported_datafram": [13, 15, 17, 30], "get_ocv_curv": [1, 2, 9], "get_onli": [1, 26], "get_resist": [1, 2, 9, 36], "get_x_sect": [2, 3, 5], "getsiz": 37, "git": [34, 50], "github": [34, 50], "gitt": [39, 44], "give": [12, 38], "given": [7, 48, 54], "go": [22, 30, 35, 36, 38, 42], "golai": 10, "good": [31, 50], "grad": [2, 7], "gradient": [1, 2, 5, 7, 8, 10, 31, 35, 38, 43, 47], "gradient_data": 31, "gradient_result": 31, "gradient_titl": 31, "graphit": 42, "graphite_lgm50_ocp_chen2020": 42, "green": [38, 40], "gregori": [5, 8], "gt": [37, 41, 43], "guarante": 10, "guess": [4, 7], "guid": [30, 45, 47, 51], "guidanc": [48, 53], "h": [14, 28], "ha": [26, 31, 37, 38, 41, 42, 43, 46, 48, 50, 52], "half": [4, 7, 42], "han": [5, 8], "hand": 37, "happen": 43, "have": [12, 21, 30, 31, 37, 42, 46, 47, 48, 50], "he": [5, 8, 35, 38], "head": 30, "header": [30, 49], "health": 6, "height": 22, "hello": 50, "help": [43, 55], "here": [31, 43], "hi": 7, "high": [7, 42], "higher": 7, "highest": [4, 31], "highli": 54, "hint": 23, "hold": [24, 26, 40, 41, 42, 46, 54], "hook": 34, "horizont": 26, "hostedtoolcach": 43, "hour": [40, 41, 43, 49, 54], "how": [7, 26, 35, 43, 45, 51], "howev": [30, 36, 43], "hr": [28, 35, 36, 38, 44], "html": 51, "http": [5, 8, 34, 35, 38, 42, 43, 50], "huang": [5, 8], "human": 54, "i": [5, 6, 7, 8, 9, 10, 12, 16, 17, 18, 19, 21, 24, 26, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55], "i64": 41, "ica": 38, "identifi": [15, 18, 19, 21, 37, 43, 48, 49, 54], "illustr": 37, "imag": 22, "immedi": 41, "imperialcollegelondon": [34, 50], "implement": [37, 47], "import": [12, 13, 15, 17, 21, 30, 32, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 49, 50, 53, 54], "import_and_validate_data": [13, 14, 15, 16, 17, 18, 19], "import_pybamm_solut": [1, 12], "importing_column": 21, "includ": [8, 9, 12, 26, 30, 31, 36, 46, 48, 49, 54, 55], "inclus": [21, 40, 54], "incorrect": 47, "incorrect_data_dict": 43, "incorrect_datafram": 43, "increas": [15, 17, 37, 49, 54], "increment": [37, 38], "index": [14, 19, 26, 30, 40, 46, 49, 51, 54], "indic": [7, 12, 14, 15, 16, 17, 18, 19, 21, 26, 30, 46], "individu": [36, 41, 46], "info": [1, 12, 21, 24, 26, 31, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 48, 51, 55], "info_dictionari": [35, 36, 37, 38, 40, 41, 43, 44, 48], "inform": [12, 14, 15, 18, 21, 26, 28, 31, 42, 43, 48, 54, 55], "inherit": [30, 32, 43], "initi": [4, 7, 36, 37, 40, 41, 54], "initial_charg": 40, "initialis": 50, "inlin": 37, "inner": [21, 26, 54], "input": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 31, 32, 39, 42, 44, 51, 53], "input_data": [2, 6, 7, 8, 9, 10, 11, 24, 31, 35, 36, 38, 41, 42, 43, 47], "input_data_list": 7, "input_data_path": [13, 14, 15, 16, 17, 18, 19, 30], "input_filenam": [12, 37, 41, 48], "input_name_gener": 48, "input_quant": 28, "input_typ": 43, "input_unit": 28, "input_valu": 43, "insid": [31, 34], "instal": [33, 42, 53], "instanc": [11, 28, 31, 36, 42, 43, 48, 52, 54], "instead": [31, 35, 37, 54], "instruct": [36, 40, 49, 50, 54], "int": [5, 8, 9, 10, 12, 21, 24, 25, 26, 37], "int64": 49, "integ": [5, 8, 10], "integr": 47, "intens": 37, "interact": [32, 35, 38, 40, 41, 42], "interfac": 46, "intern": 47, "interpol": [7, 10, 21, 26, 48], "interpolation_method": 7, "interpret": [21, 48], "interv": [5, 8, 10], "introduct": [45, 53], "inventori": [4, 31, 42], "ion": 42, "ipynb": 44, "ipywidget": 42, "is_instance_of": 43, "isin": 37, "item": 7, "ith": 7, "its": [30, 31, 37, 40, 48, 54], "j": [5, 8, 35, 38], "jin": [5, 8], "join": [1, 26], "journal": 42, "json": 44, "jupyt": 50, "just": [8, 30, 54], "k": [5, 8, 28, 35, 38, 42], "keep": [31, 55], "kei": [9, 12, 21, 26, 36, 41, 42, 48, 55], "kendrick": 42, "keyword": [48, 54], "know": 43, "kwarg": [10, 43], "label": [22, 35, 36, 37, 38, 40, 42], "lam_n": [4, 7], "lam_p": [4, 7], "languag": [40, 46], "languang": [5, 8], "larg": [30, 37], "last": [10, 21, 35, 37, 38, 43, 54], "later": [34, 50], "launch": [20, 41, 50], "launch_dashboard": [0, 1, 20, 41], "layout": [22, 37], "laz": 43, "lazi": [32, 37], "lazyfram": [15, 16, 17, 18, 19, 21, 24, 26, 32, 41, 43], "lean": [8, 38, 39, 44], "lean_dqdv": 38, "learn": 45, "least": 7, "left": 7, "legend": [22, 37], "len": 37, "length": [7, 10, 21, 37], "less": 46, "level": [8, 38, 43, 47], "level_smooth": [2, 10], "li": [5, 8, 42], "li_inventori": [4, 31], "liaw": [5, 8, 35, 38], "lib": 43, "librari": [36, 37], "life": 48, "light": 8, "like": [30, 31, 32, 40, 43, 48, 49], "limit": [4, 7, 42, 54], "line": [16, 22, 43, 49, 50, 52, 54], "linear": [7, 10], "linear_interpol": [1, 2, 10], "linestyl": 37, "link": 7, "link_result": 7, "linspac": 42, "linux": 50, "list": [5, 7, 8, 9, 11, 12, 15, 17, 20, 21, 22, 24, 25, 26, 29, 30, 36, 37, 40, 48, 50, 54, 55], "listdir": 44, "liter": [7, 10, 12], "lithium": [4, 31, 42], "littl": 31, "liu": [5, 8], "ll": 36, "lli": [4, 7], "lo": 7, "load": [12, 14, 15, 16, 17, 18, 19, 21, 24, 30, 41], "load_arch": [0, 1, 12, 44], "load_external_fil": [1, 21], "loc": 37, "local": [34, 41, 43, 50, 51], "log": 37, "log_scal": 37, "longest": 8, "look": [35, 38, 49, 54], "loop": [6, 10, 40, 54], "low": [7, 42], "lowest": [4, 31], "lst": 29, "lt": [37, 41, 43], "lu": [5, 8], "lz4": 12, "m": [14, 18, 28, 34, 35, 38, 50], "ma": [40, 41, 46, 54], "mac": 50, "maccor": [1, 12, 13, 49], "machin": [34, 50], "made": 37, "mah": 35, "mai": [12, 30, 43, 47, 48], "main": [26, 32, 34, 40, 43, 48, 51], "make": [12, 30, 34, 44, 45, 51, 53], "make_boxplot": 37, "make_cell_list": [0, 1, 12, 48], "make_colorscal": [1, 22], "manag": 50, "mani": 43, "manipul": [31, 32], "manner": 7, "manual": 37, "manufactur": 48, "map": [12, 14, 15, 16, 17, 18, 19], "mark": 49, "marker": 37, "match": [7, 28, 37, 48], "mathemat": 31, "matplotlib": [37, 42], "matrix": 8, "max": 37, "maximum": [17, 21, 24], "mb": [17, 37], "mean": [32, 34, 40, 48], "measur": [37, 49], "measure_panda": 37, "measure_pyprob": 37, "median": [9, 37], "median_total_time_idx_panda": 37, "median_total_time_idx_pyprob": 37, "median_total_time_panda": 37, "median_total_time_pyprob": 37, "mengchao": [5, 8], "menu": 50, "merla": [5, 8, 35, 38], "messag": 31, "met": 10, "metadata": [44, 51], "method": [2, 7, 8, 10, 12, 17, 21, 24, 26, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 46, 47, 48, 51], "method_paramet": 47, "metric": 36, "middl": 10, "midpoint": 5, "might": [32, 49], "min": 28, "minggao": [5, 8], "minim": [7, 42], "minimum": 10, "minut": [40, 41, 54], "miss": [11, 26, 42, 43], "mode": [4, 7, 34, 42], "model": [6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 24, 26, 32, 42, 48], "model_typ": 43, "modifi": 30, "modul": [0, 1, 2, 3, 13, 30, 32, 33, 35, 39, 41, 45, 46, 47, 51, 52], "modulo": [17, 48, 49], "modulobat": 30, "monoton": [10, 17], "more": [10, 14, 15, 18, 26, 31, 43, 46, 48], "most": [30, 32, 37, 43, 47, 54], "mpt": [48, 49], "much": [37, 43], "multi": 42, "multipl": [5, 7, 8, 12, 30, 32, 37, 38, 41, 46, 53, 54, 55], "must": [7, 10, 12, 21, 26, 34, 36, 37, 41, 42, 48, 50, 54], "n": [7, 17, 28, 30, 34, 46, 49, 50], "n_pt": 42, "n_repeat": 37, "name": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 24, 26, 28, 31, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 50, 52, 54, 55], "natur": [40, 46], "navig": 51, "ndarrai": [4, 5, 7, 10, 11, 22, 26, 31, 41, 43], "ne_capac": [4, 31], "ne_stoich_limit": 4, "neccessari": [31, 43], "necessari": [31, 42], "need": [30, 31, 37, 50, 55], "neg": [7, 18, 19, 42], "neg_ocp": 42, "nest": [21, 54], "net": [24, 41], "never": 43, "new": [9, 24, 26, 30, 37, 50], "new_column_definit": 24, "new_column_nam": 24, "new_data": 26, "newar": [1, 12, 13, 14, 18, 35, 36, 37, 38, 40, 41, 43, 44, 48, 49, 54], "next": 7, "nmc": 42, "nmc622": [35, 36, 37, 38, 40, 41, 43, 44, 48], "nmc_lgm50_ocp_chen2020": 42, "nois": 38, "noisi": [8, 10], "nomin": [35, 36, 37, 38, 40, 41, 43, 44, 48], "non": 10, "none": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26], "normal": [37, 41, 42, 43, 48], "notat": 46, "note": 30, "notebook": [42, 50], "notic": 43, "now": [37, 38, 42], "np": [4, 5, 7, 10, 11, 22, 26, 31, 35, 37, 38, 40, 42, 43], "null": 41, "number": [9, 12, 15, 17, 21, 24, 30, 31, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 48, 49, 54], "numer": [21, 46], "numpi": [8, 26, 31, 35, 37, 38, 40, 41, 42, 43, 46], "o": [37, 42, 44], "object": [6, 7, 8, 9, 10, 12, 20, 21, 22, 24, 25, 26, 28, 31, 35, 36, 38, 40, 41, 42, 43, 44, 47, 51, 52, 53], "occur": 43, "occurr": 10, "ocp": [1, 2, 4, 7, 42], "ocp_c1": 4, "ocp_c2": 4, "ocp_comp1": 7, "ocp_comp2": 7, "ocp_funct": 7, "ocp_list": 7, "ocp_n": [4, 7, 42], "ocp_p": [4, 7, 42], "ocp_vector": 7, "ocv": [4, 7, 9, 35, 36, 38, 39, 44], "ocv_curve_fit": [2, 3, 4], "ocv_result": 42, "odd": 10, "offer": [5, 8, 38], "often": 31, "ohm": [9, 28, 36], "omit": 43, "onc": [30, 37, 41, 47, 48, 49, 51], "one": [26, 30, 37, 43, 46, 50, 54], "onli": [10, 30, 31, 32, 36, 37, 43, 48, 55], "open": [4, 7, 40, 42, 50, 51], "oper": 47, "opt": 43, "optim": [4, 7, 37, 42], "optimizer_opt": [7, 42], "option": [7, 8, 10, 12, 18, 19, 21, 24, 25, 26, 37], "optional_vari": 12, "order": [7, 10, 48, 50], "org": [5, 8, 35, 38, 42], "origin": [37, 41], "other": [12, 24, 26, 43, 47, 52], "otherwis": [10, 26], "our": [36, 37, 42], "out": [35, 36, 38, 40, 41, 42, 54], "outer": [21, 54], "output": [42, 48], "output_data_path": 12, "output_filenam": [12, 37, 41, 48], "output_name_gener": 48, "outsid": 41, "ouyang": [5, 8, 35, 38], "overal": 37, "overhead": 37, "overrid": 30, "overwrite_exist": 12, "overwritten": 12, "own": [30, 34, 40, 48, 54], "p": [18, 28], "packag": [0, 31, 34, 35, 38, 42, 43, 50], "pair": 48, "panda": 37, "pandas_tim": 37, "pandas_voltag": 37, "paper": [5, 8], "parallel": 7, "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 31, 36], "parameter": 42, "parametr": 48, "parquet": [12, 21, 35, 36, 37, 38, 40, 41, 43, 44, 48], "pars": 30, "part": [41, 47, 54], "particular": [7, 43, 51], "particularli": 54, "pass": [24, 31, 32, 41, 46, 47, 49], "patch_artist": 37, "patel": [5, 8], "path": [12, 14, 15, 16, 17, 18, 19, 21, 25, 34, 37, 44, 48, 50], "pattern": [28, 48], "pchip": [7, 10], "pchip_interpol": [1, 2, 10], "pd": 37, "pe_capac": [4, 31], "pe_stoich_limit": 4, "peng": [5, 8], "perform": [12, 21, 26, 30, 31, 32, 39, 43, 44, 47, 48], "period": 37, "perman": 24, "pii": [5, 8], "ping": [5, 8], "pip": [34, 42, 50], "pl": [15, 16, 17, 18, 19, 21, 24, 26, 28, 31, 37, 42, 43], "place": 50, "planella": 42, "plot": [0, 1, 32, 35, 36, 37, 38, 40, 41, 42, 44, 47, 48, 51, 53, 55], "plotli": [22, 52], "plt": [37, 42], "point": [8, 9, 10, 22, 31, 36, 41, 42], "polar": [15, 18, 19, 21, 26, 33, 37, 42, 43, 46, 49], "polynomi": 10, "polynomial_ord": 10, "polyord": 10, "poor": 38, "popul": 48, "popular": [37, 38, 50], "portabl": 31, "pos_ocp": 42, "posit": [7, 10, 18, 19, 42], "possibl": [31, 46], "potenti": [4, 7], "power": 40, "ppoli": 7, "pre": 34, "preced": 26, "prefix": 28, "prefix_dict": [1, 28], "preprocess": [20, 53], "presenc": 24, "present": [11, 12, 14, 15, 18, 24, 43], "prevent": 43, "previou": [7, 17, 40, 54], "previous": [10, 48], "principl": 32, "print": [26, 32, 36, 37, 38, 40, 41, 42, 43, 44, 48], "print_definit": [1, 26], "prior": 38, "prioriti": [12, 37], "prioritis": 37, "problem": 43, "procedur": [0, 1, 6, 7, 8, 9, 10, 11, 12, 21, 23, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 51, 52, 54], "procedure_nam": [12, 35, 36, 37, 38, 40, 41, 43, 44, 48], "process": [14, 15, 16, 17, 18, 19, 25, 30, 31, 37, 44, 46, 48, 49, 50, 51], "process_cycler_fil": [1, 12, 37, 41, 48], "process_generic_fil": [1, 12], "process_readm": [0, 1, 25], "processed_cycler_fil": 48, "processed_cycler_file_": 48, "processed_cycler_file_cycl": 48, "processed_cycler_file_rpt": 48, "produc": [12, 42, 51], "program": 49, "prompt": 50, "properti": [7, 11, 15, 18, 19, 21, 22, 24, 26, 30, 41], "protocol": 48, "provid": [7, 8, 9, 12, 21, 24, 26, 31, 32, 36, 39, 40, 41, 44, 47, 48, 49, 54], "pseudo": [35, 38], "puls": [1, 2, 36, 40, 41, 54], "pulse_numb": 9, "pulse_object": 36, "pulse_resist": 36, "pulse_rest": [2, 9], "pulse_summari": [2, 9], "pulsing_experi": 36, "purpl": 40, "purpos": 54, "put": 42, "py": [42, 43], "pybamm": [12, 24, 25, 40, 54], "pybamm_experi": [1, 24], "pybamm_solut": 12, "pydant": [6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 24, 26, 30, 31, 33, 43], "pydantic_cor": 43, "pyplot": [37, 42], "pyprb": 25, "pyprob": [30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 50, 52, 53, 55], "pyprobe_datafram": [13, 15], "pyprobe_tim": 37, "pyprobe_typ": [0, 1], "pyprobe_voltag": 37, "pyprobedatatyp": [0, 1, 23, 31], "pyproberawdatatyp": [0, 1, 23], "pytest": 43, "python": [34, 40, 43, 46, 50], "python3": 43, "q": [17, 30, 49], "quantifi": 7, "quantify_degradation_mod": [1, 2, 7], "quantiti": [1, 26, 28, 52], "queri": 37, "quickli": [40, 41], "r": [5, 8, 34, 40, 50], "r0": [9, 36], "r_10": 36, "r_time": [9, 36], "rais": [5, 11, 26], "rang": [21, 22, 37, 42], "rate": 8, "raw": [23, 38, 41], "raw_data_dvdq": 38, "rawdata": [0, 1, 7, 8, 9, 10, 11, 21, 23, 32, 39, 49, 52, 53], "re": [30, 35, 37, 38, 43], "read": [12, 15, 16, 17, 18, 19, 30, 31, 37, 40, 47], "read_csv": 37, "read_fil": [13, 15, 16, 17, 18, 19, 30], "read_parquet": 37, "readabl": [31, 54], "reader": 48, "readm": [12, 21, 25, 40, 46, 48, 53], "readme_dict": [1, 21, 25, 41], "readme_nam": 12, "readme_path": 25, "readme_processor": [0, 1], "readmemodel": [0, 1, 25], "real": 54, "reason": 36, "recent": 43, "recogn": 30, "recommend": [31, 34, 50, 54], "record": [12, 48, 53], "record_filepath": [12, 48], "red": [35, 36, 37, 38, 40, 42], "reduc": 30, "refer": [5, 8, 24, 36, 48], "referenc": 24, "reference_capac": 24, "reference_charg": [24, 36], "reflect": [12, 34], "regan": 42, "regular": 28, "regular_express": 28, "rel": [24, 49], "relat": [30, 55], "releas": [50, 51], "reliabl": [5, 8, 35, 38], "remain": [7, 24, 31], "remov": [18, 19, 21, 26, 37, 38], "remove_experi": [1, 21], "ren": [5, 8], "renam": 21, "rep_csv_time_panda": 37, "rep_median_total_time_idx_panda": 37, "rep_median_total_time_idx_pyprob": 37, "rep_median_total_time_panda": 37, "rep_median_total_time_pyprob": 37, "rep_pandas_tim": 37, "rep_pandas_voltag": 37, "rep_pyprobe_tim": 37, "rep_pyprobe_voltag": 37, "rep_total_time_panda": 37, "rep_total_time_pyprob": 37, "repeat": [37, 49, 54], "repeated_data": 37, "replac": [31, 37], "repositori": [31, 34, 50, 51], "repres": [5, 9, 21], "request": [32, 37, 43], "requir": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 24, 26, 30, 31, 34, 36, 37, 41, 43, 44, 47, 48, 49, 50, 55], "required_column": [2, 11, 31, 43], "required_typ": [31, 43], "resampl": 10, "reset": 46, "resist": [9, 28, 36], "respect": [7, 8, 10, 31], "rest": [1, 9, 21, 31, 40, 41, 46, 54], "rest_0": 40, "rest_1": 40, "rest_numb": [9, 21], "restart": 42, "result": [0, 1, 6, 7, 8, 9, 10, 11, 12, 22, 23, 24, 31, 32, 36, 37, 38, 41, 42, 43, 46, 47, 51, 52], "retriev": [7, 31, 37, 40, 43, 44, 46], "return": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 31, 37, 41, 42, 43, 46, 47, 48], "rich": 42, "rig": 12, "right": 37, "rmtree": 44, "root_fold": 48, "rpt": 48, "rst": 44, "ruih": [5, 8], "run": [7, 12, 34, 37, 41, 42, 48, 50, 51, 55], "run_batch_dma_parallel": [1, 2, 7], "run_batch_dma_sequenti": [1, 2, 7], "run_ocv_curve_fit": [1, 2, 7, 42], "s2590116820300084": [5, 8], "sai": 43, "sake": [35, 38, 40, 41, 42], "same": [7, 10, 12, 24, 30, 37, 41, 48, 54], "sampl": [5, 8, 10, 35, 36, 37, 38, 40, 41, 43, 44, 48], "sample_arch": 44, "sample_data": [35, 36, 37, 38, 40, 41, 43, 44], "sample_data_newar": [35, 36, 37, 38, 40, 41, 43, 44], "sample_data_neware_rep": 37, "sampling_interv": [10, 38], "santhanagopalan": [5, 8], "save": [37, 48], "saved_cel": 44, "savgol_smooth": [1, 2, 10], "savitzki": 10, "scalabl": 37, "scale": [22, 42], "scene": [32, 43], "scienc": [5, 8], "sciencedirect": [5, 8], "scipi": 10, "script": [20, 50], "sec": [18, 49], "second": [7, 9, 26, 37, 40, 41, 42, 48, 50, 52, 54], "secondari": 22, "secondary_i": 22, "section": [5, 8, 24, 40, 47, 48, 49, 51, 54], "see": [14, 15, 18, 26, 43, 45, 47, 48, 52], "select": [10, 37, 40, 46, 47, 50], "self": 43, "self_inst": 43, "separ": [36, 40, 50, 54], "seper": [26, 40, 54], "sequenti": 7, "seri": [26, 48], "serial": 54, "server": 42, "set": [12, 24, 30, 32, 34, 35, 37, 42, 43], "set_reference_capac": [1, 24], "set_soc": [1, 24, 36], "set_titl": 37, "set_vis": 37, "set_ylabel": 37, "set_yscal": 37, "setup": 55, "shape": [36, 37, 41, 42, 43], "share": 39, "sharei": 37, "shift": 37, "shortcut": 53, "should": [30, 31, 43, 50, 54], "show": [1, 22, 35, 37, 38, 40, 41, 42, 44, 52], "show_imag": [1, 22, 35, 36, 38, 40, 41, 42], "showflier": 37, "showlegend": 22, "shriram": [5, 8], "shutil": 44, "si": 28, "simpl": [31, 44, 46, 47], "simplest": 30, "simpli": [3, 30, 31, 46], "simplifi": 31, "sinc": [41, 42], "singl": [7, 12, 15, 18, 19, 26, 29, 44, 48, 49, 54], "site": 43, "size": [5, 8, 10, 12, 22, 37], "skip": [12, 37, 40, 54], "slice": 5, "smooth": [1, 2, 5, 8, 31, 38, 43], "smooth_gradi": [2, 3, 5], "smoothing_filt": 8, "smoothing_lambda": [10, 38], "so": [17, 24, 32, 35, 37, 38, 40, 41, 43, 46, 48, 54], "soc": [4, 7, 9, 24, 31, 36, 42], "societi": 42, "softwar": 50, "soh": [4, 6, 7, 41], "solid": 22, "solut": 12, "some": [30, 40, 41, 43, 44, 48, 54], "someth": 48, "sometim": 30, "sourc": [21, 30, 34, 48, 50], "space": [5, 8], "special": 46, "specif": [24, 30, 43, 47, 51], "specifi": [10, 24, 26, 31, 43, 46], "speed": [37, 48], "spline": [10, 38], "spline_smooth": [1, 2, 10, 38], "spline_smoothed_data": 38, "spline_smoothed_data_dvdq": 38, "split": [5, 40], "stabl": 50, "stage": 51, "standard": [24, 30, 31, 39, 43, 48, 49], "start": [21, 30, 39, 40, 43, 44, 49, 50, 54], "start_tim": 37, "state": [6, 36, 38], "static": [7, 15, 16, 17, 18, 19, 22], "statist": 9, "step": [0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 30, 31, 34, 37, 40, 41, 42, 43, 46, 48, 49, 50, 54], "step_descript": [1, 21, 24, 41], "step_incr": 37, "step_numb": 21, "step_rep": 37, "still": 40, "sto": 42, "stoichiometri": [4, 7, 31, 42], "stoichiometry_comp1": 7, "stoichiometry_comp2": 7, "stoichiometry_limit": 42, "stoichiometry_limits_list": 7, "storag": 32, "store": [26, 28, 31, 40, 43, 44, 48, 49, 51, 54], "str": [4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 30, 31, 37], "straightforward": 44, "streamlit": [20, 50], "strength": 40, "strict": [31, 43], "stricter": 24, "string": [12, 14, 15, 18, 30, 40, 43, 46, 48, 54], "structur": [53, 54], "studio": 50, "style": 22, "subclass": 24, "submodul": [0, 31], "subpackag": 0, "subplot": 37, "subsequ": 21, "summari": [1, 2, 6, 9, 36, 41], "summaris": [9, 49, 51], "support": [21, 48, 50, 53], "sympi": [7, 42], "sympy_express": 7, "syntax": 54, "synthet": 42, "t": [36, 37, 43], "t1": [16, 19, 49], "tabl": 49, "tag": 50, "take": [10, 18, 26, 36], "taken": [10, 49], "tanh": 42, "target": [4, 7, 10], "target_column": [10, 38], "techniqu": 42, "tell": 43, "temp": [18, 49], "temperatur": [13, 14, 15, 16, 17, 18, 19, 28, 41, 43, 49], "templat": 22, "tempt": 31, "termin": [41, 50], "test": [12, 14, 18, 26, 35, 36, 37, 38, 40, 41, 43, 44, 48, 49, 54], "test_csv": 37, "testabl": 31, "text": 42, "than": [24, 37, 46], "thei": [12, 17, 31, 41, 43, 48], "them": [21, 30, 40, 42, 45, 47, 48], "therefor": [43, 46, 54], "thi": [7, 8, 10, 12, 17, 18, 19, 21, 24, 26, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 53, 54], "third": [40, 52], "three": 40, "through": [10, 30, 32, 41], "throughout": [32, 48], "throughput": 41, "tick_label": 37, "tickfont": 22, "tight_layout": 37, "time": [9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 24, 26, 28, 30, 35, 36, 37, 38, 40, 41, 43, 44, 48, 49, 52, 54], "time_column": 10, "time_incr": 37, "time_rep": 37, "time_unit_dict": [1, 28], "timeit": 37, "timeseri": 48, "timestamp": [21, 41, 49], "titl": [22, 25, 40, 54], "title_font_s": [1, 22], "to_default_unit": [1, 28], "togeth": 32, "too": [41, 54], "tool": 43, "total": [19, 37, 54], "total_time_panda": 37, "total_time_pyprob": 37, "traceback": 43, "track": 55, "treat": 54, "true": [6, 10, 12, 22, 26, 37, 43], "try": 43, "tupl": [4, 5, 7, 11, 21, 25, 26, 31], "twice": 49, "two": [7, 10, 26, 37, 40, 42, 43, 48, 50, 54], "txt": [34, 49, 50], "type": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 41, 43, 46, 47, 52], "u": [16, 42, 49], "u32": 36, "u_eq": 42, "uncom": 41, "uncompress": [12, 37], "under": 30, "undergo": 48, "undergon": 48, "underli": [31, 43], "underpin": 31, "unexpect": 43, "unifomli": 8, "uniformli": 5, "union": 26, "uniqu": [37, 49], "unique_cycl": 37, "unique_ev": 37, "unit": [0, 1, 12, 14, 15, 16, 17, 18, 19, 26, 30, 35, 41, 46, 49], "unit_dict": [1, 28], "unit_from_regexp": [0, 1, 28], "unset": 30, "until": [36, 37, 40, 41, 54], "up": [30, 32, 37, 44, 45, 48], "updat": 50, "upon": 24, "upper": 37, "upward": 54, "url": [5, 8], "us": [4, 7, 8, 10, 12, 21, 22, 24, 26, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55], "user": [24, 31, 32, 36, 38, 45, 46, 51, 55], "usual": 48, "util": [0, 1, 2, 42], "v": [9, 12, 24, 28, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 49, 52, 54], "v0": 50, "valid": [11, 12, 14, 15, 16, 17, 18, 19, 21, 24, 26, 31, 32, 39, 44, 47], "validate_cal": [31, 32, 43], "validate_call_decor": 43, "validate_call_wrapp": 43, "validate_python": 43, "validate_required_column": [2, 11], "validatecallwrapp": 43, "validationerror": 43, "valu": [5, 12, 21, 24, 26, 36, 37, 43, 48, 49, 54], "value_error": 43, "valueerror": [5, 11, 26], "variabl": [2, 8, 10, 11, 12, 21, 30, 31, 43], "variant": [43, 46], "vector": [5, 7, 42], "venv": [34, 50], "veri": 30, "verifi": [43, 48], "version": 50, "vert": 37, "viridi": 22, "virtual": [34, 50], "visit": 43, "visual": 50, "visualis": 51, "volt": 49, "voltag": [12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 28, 30, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 49, 52], "vscode": [50, 54], "w": 28, "wa": 49, "wai": [24, 31, 40, 41, 48, 50], "wang": [5, 8], "want": 21, "wd": 42, "we": [31, 35, 36, 37, 38, 40, 41, 42, 43, 44], "web": 51, "week": 37, "well": 55, "weng": [5, 8, 35, 38], "were": [43, 49], "when": [10, 12, 18, 19, 24, 26, 30, 31, 32, 36, 37, 41, 43, 46, 47, 48, 49, 54, 55], "whenev": 43, "where": [7, 9, 30, 37, 48, 49, 54], "wherea": 37, "whether": [6, 7, 10, 22, 26], "which": [8, 9, 24, 30, 31, 32, 34, 35, 36, 38, 40, 43, 47, 48, 50, 51, 54, 55], "whichev": 35, "while": [10, 30, 31], "who": 46, "why": 54, "widanag": 42, "width": 22, "wildcard": 48, "window": [10, 50], "window_length": 10, "wish": [34, 50], "with_column": 37, "within": [9, 10, 30, 41, 47, 54], "without": 26, "work": [30, 31, 32, 34, 36, 43, 50, 53], "workflow": 48, "worksheet": 12, "worksheet_nam": [12, 48], "would": 43, "wrap": 43, "wrapper": [8, 26, 31, 43], "wrapper_funct": 43, "write": [12, 31, 37, 48, 50, 53], "write_parquet": 37, "written": [43, 54], "www": [5, 8], "x": [5, 8, 10, 22, 31, 35, 38, 41, 42, 43, 47, 52], "x0": [7, 42], "x64": 43, "x_c1": 4, "x_c2": 4, "x_data": [31, 43], "x_guess": 4, "x_ne": [4, 42], "x_ne_hi": [4, 7, 31, 42], "x_ne_lo": [4, 7, 31, 42], "x_pe": [4, 42], "x_pe_hi": [4, 7, 31, 42], "x_pe_lo": [4, 7, 31, 42], "x_rang": [1, 22], "xaxi": 22, "xiangm": [5, 8], "xlabel": [37, 42], "xlsx": [12, 37, 41, 48, 49], "xtick": 37, "xueb": [5, 8], "xuemin": [5, 8], "xune": [5, 8], "y": [5, 8, 10, 14, 18, 22, 31, 35, 37, 38, 41, 42, 43, 47, 52], "y2_rang": [1, 22], "y_data": [31, 43], "y_rang": [1, 22], "y_sampling_interv": [2, 3, 5], "yaml": [12, 21, 25, 40, 46, 48, 53], "yan": [5, 8], "yann": [5, 8], "yatish": [5, 8], "yaxi": [22, 37], "yaxis_titl": 36, "ye": 49, "year": 37, "yi": [5, 8], "ylabel": [37, 42], "you": [12, 21, 30, 31, 34, 35, 37, 38, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54], "your": [30, 31, 32, 34, 42, 47, 48, 50, 51, 54], "yscale": 37, "ytick": 37, "yu": [5, 8], "z": 42, "z_ne_hi": 4, "z_ne_lo": 4, "z_pe_hi": 4, "z_pe_lo": 4, "zero": [24, 30, 35, 37, 40, 43, 46], "zero_column": [1, 24], "zhao": [5, 8], "zip": [12, 44], "zstd": 12, "\u00b5": 28, "\u03bc": 41}, "titles": ["pyprobe", "pyprobe package", "pyprobe.analysis package", "pyprobe.analysis.base package", "pyprobe.analysis.base.degradation_mode_analysis_functions module", "pyprobe.analysis.base.differentiation_functions module", "pyprobe.analysis.cycling module", "pyprobe.analysis.degradation_mode_analysis module", "pyprobe.analysis.differentiation module", "pyprobe.analysis.pulsing module", "pyprobe.analysis.smoothing module", "pyprobe.analysis.utils module", "pyprobe.cell module", "pyprobe.cyclers package", "pyprobe.cyclers.arbin module", "pyprobe.cyclers.basecycler module", "pyprobe.cyclers.basytec module", "pyprobe.cyclers.biologic module", "pyprobe.cyclers.maccor module", "pyprobe.cyclers.neware module", "pyprobe.dashboard module", "pyprobe.filters module", "pyprobe.plot module", "pyprobe.pyprobe_types module", "pyprobe.rawdata module", "pyprobe.readme_processor module", "pyprobe.result module", "pyprobe.typing module", "pyprobe.units module", "pyprobe.utils module", "Adding a Cycler", "Contributing to the Analysis Module", "Dependency Guide", "Developer Guide", "Installation", "Differentiating with the LEAN algorithm", "Analysing GITT data", "Comparing PyProBE Performance", "Differentiating voltage data", "Examples", "Filtering data", "Getting started with PyProBE", "OCV Fitting", "Providing Valid Inputs", "Sharing Data", "PyProBE documentation", "Accessing Data", "Analysis", "Importing Data", "Input Data Guidance", "Installation", "Introduction", "Plotting", "User Guide", "Writing a README file", "Writing an Experiment record"], "titleterms": {"The": 54, "access": 46, "ad": [30, 48], "algorithm": 35, "an": 55, "analys": 36, "analysi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 31, 43, 47], "arbin": 14, "base": [3, 4, 5, 31], "basecycl": 15, "basytec": 16, "batch": 48, "biolog": 17, "cell": [12, 48], "column": 49, "compar": 37, "contribut": 31, "convert": [41, 48], "cycl": 6, "cycler": [13, 14, 15, 16, 17, 18, 19, 30, 48, 49], "dashboard": 20, "data": [36, 38, 40, 41, 44, 46, 48, 49], "degradation_mode_analysi": 7, "degradation_mode_analysis_funct": 4, "depend": 32, "develop": 33, "differenti": [8, 35, 38], "differentiation_funct": 5, "document": [45, 51], "exampl": 39, "experi": 55, "file": [48, 54], "filter": [21, 40, 46], "fit": 42, "format": [41, 48, 49, 54], "from": 48, "function": 31, "get": 41, "gitt": 36, "guid": [32, 33, 53], "guidanc": 49, "import": 48, "input": [43, 48, 49], "instal": [34, 50], "introduct": 51, "lean": 35, "maccor": 18, "make": 48, "modul": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 43], "multipl": 48, "newar": 19, "object": [46, 48], "ocv": 42, "packag": [1, 2, 3, 13], "perform": 37, "plot": [22, 52], "polar": 32, "preprocess": 48, "provid": 43, "puls": 9, "pydant": 32, "pyprob": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 41, 45, 48, 49, 51, 54], "pyprobe_typ": 23, "rawdata": [24, 43, 46], "readm": 54, "readme_processor": 25, "record": 55, "result": 26, "share": 44, "shortcut": 54, "smooth": 10, "standard": 41, "start": 41, "structur": 51, "submodul": [1, 2, 3, 13], "subpackag": [1, 2], "support": 49, "thi": 51, "type": 27, "unit": 28, "user": 53, "util": [11, 29], "valid": 43, "voltag": 38, "work": 48, "write": [54, 55], "yaml": 54}})