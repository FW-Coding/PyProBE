Search.setIndex({"docnames": ["accessing_data", "creating_a_new_method", "developer_guide", "developer_installation", "importing_data", "index", "input_data_guidance", "installation", "introduction", "modules", "plotting", "pyprobe", "pyprobe.cell", "pyprobe.cyclers", "pyprobe.cyclers.basecycler", "pyprobe.cyclers.biologic", "pyprobe.cyclers.neware", "pyprobe.dashboard", "pyprobe.experiments", "pyprobe.experiments.baseexperiment", "pyprobe.experiments.cycling", "pyprobe.experiments.pOCV", "pyprobe.experiments.pulsing", "pyprobe.filter", "pyprobe.methods", "pyprobe.methods.basemethod", "pyprobe.methods.differentiation", "pyprobe.methods.differentiation.LEAN", "pyprobe.methods.ocv_fitting", "pyprobe.methods.ocv_fitting.DMA", "pyprobe.methods.ocv_fitting.Simple_OCV_fit", "pyprobe.plot", "pyprobe.procedure", "pyprobe.rawdata", "pyprobe.result", "pyprobe.unitconverter", "user_guide", "writing_a_readme_file", "writing_an_experiment_record"], "filenames": ["accessing_data.rst", "creating_a_new_method.rst", "developer_guide.rst", "developer_installation.rst", "importing_data.rst", "index.rst", "input_data_guidance.rst", "installation.rst", "introduction.rst", "modules.rst", "plotting.rst", "pyprobe.rst", "pyprobe.cell.rst", "pyprobe.cyclers.rst", "pyprobe.cyclers.basecycler.rst", "pyprobe.cyclers.biologic.rst", "pyprobe.cyclers.neware.rst", "pyprobe.dashboard.rst", "pyprobe.experiments.rst", "pyprobe.experiments.baseexperiment.rst", "pyprobe.experiments.cycling.rst", "pyprobe.experiments.pOCV.rst", "pyprobe.experiments.pulsing.rst", "pyprobe.filter.rst", "pyprobe.methods.rst", "pyprobe.methods.basemethod.rst", "pyprobe.methods.differentiation.rst", "pyprobe.methods.differentiation.LEAN.rst", "pyprobe.methods.ocv_fitting.rst", "pyprobe.methods.ocv_fitting.DMA.rst", "pyprobe.methods.ocv_fitting.Simple_OCV_fit.rst", "pyprobe.plot.rst", "pyprobe.procedure.rst", "pyprobe.rawdata.rst", "pyprobe.result.rst", "pyprobe.unitconverter.rst", "user_guide.rst", "writing_a_readme_file.rst", "writing_an_experiment_record.rst"], "titles": ["Accessing Data", "Creating a New Method", "Developer Guide", "Installation", "Importing Data", "PyProBE documentation", "Input Data Guidance", "Installation", "Introduction", "pyprobe", "Plotting", "pyprobe package", "pyprobe.cell module", "pyprobe.cyclers package", "pyprobe.cyclers.basecycler module", "pyprobe.cyclers.biologic module", "pyprobe.cyclers.neware module", "pyprobe.dashboard module", "pyprobe.experiments package", "pyprobe.experiments.baseexperiment module", "pyprobe.experiments.cycling module", "pyprobe.experiments.pOCV module", "pyprobe.experiments.pulsing module", "pyprobe.filter module", "pyprobe.methods package", "pyprobe.methods.basemethod module", "pyprobe.methods.differentiation package", "pyprobe.methods.differentiation.LEAN module", "pyprobe.methods.ocv_fitting package", "pyprobe.methods.ocv_fitting.DMA module", "pyprobe.methods.ocv_fitting.Simple_OCV_fit module", "pyprobe.plot module", "pyprobe.procedure module", "pyprobe.rawdata module", "pyprobe.result module", "pyprobe.unitconverter module", "User Guide", "Writing a README file", "Writing an Experiment record"], "terms": {"pyprob": [0, 1, 3, 7, 10, 36, 37, 38], "i": [0, 1, 3, 4, 6, 7, 8, 10, 12, 20, 27, 31, 33, 34, 35, 37, 38], "design": [0, 8], "have": [0, 1, 4, 7], "simpl": [0, 1, 8, 30], "interfac": [0, 8], "The": [0, 1, 3, 4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38], "method": [0, 2, 4, 8, 9, 11, 33, 37], "us": [0, 1, 3, 4, 5, 6, 7, 8, 12, 25, 27, 31, 37, 38], "chain": 0, "notat": 0, "natur": [0, 8], "languag": [0, 8], "approach": [0, 8, 27], "user": [0, 5, 8, 33, 38], "who": 0, "ar": [0, 1, 3, 4, 6, 7, 8, 10, 14, 27, 37], "less": [0, 1], "familiar": 0, "python": [0, 3, 7, 8], "procedur": [0, 4, 8, 9, 10, 11, 12, 19, 20, 21, 22, 37], "experi": [0, 4, 8, 9, 10, 11, 12, 23, 32, 36, 37], "name": [0, 4, 6, 7, 10, 12, 25, 27, 32, 33, 34, 35, 37, 38], "specifi": [0, 23, 33], "string": [0, 12, 37], "either": [0, 3, 27, 33], "when": [0, 6, 12, 33, 34, 38], "import": [0, 1, 6, 7, 13, 14, 36, 37], "readm": [0, 4, 8, 12, 32, 36], "yaml": [0, 4, 32, 37], "file": [0, 8, 12, 14, 15, 16, 32, 36, 38], "It": [0, 3, 4, 7, 8, 37, 38], "possibl": 0, "number": [0, 4, 6, 12, 14, 22, 23, 32, 33, 37], "first": [0, 4, 10, 33], "cell": [0, 8, 9, 10, 11, 20, 22, 30, 36, 37, 38], "Then": [0, 1, 8, 10], "numer": [0, 23], "class": [0, 1, 5, 6, 10, 12, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35, 38], "cycl": [0, 4, 6, 8, 9, 10, 11, 13, 14, 18, 23, 32, 33, 37], "1": [0, 1, 4, 6, 7, 27, 37], "step": [0, 3, 4, 6, 7, 8, 11, 13, 14, 15, 22, 23, 32, 33, 37], "3": [0, 3, 6, 7, 27, 37], "type": [0, 10, 12, 14, 16, 20, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37], "charg": [0, 1, 6, 8, 10, 11, 14, 20, 23, 33, 37], "2": [0, 6, 8, 10, 37], "discharg": [0, 6, 11, 14, 20, 23, 33, 37], "0": [0, 4, 7, 8, 27, 35, 37], "rest": [0, 1, 11, 22, 23, 37], "chargeordischarg": [0, 11, 23], "4": [0, 10, 37], "indic": [0, 23], "zero": [0, 33, 35], "base": [0, 6, 10, 12, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35], "so": 0, "etc": [0, 4], "index": [0, 6, 8, 23], "count": [0, 27], "reset": [0, 37], "after": [0, 22], "appli": [0, 27, 33], "everi": 0, "e": [0, 3, 4, 6, 12], "ani": [0, 1, 3, 4, 7, 8, 10, 12, 14, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35], "return": [0, 1, 4, 12, 14, 16, 20, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35], "thi": [0, 1, 3, 4, 6, 7, 12, 27, 33, 34, 36, 37], "hold": 0, "attribut": [0, 1, 4, 8], "polar": [0, 6, 33, 34], "datafram": [0, 14, 15, 16, 19, 20, 21, 22, 23, 31, 33, 34, 35], "contain": [0, 4, 8, 12, 14, 22, 25, 27, 31, 33, 34, 37], "info": [0, 4, 8, 11, 12, 19, 20, 21, 22, 23, 32, 33, 34, 38], "": [0, 1, 5, 6, 8, 10, 14, 33, 35, 37, 38], "dictionari": [0, 1, 4, 8, 25, 33, 34, 38], "To": [0, 3, 5, 7], "you": [0, 1, 3, 4, 7, 8, 10, 37], "can": [0, 1, 3, 4, 7, 8, 10, 27, 37], "full": [0, 12, 30], "Or": 0, "individu": 0, "column": [0, 1, 4, 14, 15, 16, 23, 26, 27, 31, 33, 34, 35, 36, 38], "1d": [0, 1], "numpi": [0, 1, 22, 25], "arrai": [0, 1, 25, 31], "call": [0, 1, 3, 7, 12, 33], "voltag": [0, 6, 10, 13, 14, 22, 23, 30, 33, 35, 37], "v": [0, 6, 10, 14, 33, 35], "directli": 0, "convert": [0, 6, 12, 34, 35, 36], "unit": [0, 6, 34, 35], "store": [0, 4, 6, 8, 12, 34, 35, 37], "current_ma": 0, "current": [0, 1, 6, 13, 14, 22, 23, 33, 35, 37], "ma": 0, "In": [1, 3, 7], "perform": [1, 4], "further": [1, 8, 33], "analysi": [1, 8, 27, 37], "data": [1, 7, 8, 10, 11, 12, 14, 15, 16, 23, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37], "thei": [1, 4, 14], "peform": 1, "rawdata": [1, 6, 9, 10, 11, 23, 27, 30, 36], "result": [1, 8, 9, 10, 11, 20, 22, 25, 26, 27, 29, 31, 33], "object": [1, 8, 10, 12, 14, 20, 22, 23, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37], "document": [1, 10, 36, 37], "describ": [1, 4, 8, 27, 37], "standard": [1, 4, 6], "format": [1, 8, 12, 14, 15, 32, 36, 37], "all": [1, 4, 8, 14, 27], "construct": 1, "your": [1, 3, 4, 7, 8, 37], "wai": [1, 4], "ensur": [1, 8], "compat": [1, 8], "packag": [1, 3, 7, 8, 9], "while": [1, 8], "keep": [1, 35, 38], "code": [1, 3, 7, 8], "clean": 1, "easi": [1, 8], "read": [1, 12, 14, 15, 16], "start": [1, 6, 22, 33], "an": [1, 4, 5, 8, 19, 23, 31, 32, 33, 36, 37], "__init__": 1, "where": [1, 4, 37], "variabl": [1, 23, 24, 25, 27, 32], "assign": [1, 4], "defin": [1, 4, 8, 14, 34], "input": [1, 8, 12, 25, 26, 27, 36], "calcul": [1, 14, 20, 26, 27, 29, 30, 33], "other": [1, 8, 10], "function": [1, 4, 8, 12, 13, 31, 32], "insid": [1, 3, 32], "which": [1, 3, 4, 7, 8, 27, 33, 37, 38], "allow": [1, 8, 37], "them": [1, 4, 5], "add": [1, 4, 10, 12, 31, 33, 38], "addit": [1, 12, 26, 33, 38], "minim": 1, "dimension": 1, "For": [1, 4, 7, 10, 37], "instanc": [1, 4, 10], "exampl": [1, 3, 4, 5, 7, 27, 37, 38], "below": [1, 6, 8, 37], "time": [1, 6, 10, 13, 14, 16, 22, 33, 35, 37], "both": 1, "could": 1, "same": [1, 4, 37], "singl": [1, 4, 6, 14, 32, 33, 37], "2d": 1, "each": [1, 4, 12, 22, 37], "howev": [1, 8, 37], "would": 1, "made": 1, "readabl": [1, 8, 37], "from": [1, 3, 4, 6, 8, 12, 14, 23, 25, 26, 29, 32, 33, 35, 37], "basemethod": [1, 11, 24, 27, 29, 30], "coulombcount": 1, "A": [1, 4, 6, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "pass": [1, 6, 33, 37], "def": [1, 4], "self": 1, "input_data": [1, 24, 25, 26, 29], "initialis": 1, "coulomb": 1, "counter": 1, "arg": [1, 26, 33], "coulomb_count": 1, "make_result": [1, 24, 25], "c": 1, "np": [1, 27, 29, 30, 31], "trapz": 1, "abov": 1, "access": [1, 8, 36], "plot": [1, 4, 8, 9, 11, 12, 34, 36, 38], "instal": [2, 36], "creat": [2, 3, 4, 7, 10, 17, 31, 38], "new": [2, 7, 8, 33, 34], "must": [3, 4, 7, 12, 37], "run": [3, 4, 7, 8, 38], "11": [3, 7], "later": [3, 7, 12], "recommend": [3, 7], "virtual": [3, 7], "environ": [3, 7], "venv": [3, 7], "conda": [3, 7], "wih": 3, "develop": [3, 5, 8], "set": [3, 12], "follow": [3, 4, 6, 7, 8, 33, 37, 38], "enter": [3, 7], "directori": [3, 4, 7], "wish": [3, 7], "cd": [3, 7, 8], "path": [3, 4, 7, 12, 14, 15, 16, 32], "clone": [3, 7], "repositori": [3, 7, 8], "local": [3, 7, 8], "machin": [3, 7], "done": [3, 4, 37], "main": [3, 4, 8], "own": [3, 8], "fork": 3, "git": [3, 7], "http": [3, 7, 27], "github": [3, 7], "com": [3, 7, 27], "imperialcollegelondon": [3, 7], "activ": [3, 7], "work": [3, 7, 36], "m": [3, 7, 35], "sourc": [3, 7], "bin": [3, 7, 27], "n": [3, 6, 7, 35], "12": [3, 7, 35], "pip": [3, 7], "flag": 3, "edit": 3, "mode": 3, "mean": [3, 4], "chang": [3, 6, 14, 33], "make": [3, 5, 8, 12, 16, 25, 36], "automat": [3, 6, 33, 37, 38], "reflect": 3, "depend": [3, 27], "r": [3, 27], "requir": [3, 4, 6, 8, 38], "dev": 3, "txt": [3, 6], "pre": 3, "commit": 3, "hook": 3, "experiment": [4, 8, 27, 37, 38], "inform": [4, 12, 35, 37, 38], "ha": [4, 8, 10, 32, 37], "two": [4, 7], "detail": [4, 37, 38], "provid": [4, 27, 33, 37], "field": 4, "info_dictionari": 4, "sampl": [4, 27], "chemistri": 4, "nmc622": 4, "nomin": 4, "capac": [4, 6, 11, 13, 14, 20, 29, 30, 33, 35], "ah": [4, 6, 14, 33, 35], "04": 4, "cycler": [4, 8, 9, 11, 12, 36, 37], "channel": [4, 12], "kei": [4, 12, 14, 38], "valu": [4, 6, 22, 23, 27, 31, 33, 37], "pair": 4, "onli": [4, 8, 38], "identifi": [4, 6, 14, 15, 33], "dataset": 4, "collect": 4, "batteri": [4, 8, 12, 14, 15, 16, 19, 20, 21, 22, 27, 32, 37], "throughout": 4, "its": 4, "life": 4, "like": [4, 6, 8], "undergo": 4, "begin": 4, "test": [4, 8, 12, 33, 34, 37], "degrad": 4, "refer": [4, 27, 33], "rpt": [4, 8], "befor": [4, 20, 22], "process_cycler_fil": [4, 11, 12], "previous": 4, "newar": [4, 6, 11, 13, 37], "folder_path": [4, 12], "root_fold": 4, "experiment_fold": 4, "input_filenam": [4, 12], "cycler_fil": 4, "csv": [4, 6], "output_filenam": [4, 12], "processed_cycler_fil": 4, "parquet": 4, "save": 4, "onc": [4, 6, 8], "agnost": 4, "manufactur": 4, "model": 4, "more": 4, "up": [4, 5, 8], "date": [4, 6, 13, 14, 33], "list": [4, 7, 12, 14, 23, 25, 27, 29, 30, 31, 32, 35, 37, 38], "support": [4, 36, 37], "see": [4, 5, 8, 10], "guidanc": [4, 8, 36], "section": [4, 6, 8, 27, 33], "some": 4, "mai": 4, "output": [4, 12, 25], "biolog": [4, 6, 11, 13], "modulo": 4, "bat": 4, "assum": [4, 27], "folder": [4, 12], "abl": [4, 6], "process": [4, 6, 7, 8, 12, 14, 15, 16, 32], "wildcard": 4, "argument": [4, 10, 12, 23, 26, 27, 32, 33], "match": [4, 35], "pattern": [4, 35], "g": [4, 12], "cycler_file_1": 4, "cycler_file_2": 4, "cycler_file_": 4, "_mb": 4, "mpt": [4, 6], "correspond": [4, 6, 33, 37], "gener": [4, 6, 8, 12, 31, 37], "write": [4, 8, 36], "add_procedur": [4, 11, 12], "procedure_nam": [4, 12], "filenam": [4, 12, 14], "processed_cycler_file_cycl": 4, "second": [4, 10, 33, 37], "processed_cycler_file_rpt": 4, "print": [4, 11, 34], "dict": [4, 12, 14, 19, 20, 21, 22, 23, 25, 32, 33, 34], "If": [4, 8, 27, 35], "built": [4, 8, 38], "speed": 4, "workflow": 4, "fastest": 4, "do": 4, "record": [4, 12, 36], "alongsid": [4, 8, 37], "excel": [4, 38], "about": [4, 35, 37, 38], "undergon": 4, "make_cell_list": [4, 11, 12], "cell_list": [4, 12], "record_filepath": [4, 12], "experiment_record": 4, "xlsx": [4, 6, 12], "worsheet_nam": 4, "popul": 4, "includ": [4, 6, 8, 27, 37, 38], "parametr": 4, "filename_input": [4, 12], "order": 4, "These": [4, 8, 12], "input_name_gener": 4, "f": 4, "_": 4, "output_name_gener": 4, "processed_cycler_file_": 4, "guid": [5, 8], "get": [5, 27], "introduct": [5, 36], "capabl": 5, "how": 5, "api": 5, "explor": [5, 8], "modul": [5, 8, 9, 10, 11, 13, 18, 24, 26, 28], "learn": 5, "contribut": [5, 8], "_data": [6, 11, 19, 20, 21, 22, 23, 33, 34], "datatyp": 6, "datetim": [6, 33], "timestamp": [6, 33], "measur": [6, 33], "wa": 6, "taken": 6, "float64": [6, 22, 27, 29, 30, 31, 33], "elaps": 6, "filter": [6, 8, 9, 11, 19, 27, 32, 33, 36, 37], "int64": [6, 33], "uniqu": [6, 33], "instruct": [6, 33, 37], "program": [6, 8, 33], "repeat": [6, 37], "might": 6, "look": 6, "were": 6, "twice": 6, "decreas": [6, 14, 33], "event": [6, 13, 14, 33], "amper": [6, 33], "volt": [6, 33], "rel": [6, 33], "hour": [6, 33, 37], "Its": [6, 33], "increas": [6, 14, 33], "tabl": 6, "summaris": [6, 8, 37], "ye": 6, "acquisit": 6, "header": 6, "auto": 6, "ecel": 6, "chg": 6, "cap": 6, "dchg": 6, "q": 6, "mark": 6, "convers": [6, 35], "unitconvert": [6, 9, 11], "should": [7, 37], "separ": [7, 37], "one": 7, "script": [7, 17], "tag": 7, "releas": [7, 8], "stabl": 7, "version": 7, "avail": 7, "command": [7, 8], "checkout": 7, "desir": 7, "v0": [7, 18, 22], "updat": [7, 31], "fetch": 7, "jupyt": 7, "notebook": 7, "simplifi": 8, "analys": [8, 37], "four": 8, "core": 8, "eas": 8, "written": 8, "commonli": 8, "commun": 8, "been": 8, "those": 8, "littl": 8, "break": [8, 37], "down": 8, "complex": 8, "understand": 8, "few": 8, "line": [8, 10, 31], "shown": [8, 37], "puls": [8, 11, 18, 37], "third": [8, 10], "quickli": 8, "need": [8, 38], "acceler": 8, "fast": 8, "flexibl": 8, "visualis": 8, "also": 8, "graphic": 8, "gui": 8, "interact": 8, "almost": 8, "encourag": 8, "align": 8, "fair": 8, "principl": 8, "good": 8, "practic": 8, "sit": 8, "comput": 8, "backend": 8, "maximis": 8, "differ": [8, 37], "setup": [8, 12, 38], "intuit": 8, "human": [8, 37], "host": 8, "librari": 8, "post": 8, "framework": 8, "enabl": [8, 37], "maintain": 8, "tool": 8, "simpli": 8, "portabl": 8, "guidelin": 8, "flowchart": 8, "metadata": 8, "displai": [8, 10, 12], "produc": [8, 12], "stage": 8, "addition": 8, "doc": 8, "continu": [8, 31], "branch": 8, "particular": 8, "specif": 8, "html": 8, "navig": 8, "build": 8, "open": 8, "web": 8, "browser": 8, "subpackag": 9, "submodul": 9, "dashboard": [9, 11, 12], "plotli": [10, 31], "add_lin": [10, 11, 31], "show": [10, 11, 31], "quantiti": [10, 34, 35], "x": [10, 26, 27, 31, 33], "y": [10, 26, 27, 31, 33], "basecycl": [11, 13, 15, 16], "baseexperi": [11, 18, 20, 21, 22, 32], "pocv": [11, 18, 37], "differenti": [11, 24, 33], "gradient": [11, 24, 26, 27, 33], "ocv_fit": [11, 24], "processed_data": [11, 12], "get_data_path": [11, 12], "get_filenam": [11, 12], "launch_dashboard": [11, 12], "set_color_schem": [11, 12], "verify_parquet": [11, 12], "constant_curr": [11, 23], "constant_voltag": [11, 23], "filter_numer": [11, 23], "layout": [11, 31], "title_font_s": [11, 31], "axis_font_s": [11, 31], "_fig": [11, 31], "x_min": [11, 31], "x_max": [11, 31], "y_min": [11, 31], "y_max": [11, 31], "secondary_i": [11, 31], "y2_min": [11, 31], "y2_max": [11, 31], "add_colorbar": [11, 31], "add_colorscaled_lin": [11, 31], "add_secondary_y_legend": [11, 31], "add_secondary_y_lin": [11, 31], "check_limit": [11, 31], "default_layout": [11, 31], "fig": [11, 31], "make_colorscal": [11, 31], "x_rang": [11, 31], "y2_rang": [11, 31], "y_rang": [11, 31], "experiment_nam": [11, 32], "flatten": [11, 32], "process_readm": [11, 32], "verify_yaml": [11, 32], "set_soc": [11, 33], "set_reference_capac": [11, 33], "zero_column": [11, 33], "check_unit": [11, 34], "define_column": [11, 34], "print_definit": [11, 34], "check_quant": [11, 35], "from_default": [11, 35], "get_quantity_and_unit": [11, 35], "prefix_dict": [11, 35], "search_column": [11, 35], "time_unit_dict": [11, 35], "to_default": [11, 35], "unit_dict": [11, 35], "str": [12, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 31, 32, 33, 34, 35], "int": [12, 14, 19, 20, 21, 22, 23, 27, 31, 32, 33, 34], "float": [12, 19, 20, 21, 22, 23, 27, 29, 30, 31, 32, 33, 34], "rig": 12, "thermocoupl": 12, "raw": 12, "conduct": 12, "place": 12, "callabl": 12, "none": [12, 22, 23, 31, 32, 33, 34, 35], "custom_readme_nam": [12, 32], "paramet": [12, 14, 15, 16, 20, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35], "give": 12, "option": [12, 27, 31, 33, 34], "filename_funct": 12, "custom": 12, "static": [12, 14, 15, 16, 27, 30, 31, 32, 35], "entri": 12, "launch": 12, "preprocess": [12, 36], "classmethod": [12, 23, 27, 29, 30, 32], "worksheet_nam": 12, "worksheet": 12, "filename_arg": 12, "n_color": 12, "scheme": 12, "distinctipi": 12, "kwarg": [12, 26, 33], "colour": 12, "color": [12, 31], "keyword": [12, 26, 33], "hex": 12, "verifi": [12, 32], "correct": 12, "capacity_from_ch_dch": [13, 14], "charge_capac": [13, 14], "dataframe_list": [13, 14], "discharge_capac": [13, 14], "imported_datafram": [13, 14, 15], "read_fil": [13, 14, 15, 16], "sort_fil": [13, 14], "sort_kei": [13, 14], "load": [14, 15, 16], "input_data_path": [14, 15, 16], "common_suffix": 14, "column_name_pattern": 14, "column_dict": 14, "properti": [14, 15, 16, 22, 31, 32, 33, 34], "pl": [14, 16, 22, 23, 31, 33, 34, 35], "repetit": 14, "filepath": [14, 15, 16], "file_list": 14, "sort": 14, "integ": [14, 27], "streamlit": 17, "summari": [18, 20, 37], "i1": [18, 22], "r0": [18, 22], "rt": [18, 22], "v1": [18, 22], "pulse_rest": [18, 22], "pulse_start": [18, 22], "pulse_summari": [18, 22], "lazyfram": [19, 20, 21, 22, 23, 33, 34], "cyce": 20, "dchg_before_chg": 20, "bool": [20, 31, 35], "true": [20, 31], "state": 20, "health": 20, "whether": [20, 31, 35], "come": 20, "loop": 20, "default": [20, 27, 35], "soh": [20, 29], "ndarrai": [22, 25, 27, 29, 30, 31], "dtype": [22, 25, 27, 29, 30, 31], "find": 22, "immedi": 22, "ohmic": 22, "resist": [22, 37], "t": 22, "given": 22, "pulse_numb": 22, "rest_numb": [22, 23], "row": 22, "charge_numb": 23, "rang": [23, 31], "length": [23, 32], "chargeordischarge_numb": 23, "constant_current_numb": 23, "constant": [23, 27, 37], "constant_voltage_numb": 23, "cycle_numb": 23, "discharge_numb": 23, "tupl": [23, 27, 29, 30, 32, 35], "condit": 23, "union": 23, "step_numb": 23, "expr": [23, 35], "lean": [24, 26], "differentiatelean": [24, 26, 27], "dma": [24, 28], "simple_ocv_fit": [24, 28], "variable_list": [24, 25], "output_list": [24, 25], "output_dict": [24, 25], "varieti": [26, 33], "x_data": [26, 27, 31], "y_data": [26, 27, 31], "k": [26, 27, 35], "output_data": [26, 27], "get_dx": [26, 27], "get_dy_and_count": [26, 27], "get_x_sect": [26, 27], "smooth_gradi": [26, 27], "y_sampling_interv": [26, 27], "dydx": 27, "smoothing_filt": 27, "0668": 27, "2417": 27, "383": 27, "longest": 27, "noisi": 27, "level": 27, "evalu": 27, "paper": 27, "feng": 27, "et": 27, "al": 27, "datapoint": 27, "evenli": 27, "space": 27, "frac": 27, "dy": 27, "dx": 27, "multipl": [27, 36, 37, 38], "interv": 27, "size": [27, 31], "delta": [27, 33], "dxdy": 27, "coeffici": 27, "smooth": 27, "matrix": 27, "25": 27, "5": [27, 37], "point": [27, 31], "3830": 27, "1059": 27, "121": 27, "1745": 27, "1972": 27, "7": 27, "rate": 27, "consid": [27, 37], "just": [27, 37], "unifomli": 27, "altern": 27, "uniformli": 27, "rais": [27, 35], "valueerror": [27, 35], "midpoint": 27, "slice": 27, "split": 27, "repres": 27, "alpha": 27, "vector": 27, "xune": 27, "yu": 27, "merla": 27, "caihao": 27, "weng": 27, "minggao": 27, "ouyang": 27, "xiangm": 27, "he": 27, "bor": 27, "yann": 27, "liaw": 27, "shriram": 27, "santhanagopalan": 27, "xuemin": 27, "li": 27, "ping": 27, "liu": 27, "languang": 27, "lu": 27, "xueb": 27, "han": 27, "dongsheng": 27, "ren": 27, "wang": 27, "ruih": 27, "changyong": 27, "jin": 27, "peng": 27, "huang": 27, "mengchao": 27, "yi": 27, "yan": 27, "zhao": 27, "yatish": 27, "patel": 27, "gregori": 27, "offer": 27, "reliabl": 27, "discret": [27, 31], "diagnosi": 27, "etransport": 27, "100051": 27, "2020": 27, "url": 27, "www": 27, "sciencedirect": 27, "scienc": 27, "articl": 27, "pii": 27, "s2590116820300084": 27, "doi": 27, "org": 27, "10": [27, 37], "1016": 27, "j": 27, "etran": 27, "ocv": [28, 29, 30], "fit": [28, 29, 30], "calculate_dma_paramet": [28, 29], "calc_electrode_capac": [28, 30], "calc_full_cell_ocv": [28, 30], "fit_ocv": [28, 30], "curv": [29, 30], "cell_capac": [29, 30], "pe_capac": 29, "ne_capac": 29, "li_inventori": 29, "pe_stoich_limit": 29, "cathod": [29, 30], "stoichiometri": [29, 30], "limit": [29, 31], "ne_stoich_limit": 29, "anod": [29, 30], "lithium": [29, 30], "inventori": [29, 30], "lam_p": 29, "lam_n": 29, "lli": 29, "x_ne": 30, "x_pe": 30, "ocp_n": 30, "ocp_p": 30, "x_guess": 30, "x_pe_lo": 30, "x_pe_hi": 30, "x_ne_lo": 30, "x_ne_hi": 30, "electrod": 30, "lowest": 30, "soc": [30, 33, 37], "highest": 30, "ocp": 30, "initi": [30, 37], "guess": 30, "stoihiometri": 30, "height": 31, "600": 31, "legend": 31, "font": 31, "14": 31, "templat": 31, "titl": [31, 32], "18": 31, "width": 31, "800": 31, "xaxi": 31, "tickfont": 31, "yaxi": 31, "go": 31, "axi": 31, "label": 31, "figur": 31, "minimum": 31, "maximum": [31, 33], "secondari": 31, "color_bound": 31, "color_bi": 31, "colormap": 31, "viridi": 31, "colorbar": 31, "bound": 31, "scale": 31, "showlegend": 31, "secondary_y_axi": 31, "fals": [31, 35], "newli": 31, "ad": [31, 34, 36], "colorscal": 31, "across": [31, 33], "buffer": 31, "data_path": 32, "lst": 32, "readme_path": 32, "readme_nam": 32, "extens": 32, "dure": 33, "reference_capac": 33, "reference_charg": 33, "remain": 33, "upon": 33, "fix": 33, "perman": 33, "referenc": [33, 35], "new_column_nam": 33, "new_column_definit": 33, "definit": [33, 34], "column_definit": 34, "column_nam": 34, "check": [34, 35], "exist": 34, "doe": 34, "name_pattern": 35, "w": 35, "default_quant": 35, "being": 35, "recognis": 35, "express": 35, "1000000": 35, "1000": 35, "001": 35, "1e": 35, "09": 35, "p": 35, "\u00b5": 35, "06": 35, "search_quant": 35, "search": 35, "hr": 35, "3600": 35, "min": 35, "60": 35, "keep_nam": 35, "origin": 35, "h": 35, "structur": 36, "batch": 36, "shortcut": 36, "syntax": 37, "creation": 37, "pybamm": 37, "seper": 37, "8": 37, "descript": 37, "4ma": 37, "2v": 37, "until": 37, "drop": 37, "04a": 37, "reach": 37, "3v": 37, "20ma": 37, "4mah": 37, "30": 37, "minut": 37, "futur": 37, "plan": 37, "now": 37, "manual": 37, "most": 37, "too": 37, "consum": 37, "purpos": 37, "particularli": 37, "cumbersom": 37, "out": 37, "instead": 37, "total": 37, "help": 38, "track": 38, "relat": 38, "complet": 38, "customiz": 38, "distinguish": 38, "well": 38}, "objects": {"": [[11, 0, 0, "-", "pyprobe"]], "pyprobe": [[12, 0, 0, "-", "cell"], [13, 0, 0, "-", "cyclers"], [17, 0, 0, "-", "dashboard"], [18, 0, 0, "-", "experiments"], [23, 0, 0, "-", "filter"], [24, 0, 0, "-", "methods"], [31, 0, 0, "-", "plot"], [32, 0, 0, "-", "procedure"], [33, 0, 0, "-", "rawdata"], [34, 0, 0, "-", "result"], [35, 0, 0, "-", "unitconverter"]], "pyprobe.cell": [[12, 1, 1, "", "Cell"]], "pyprobe.cell.Cell": [[12, 2, 1, "", "add_procedure"], [12, 2, 1, "", "get_data_paths"], [12, 2, 1, "", "get_filename"], [12, 3, 1, "", "info"], [12, 2, 1, "", "launch_dashboard"], [12, 2, 1, "", "make_cell_list"], [12, 3, 1, "", "procedure"], [12, 2, 1, "", "process_cycler_file"], [12, 3, 1, "", "processed_data"], [12, 2, 1, "", "set_color_scheme"], [12, 2, 1, "", "verify_parquet"]], "pyprobe.cyclers": [[14, 0, 0, "-", "basecycler"], [15, 0, 0, "-", "biologic"], [16, 0, 0, "-", "neware"]], "pyprobe.cyclers.basecycler": [[14, 1, 1, "", "BaseCycler"]], "pyprobe.cyclers.basecycler.BaseCycler": [[14, 4, 1, "", "capacity"], [14, 4, 1, "", "capacity_from_ch_dch"], [14, 4, 1, "", "charge_capacity"], [14, 4, 1, "", "current"], [14, 4, 1, "", "cycle"], [14, 4, 1, "", "dataframe_list"], [14, 4, 1, "", "date"], [14, 4, 1, "", "discharge_capacity"], [14, 4, 1, "", "event"], [14, 4, 1, "", "imported_dataframe"], [14, 2, 1, "", "read_file"], [14, 2, 1, "", "sort_files"], [14, 2, 1, "", "sort_key"], [14, 4, 1, "", "step"], [14, 4, 1, "", "time"], [14, 4, 1, "", "voltage"]], "pyprobe.cyclers.biologic": [[15, 1, 1, "", "Biologic"]], "pyprobe.cyclers.biologic.Biologic": [[15, 4, 1, "", "imported_dataframe"], [15, 2, 1, "", "read_file"], [15, 4, 1, "", "step"]], "pyprobe.cyclers.neware": [[16, 1, 1, "", "Neware"]], "pyprobe.cyclers.neware.Neware": [[16, 2, 1, "", "read_file"], [16, 4, 1, "", "time"]], "pyprobe.experiments": [[19, 0, 0, "-", "baseexperiment"], [20, 0, 0, "-", "cycling"], [21, 0, 0, "-", "pOCV"], [22, 0, 0, "-", "pulsing"]], "pyprobe.experiments.baseexperiment": [[19, 1, 1, "", "BaseExperiment"]], "pyprobe.experiments.cycling": [[20, 1, 1, "", "Cycling"]], "pyprobe.experiments.cycling.Cycling": [[20, 2, 1, "", "summary"]], "pyprobe.experiments.pOCV": [[21, 1, 1, "", "pOCV"]], "pyprobe.experiments.pulsing": [[22, 1, 1, "", "Pulsing"]], "pyprobe.experiments.pulsing.Pulsing": [[22, 4, 1, "", "I1"], [22, 4, 1, "", "R0"], [22, 2, 1, "", "Rt"], [22, 4, 1, "", "V0"], [22, 4, 1, "", "V1"], [22, 2, 1, "", "pulse"], [22, 2, 1, "", "pulse_rest"], [22, 4, 1, "", "pulse_starts"], [22, 4, 1, "", "pulse_summary"]], "pyprobe.filter": [[23, 1, 1, "", "Cycle"], [23, 1, 1, "", "Filter"]], "pyprobe.filter.Filter": [[23, 2, 1, "", "charge"], [23, 2, 1, "", "chargeordischarge"], [23, 2, 1, "", "constant_current"], [23, 2, 1, "", "constant_voltage"], [23, 2, 1, "", "cycle"], [23, 2, 1, "", "discharge"], [23, 2, 1, "", "filter_numerical"], [23, 2, 1, "", "rest"], [23, 2, 1, "", "step"]], "pyprobe.methods": [[25, 0, 0, "-", "basemethod"], [26, 0, 0, "-", "differentiation"], [28, 0, 0, "-", "ocv_fitting"]], "pyprobe.methods.basemethod": [[25, 1, 1, "", "BaseMethod"]], "pyprobe.methods.basemethod.BaseMethod": [[25, 3, 1, "", "input_data"], [25, 2, 1, "", "make_result"], [25, 3, 1, "", "output_dict"], [25, 3, 1, "", "output_list"], [25, 2, 1, "", "variable"], [25, 3, 1, "", "variable_list"]], "pyprobe.methods.differentiation": [[27, 0, 0, "-", "LEAN"], [26, 5, 1, "", "gradient"]], "pyprobe.methods.differentiation.LEAN": [[27, 1, 1, "", "DifferentiateLEAN"]], "pyprobe.methods.differentiation.LEAN.DifferentiateLEAN": [[27, 2, 1, "", "get_dx"], [27, 2, 1, "", "get_dy_and_counts"], [27, 2, 1, "", "get_x_sections"], [27, 2, 1, "", "gradient"], [27, 3, 1, "", "k"], [27, 3, 1, "", "output_data"], [27, 2, 1, "", "smooth_gradient"], [27, 3, 1, "", "x_data"], [27, 3, 1, "", "y_data"], [27, 2, 1, "", "y_sampling_interval"]], "pyprobe.methods.ocv_fitting": [[29, 0, 0, "-", "DMA"], [30, 0, 0, "-", "Simple_OCV_fit"]], "pyprobe.methods.ocv_fitting.DMA": [[29, 1, 1, "", "DMA"]], "pyprobe.methods.ocv_fitting.DMA.DMA": [[29, 2, 1, "", "calculate_dma_parameters"]], "pyprobe.methods.ocv_fitting.Simple_OCV_fit": [[30, 1, 1, "", "Simple_OCV_fit"]], "pyprobe.methods.ocv_fitting.Simple_OCV_fit.Simple_OCV_fit": [[30, 2, 1, "", "calc_electrode_capacities"], [30, 2, 1, "", "calc_full_cell_OCV"], [30, 2, 1, "", "fit_ocv"]], "pyprobe.plot": [[31, 1, 1, "", "Plot"]], "pyprobe.plot.Plot": [[31, 3, 1, "", "_fig"], [31, 2, 1, "", "add_colorbar"], [31, 2, 1, "", "add_colorscaled_line"], [31, 2, 1, "", "add_line"], [31, 2, 1, "", "add_secondary_y_legend"], [31, 2, 1, "", "add_secondary_y_line"], [31, 3, 1, "id0", "axis_font_size"], [31, 2, 1, "", "check_limits"], [31, 3, 1, "", "default_layout"], [31, 4, 1, "", "fig"], [31, 3, 1, "", "layout"], [31, 2, 1, "", "make_colorscale"], [31, 3, 1, "", "secondary_y"], [31, 2, 1, "", "show"], [31, 3, 1, "id1", "title_font_size"], [31, 3, 1, "", "x_max"], [31, 3, 1, "", "x_min"], [31, 4, 1, "", "x_range"], [31, 3, 1, "", "y2_max"], [31, 3, 1, "", "y2_min"], [31, 4, 1, "", "y2_range"], [31, 3, 1, "", "y_max"], [31, 3, 1, "", "y_min"], [31, 4, 1, "", "y_range"]], "pyprobe.procedure": [[32, 1, 1, "", "Procedure"]], "pyprobe.procedure.Procedure": [[32, 2, 1, "", "experiment"], [32, 4, 1, "", "experiment_names"], [32, 2, 1, "", "flatten"], [32, 2, 1, "", "process_readme"], [32, 2, 1, "", "verify_yaml"]], "pyprobe.rawdata": [[33, 1, 1, "", "RawData"]], "pyprobe.rawdata.RawData": [[33, 3, 1, "", "_data"], [33, 4, 1, "", "capacity"], [33, 4, 1, "", "data"], [33, 2, 1, "", "gradient"], [33, 3, 1, "", "info"], [33, 2, 1, "", "set_SOC"], [33, 2, 1, "", "set_reference_capacity"], [33, 2, 1, "", "zero_column"]], "pyprobe.result": [[34, 1, 1, "", "Result"]], "pyprobe.result.Result": [[34, 3, 1, "", "_data"], [34, 2, 1, "", "check_units"], [34, 4, 1, "id0", "data"], [34, 2, 1, "", "define_column"], [34, 3, 1, "", "info"], [34, 2, 1, "", "print"], [34, 2, 1, "", "print_definitions"]], "pyprobe.unitconverter": [[35, 1, 1, "", "UnitConverter"]], "pyprobe.unitconverter.UnitConverter": [[35, 2, 1, "", "check_quantity"], [35, 2, 1, "", "from_default"], [35, 2, 1, "", "get_quantity_and_unit"], [35, 3, 1, "", "prefix_dict"], [35, 2, 1, "", "search_columns"], [35, 3, 1, "", "time_unit_dict"], [35, 2, 1, "", "to_default"], [35, 3, 1, "", "unit_dict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"access": 0, "data": [0, 4, 6], "filter": [0, 23], "rawdata": [0, 33], "object": [0, 4], "creat": 1, "new": 1, "method": [1, 24, 25, 26, 27, 28, 29, 30], "develop": 2, "guid": [2, 36], "instal": [3, 7], "import": 4, "make": 4, "cell": [4, 12], "convert": 4, "pyprob": [4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "format": [4, 6], "work": 4, "multipl": 4, "input": [4, 6], "file": [4, 37], "ad": 4, "batch": 4, "preprocess": 4, "document": [5, 8], "guidanc": 6, "support": 6, "cycler": [6, 13, 14, 15, 16], "column": 6, "introduct": 8, "structur": 8, "thi": 8, "plot": [10, 31], "packag": [11, 13, 18, 24, 26, 28], "subpackag": [11, 24], "submodul": [11, 13, 18, 24, 26, 28], "modul": [12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35], "basecycl": 14, "biolog": 15, "newar": 16, "dashboard": 17, "experi": [18, 19, 20, 21, 22, 38], "baseexperi": 19, "cycl": 20, "pocv": 21, "puls": 22, "basemethod": 25, "differenti": [26, 27], "lean": 27, "ocv_fit": [28, 29, 30], "dma": 29, "simple_ocv_fit": 30, "procedur": 32, "result": 34, "unitconvert": 35, "user": 36, "write": [37, 38], "readm": 37, "shortcut": 37, "an": 38, "record": 38}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Accessing Data": [[0, "accessing-data"]], "Filtering": [[0, "filtering"]], "RawData objects": [[0, "rawdata-objects"]], "Creating a New Method": [[1, "creating-a-new-method"]], "Developer Guide": [[2, "developer-guide"]], "Installation": [[3, "installation"], [7, "installation"]], "Importing Data": [[4, "importing-data"]], "Making a cell object": [[4, "making-a-cell-object"]], "Converting data to PyProBE Format": [[4, "converting-data-to-pyprobe-format"]], "Working with multiple input files": [[4, "working-with-multiple-input-files"]], "Adding data to a cell object": [[4, "adding-data-to-a-cell-object"]], "Batch preprocessing": [[4, "batch-preprocessing"]], "PyProBE documentation": [[5, "pyprobe-documentation"]], "Input Data Guidance": [[6, "input-data-guidance"]], "Supported cyclers and formats": [[6, "supported-cyclers-and-formats"]], "PyProBE data columns": [[6, "pyprobe-data-columns"]], "Introduction": [[8, "introduction"]], "PyProBE Structure": [[8, "pyprobe-structure"]], "This documentation": [[8, "this-documentation"]], "pyprobe": [[9, "pyprobe"]], "Plotting": [[10, "plotting"]], "pyprobe package": [[11, "module-pyprobe"]], "Subpackages": [[11, "subpackages"], [24, "subpackages"]], "Submodules": [[11, "submodules"], [13, "submodules"], [18, "submodules"], [24, "submodules"], [26, "submodules"], [28, "submodules"]], "pyprobe.cell module": [[12, "module-pyprobe.cell"]], "pyprobe.cyclers package": [[13, "module-pyprobe.cyclers"]], "pyprobe.cyclers.basecycler module": [[14, "module-pyprobe.cyclers.basecycler"]], "pyprobe.cyclers.biologic module": [[15, "module-pyprobe.cyclers.biologic"]], "pyprobe.cyclers.neware module": [[16, "module-pyprobe.cyclers.neware"]], "pyprobe.dashboard module": [[17, "module-pyprobe.dashboard"]], "pyprobe.experiments package": [[18, "module-pyprobe.experiments"]], "pyprobe.experiments.baseexperiment module": [[19, "module-pyprobe.experiments.baseexperiment"]], "pyprobe.experiments.cycling module": [[20, "module-pyprobe.experiments.cycling"]], "pyprobe.experiments.pOCV module": [[21, "module-pyprobe.experiments.pOCV"]], "pyprobe.experiments.pulsing module": [[22, "module-pyprobe.experiments.pulsing"]], "pyprobe.filter module": [[23, "module-pyprobe.filter"]], "pyprobe.methods package": [[24, "module-pyprobe.methods"]], "pyprobe.methods.basemethod module": [[25, "module-pyprobe.methods.basemethod"]], "pyprobe.methods.differentiation package": [[26, "module-pyprobe.methods.differentiation"]], "pyprobe.methods.differentiation.LEAN module": [[27, "module-pyprobe.methods.differentiation.LEAN"]], "pyprobe.methods.ocv_fitting package": [[28, "module-pyprobe.methods.ocv_fitting"]], "pyprobe.methods.ocv_fitting.DMA module": [[29, "module-pyprobe.methods.ocv_fitting.DMA"]], "pyprobe.methods.ocv_fitting.Simple_OCV_fit module": [[30, "module-pyprobe.methods.ocv_fitting.Simple_OCV_fit"]], "pyprobe.plot module": [[31, "module-pyprobe.plot"]], "pyprobe.procedure module": [[32, "module-pyprobe.procedure"]], "pyprobe.rawdata module": [[33, "module-pyprobe.rawdata"]], "pyprobe.result module": [[34, "module-pyprobe.result"]], "pyprobe.unitconverter module": [[35, "module-pyprobe.unitconverter"]], "User Guide": [[36, "user-guide"]], "Writing a README file": [[37, "writing-a-readme-file"]], "Shortcuts": [[37, "shortcuts"]], "Writing an Experiment record": [[38, "writing-an-experiment-record"]]}, "indexentries": {"module": [[11, "module-pyprobe"], [12, "module-pyprobe.cell"], [13, "module-pyprobe.cyclers"], [14, "module-pyprobe.cyclers.basecycler"], [15, "module-pyprobe.cyclers.biologic"], [16, "module-pyprobe.cyclers.neware"], [17, "module-pyprobe.dashboard"], [18, "module-pyprobe.experiments"], [19, "module-pyprobe.experiments.baseexperiment"], [20, "module-pyprobe.experiments.cycling"], [21, "module-pyprobe.experiments.pOCV"], [22, "module-pyprobe.experiments.pulsing"], [23, "module-pyprobe.filter"], [24, "module-pyprobe.methods"], [25, "module-pyprobe.methods.basemethod"], [26, "module-pyprobe.methods.differentiation"], [27, "module-pyprobe.methods.differentiation.LEAN"], [28, "module-pyprobe.methods.ocv_fitting"], [29, "module-pyprobe.methods.ocv_fitting.DMA"], [30, "module-pyprobe.methods.ocv_fitting.Simple_OCV_fit"], [31, "module-pyprobe.plot"], [32, "module-pyprobe.procedure"], [33, "module-pyprobe.rawdata"], [34, "module-pyprobe.result"], [35, "module-pyprobe.unitconverter"]], "pyprobe": [[11, "module-pyprobe"]], "cell (class in pyprobe.cell)": [[12, "pyprobe.cell.Cell"]], "add_procedure() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.add_procedure"]], "get_data_paths() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.get_data_paths"]], "get_filename() (pyprobe.cell.cell static method)": [[12, "pyprobe.cell.Cell.get_filename"]], "info (pyprobe.cell.cell attribute)": [[12, "pyprobe.cell.Cell.info"]], "launch_dashboard() (pyprobe.cell.cell static method)": [[12, "pyprobe.cell.Cell.launch_dashboard"]], "make_cell_list() (pyprobe.cell.cell class method)": [[12, "pyprobe.cell.Cell.make_cell_list"]], "procedure (pyprobe.cell.cell attribute)": [[12, "pyprobe.cell.Cell.procedure"]], "process_cycler_file() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.process_cycler_file"]], "processed_data (pyprobe.cell.cell attribute)": [[12, "pyprobe.cell.Cell.processed_data"]], "pyprobe.cell": [[12, "module-pyprobe.cell"]], "set_color_scheme() (pyprobe.cell.cell static method)": [[12, "pyprobe.cell.Cell.set_color_scheme"]], "verify_parquet() (pyprobe.cell.cell static method)": [[12, "pyprobe.cell.Cell.verify_parquet"]], "pyprobe.cyclers": [[13, "module-pyprobe.cyclers"]], "basecycler (class in pyprobe.cyclers.basecycler)": [[14, "pyprobe.cyclers.basecycler.BaseCycler"]], "capacity (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.capacity"]], "capacity_from_ch_dch (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.capacity_from_ch_dch"]], "charge_capacity (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.charge_capacity"]], "current (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.current"]], "cycle (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.cycle"]], "dataframe_list (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.dataframe_list"]], "date (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.date"]], "discharge_capacity (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.discharge_capacity"]], "event (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.event"]], "imported_dataframe (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.imported_dataframe"]], "pyprobe.cyclers.basecycler": [[14, "module-pyprobe.cyclers.basecycler"]], "read_file() (pyprobe.cyclers.basecycler.basecycler static method)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.read_file"]], "sort_files() (pyprobe.cyclers.basecycler.basecycler method)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.sort_files"]], "sort_key() (pyprobe.cyclers.basecycler.basecycler method)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.sort_key"]], "step (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.step"]], "time (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.time"]], "voltage (pyprobe.cyclers.basecycler.basecycler property)": [[14, "pyprobe.cyclers.basecycler.BaseCycler.voltage"]], "biologic (class in pyprobe.cyclers.biologic)": [[15, "pyprobe.cyclers.biologic.Biologic"]], "imported_dataframe (pyprobe.cyclers.biologic.biologic property)": [[15, "pyprobe.cyclers.biologic.Biologic.imported_dataframe"]], "pyprobe.cyclers.biologic": [[15, "module-pyprobe.cyclers.biologic"]], "read_file() (pyprobe.cyclers.biologic.biologic static method)": [[15, "pyprobe.cyclers.biologic.Biologic.read_file"]], "step (pyprobe.cyclers.biologic.biologic property)": [[15, "pyprobe.cyclers.biologic.Biologic.step"]], "neware (class in pyprobe.cyclers.neware)": [[16, "pyprobe.cyclers.neware.Neware"]], "pyprobe.cyclers.neware": [[16, "module-pyprobe.cyclers.neware"]], "read_file() (pyprobe.cyclers.neware.neware static method)": [[16, "pyprobe.cyclers.neware.Neware.read_file"]], "time (pyprobe.cyclers.neware.neware property)": [[16, "pyprobe.cyclers.neware.Neware.time"]], "pyprobe.dashboard": [[17, "module-pyprobe.dashboard"]], "pyprobe.experiments": [[18, "module-pyprobe.experiments"]], "baseexperiment (class in pyprobe.experiments.baseexperiment)": [[19, "pyprobe.experiments.baseexperiment.BaseExperiment"]], "pyprobe.experiments.baseexperiment": [[19, "module-pyprobe.experiments.baseexperiment"]], "cycling (class in pyprobe.experiments.cycling)": [[20, "pyprobe.experiments.cycling.Cycling"]], "pyprobe.experiments.cycling": [[20, "module-pyprobe.experiments.cycling"]], "summary() (pyprobe.experiments.cycling.cycling method)": [[20, "pyprobe.experiments.cycling.Cycling.summary"]], "pocv (class in pyprobe.experiments.pocv)": [[21, "pyprobe.experiments.pOCV.pOCV"]], "pyprobe.experiments.pocv": [[21, "module-pyprobe.experiments.pOCV"]], "i1 (pyprobe.experiments.pulsing.pulsing property)": [[22, "pyprobe.experiments.pulsing.Pulsing.I1"]], "pulsing (class in pyprobe.experiments.pulsing)": [[22, "pyprobe.experiments.pulsing.Pulsing"]], "r0 (pyprobe.experiments.pulsing.pulsing property)": [[22, "pyprobe.experiments.pulsing.Pulsing.R0"]], "rt() (pyprobe.experiments.pulsing.pulsing method)": [[22, "pyprobe.experiments.pulsing.Pulsing.Rt"]], "v0 (pyprobe.experiments.pulsing.pulsing property)": [[22, "pyprobe.experiments.pulsing.Pulsing.V0"]], "v1 (pyprobe.experiments.pulsing.pulsing property)": [[22, "pyprobe.experiments.pulsing.Pulsing.V1"]], "pulse() (pyprobe.experiments.pulsing.pulsing method)": [[22, "pyprobe.experiments.pulsing.Pulsing.pulse"]], "pulse_rest() (pyprobe.experiments.pulsing.pulsing method)": [[22, "pyprobe.experiments.pulsing.Pulsing.pulse_rest"]], "pulse_starts (pyprobe.experiments.pulsing.pulsing property)": [[22, "pyprobe.experiments.pulsing.Pulsing.pulse_starts"]], "pulse_summary (pyprobe.experiments.pulsing.pulsing property)": [[22, "pyprobe.experiments.pulsing.Pulsing.pulse_summary"]], "pyprobe.experiments.pulsing": [[22, "module-pyprobe.experiments.pulsing"]], "cycle (class in pyprobe.filter)": [[23, "pyprobe.filter.Cycle"]], "filter (class in pyprobe.filter)": [[23, "pyprobe.filter.Filter"]], "charge() (pyprobe.filter.filter method)": [[23, "pyprobe.filter.Filter.charge"]], "chargeordischarge() (pyprobe.filter.filter method)": [[23, "pyprobe.filter.Filter.chargeordischarge"]], "constant_current() (pyprobe.filter.filter method)": [[23, "pyprobe.filter.Filter.constant_current"]], "constant_voltage() (pyprobe.filter.filter method)": [[23, "pyprobe.filter.Filter.constant_voltage"]], "cycle() (pyprobe.filter.filter method)": [[23, "pyprobe.filter.Filter.cycle"]], "discharge() (pyprobe.filter.filter method)": [[23, "pyprobe.filter.Filter.discharge"]], "filter_numerical() (pyprobe.filter.filter class method)": [[23, "pyprobe.filter.Filter.filter_numerical"]], "pyprobe.filter": [[23, "module-pyprobe.filter"]], "rest() (pyprobe.filter.filter method)": [[23, "pyprobe.filter.Filter.rest"]], "step() (pyprobe.filter.filter method)": [[23, "pyprobe.filter.Filter.step"]], "pyprobe.methods": [[24, "module-pyprobe.methods"]], "basemethod (class in pyprobe.methods.basemethod)": [[25, "pyprobe.methods.basemethod.BaseMethod"]], "input_data (pyprobe.methods.basemethod.basemethod attribute)": [[25, "pyprobe.methods.basemethod.BaseMethod.input_data"]], "make_result() (pyprobe.methods.basemethod.basemethod method)": [[25, "pyprobe.methods.basemethod.BaseMethod.make_result"]], "output_dict (pyprobe.methods.basemethod.basemethod attribute)": [[25, "pyprobe.methods.basemethod.BaseMethod.output_dict"]], "output_list (pyprobe.methods.basemethod.basemethod attribute)": [[25, "pyprobe.methods.basemethod.BaseMethod.output_list"]], "pyprobe.methods.basemethod": [[25, "module-pyprobe.methods.basemethod"]], "variable() (pyprobe.methods.basemethod.basemethod method)": [[25, "pyprobe.methods.basemethod.BaseMethod.variable"]], "variable_list (pyprobe.methods.basemethod.basemethod attribute)": [[25, "pyprobe.methods.basemethod.BaseMethod.variable_list"]], "gradient() (in module pyprobe.methods.differentiation)": [[26, "pyprobe.methods.differentiation.gradient"]], "pyprobe.methods.differentiation": [[26, "module-pyprobe.methods.differentiation"]], "differentiatelean (class in pyprobe.methods.differentiation.lean)": [[27, "pyprobe.methods.differentiation.LEAN.DifferentiateLEAN"]], "get_dx() (pyprobe.methods.differentiation.lean.differentiatelean static method)": [[27, "pyprobe.methods.differentiation.LEAN.DifferentiateLEAN.get_dx"]], "get_dy_and_counts() (pyprobe.methods.differentiation.lean.differentiatelean static method)": [[27, "pyprobe.methods.differentiation.LEAN.DifferentiateLEAN.get_dy_and_counts"]], "get_x_sections() (pyprobe.methods.differentiation.lean.differentiatelean static method)": [[27, "pyprobe.methods.differentiation.LEAN.DifferentiateLEAN.get_x_sections"]], "gradient() (pyprobe.methods.differentiation.lean.differentiatelean class method)": [[27, "pyprobe.methods.differentiation.LEAN.DifferentiateLEAN.gradient"]], "k (pyprobe.methods.differentiation.lean.differentiatelean attribute)": [[27, "pyprobe.methods.differentiation.LEAN.DifferentiateLEAN.k"]], "output_data (pyprobe.methods.differentiation.lean.differentiatelean attribute)": [[27, "pyprobe.methods.differentiation.LEAN.DifferentiateLEAN.output_data"]], "pyprobe.methods.differentiation.lean": [[27, "module-pyprobe.methods.differentiation.LEAN"]], "smooth_gradient() (pyprobe.methods.differentiation.lean.differentiatelean static method)": [[27, "pyprobe.methods.differentiation.LEAN.DifferentiateLEAN.smooth_gradient"]], "x_data (pyprobe.methods.differentiation.lean.differentiatelean attribute)": [[27, "pyprobe.methods.differentiation.LEAN.DifferentiateLEAN.x_data"]], "y_data (pyprobe.methods.differentiation.lean.differentiatelean attribute)": [[27, "pyprobe.methods.differentiation.LEAN.DifferentiateLEAN.y_data"]], "y_sampling_interval() (pyprobe.methods.differentiation.lean.differentiatelean static method)": [[27, "pyprobe.methods.differentiation.LEAN.DifferentiateLEAN.y_sampling_interval"]], "pyprobe.methods.ocv_fitting": [[28, "module-pyprobe.methods.ocv_fitting"]], "dma (class in pyprobe.methods.ocv_fitting.dma)": [[29, "pyprobe.methods.ocv_fitting.DMA.DMA"]], "calculate_dma_parameters() (pyprobe.methods.ocv_fitting.dma.dma class method)": [[29, "pyprobe.methods.ocv_fitting.DMA.DMA.calculate_dma_parameters"]], "pyprobe.methods.ocv_fitting.dma": [[29, "module-pyprobe.methods.ocv_fitting.DMA"]], "simple_ocv_fit (class in pyprobe.methods.ocv_fitting.simple_ocv_fit)": [[30, "pyprobe.methods.ocv_fitting.Simple_OCV_fit.Simple_OCV_fit"]], "calc_electrode_capacities() (pyprobe.methods.ocv_fitting.simple_ocv_fit.simple_ocv_fit static method)": [[30, "pyprobe.methods.ocv_fitting.Simple_OCV_fit.Simple_OCV_fit.calc_electrode_capacities"]], "calc_full_cell_ocv() (pyprobe.methods.ocv_fitting.simple_ocv_fit.simple_ocv_fit static method)": [[30, "pyprobe.methods.ocv_fitting.Simple_OCV_fit.Simple_OCV_fit.calc_full_cell_OCV"]], "fit_ocv() (pyprobe.methods.ocv_fitting.simple_ocv_fit.simple_ocv_fit class method)": [[30, "pyprobe.methods.ocv_fitting.Simple_OCV_fit.Simple_OCV_fit.fit_ocv"]], "pyprobe.methods.ocv_fitting.simple_ocv_fit": [[30, "module-pyprobe.methods.ocv_fitting.Simple_OCV_fit"]], "plot (class in pyprobe.plot)": [[31, "pyprobe.plot.Plot"]], "_fig (pyprobe.plot.plot attribute)": [[31, "pyprobe.plot.Plot._fig"]], "add_colorbar() (pyprobe.plot.plot method)": [[31, "pyprobe.plot.Plot.add_colorbar"]], "add_colorscaled_line() (pyprobe.plot.plot method)": [[31, "pyprobe.plot.Plot.add_colorscaled_line"]], "add_line() (pyprobe.plot.plot method)": [[31, "pyprobe.plot.Plot.add_line"]], "add_secondary_y_legend() (pyprobe.plot.plot method)": [[31, "pyprobe.plot.Plot.add_secondary_y_legend"]], "add_secondary_y_line() (pyprobe.plot.plot method)": [[31, "pyprobe.plot.Plot.add_secondary_y_line"]], "axis_font_size (pyprobe.plot.plot attribute)": [[31, "id0"], [31, "pyprobe.plot.Plot.axis_font_size"]], "check_limits() (pyprobe.plot.plot method)": [[31, "pyprobe.plot.Plot.check_limits"]], "default_layout (pyprobe.plot.plot attribute)": [[31, "pyprobe.plot.Plot.default_layout"]], "fig (pyprobe.plot.plot property)": [[31, "pyprobe.plot.Plot.fig"]], "layout (pyprobe.plot.plot attribute)": [[31, "pyprobe.plot.Plot.layout"]], "make_colorscale() (pyprobe.plot.plot static method)": [[31, "pyprobe.plot.Plot.make_colorscale"]], "pyprobe.plot": [[31, "module-pyprobe.plot"]], "secondary_y (pyprobe.plot.plot attribute)": [[31, "pyprobe.plot.Plot.secondary_y"]], "show() (pyprobe.plot.plot method)": [[31, "pyprobe.plot.Plot.show"]], "title_font_size (pyprobe.plot.plot attribute)": [[31, "id1"], [31, "pyprobe.plot.Plot.title_font_size"]], "x_max (pyprobe.plot.plot attribute)": [[31, "pyprobe.plot.Plot.x_max"]], "x_min (pyprobe.plot.plot attribute)": [[31, "pyprobe.plot.Plot.x_min"]], "x_range (pyprobe.plot.plot property)": [[31, "pyprobe.plot.Plot.x_range"]], "y2_max (pyprobe.plot.plot attribute)": [[31, "pyprobe.plot.Plot.y2_max"]], "y2_min (pyprobe.plot.plot attribute)": [[31, "pyprobe.plot.Plot.y2_min"]], "y2_range (pyprobe.plot.plot property)": [[31, "pyprobe.plot.Plot.y2_range"]], "y_max (pyprobe.plot.plot attribute)": [[31, "pyprobe.plot.Plot.y_max"]], "y_min (pyprobe.plot.plot attribute)": [[31, "pyprobe.plot.Plot.y_min"]], "y_range (pyprobe.plot.plot property)": [[31, "pyprobe.plot.Plot.y_range"]], "procedure (class in pyprobe.procedure)": [[32, "pyprobe.procedure.Procedure"]], "experiment() (pyprobe.procedure.procedure method)": [[32, "pyprobe.procedure.Procedure.experiment"]], "experiment_names (pyprobe.procedure.procedure property)": [[32, "pyprobe.procedure.Procedure.experiment_names"]], "flatten() (pyprobe.procedure.procedure class method)": [[32, "pyprobe.procedure.Procedure.flatten"]], "process_readme() (pyprobe.procedure.procedure static method)": [[32, "pyprobe.procedure.Procedure.process_readme"]], "pyprobe.procedure": [[32, "module-pyprobe.procedure"]], "verify_yaml() (pyprobe.procedure.procedure method)": [[32, "pyprobe.procedure.Procedure.verify_yaml"]], "rawdata (class in pyprobe.rawdata)": [[33, "pyprobe.rawdata.RawData"]], "_data (pyprobe.rawdata.rawdata attribute)": [[33, "pyprobe.rawdata.RawData._data"]], "capacity (pyprobe.rawdata.rawdata property)": [[33, "pyprobe.rawdata.RawData.capacity"]], "data (pyprobe.rawdata.rawdata property)": [[33, "pyprobe.rawdata.RawData.data"]], "gradient() (pyprobe.rawdata.rawdata method)": [[33, "pyprobe.rawdata.RawData.gradient"]], "info (pyprobe.rawdata.rawdata attribute)": [[33, "pyprobe.rawdata.RawData.info"]], "pyprobe.rawdata": [[33, "module-pyprobe.rawdata"]], "set_soc() (pyprobe.rawdata.rawdata method)": [[33, "pyprobe.rawdata.RawData.set_SOC"]], "set_reference_capacity() (pyprobe.rawdata.rawdata method)": [[33, "pyprobe.rawdata.RawData.set_reference_capacity"]], "zero_column() (pyprobe.rawdata.rawdata method)": [[33, "pyprobe.rawdata.RawData.zero_column"]], "result (class in pyprobe.result)": [[34, "pyprobe.result.Result"]], "_data (pyprobe.result.result attribute)": [[34, "pyprobe.result.Result._data"]], "check_units() (pyprobe.result.result method)": [[34, "pyprobe.result.Result.check_units"]], "data (pyprobe.result.result attribute)": [[34, "pyprobe.result.Result.data"]], "data (pyprobe.result.result property)": [[34, "id0"]], "define_column() (pyprobe.result.result method)": [[34, "pyprobe.result.Result.define_column"]], "info (pyprobe.result.result attribute)": [[34, "pyprobe.result.Result.info"]], "print() (pyprobe.result.result method)": [[34, "pyprobe.result.Result.print"]], "print_definitions() (pyprobe.result.result method)": [[34, "pyprobe.result.Result.print_definitions"]], "pyprobe.result": [[34, "module-pyprobe.result"]], "unitconverter (class in pyprobe.unitconverter)": [[35, "pyprobe.unitconverter.UnitConverter"]], "check_quantity() (pyprobe.unitconverter.unitconverter method)": [[35, "pyprobe.unitconverter.UnitConverter.check_quantity"]], "from_default() (pyprobe.unitconverter.unitconverter method)": [[35, "pyprobe.unitconverter.UnitConverter.from_default"]], "get_quantity_and_unit() (pyprobe.unitconverter.unitconverter static method)": [[35, "pyprobe.unitconverter.UnitConverter.get_quantity_and_unit"]], "prefix_dict (pyprobe.unitconverter.unitconverter attribute)": [[35, "pyprobe.unitconverter.UnitConverter.prefix_dict"]], "pyprobe.unitconverter": [[35, "module-pyprobe.unitconverter"]], "search_columns() (pyprobe.unitconverter.unitconverter static method)": [[35, "pyprobe.unitconverter.UnitConverter.search_columns"]], "time_unit_dict (pyprobe.unitconverter.unitconverter attribute)": [[35, "pyprobe.unitconverter.UnitConverter.time_unit_dict"]], "to_default() (pyprobe.unitconverter.unitconverter method)": [[35, "pyprobe.unitconverter.UnitConverter.to_default"]], "unit_dict (pyprobe.unitconverter.unitconverter attribute)": [[35, "pyprobe.unitconverter.UnitConverter.unit_dict"]]}})