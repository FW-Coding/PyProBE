Search.setIndex({"alltitles": {"Accessing Data": [[47, null]], "Adding a Cycler": [[31, null]], "Adding data not from a cycler": [[49, "adding-data-not-from-a-cycler"]], "Adding data to a cell object": [[49, "adding-data-to-a-cell-object"]], "Analysing GITT data": [[37, null]], "Analysis": [[48, null]], "Analysis Module Validation": [[44, "Analysis-Module-Validation"]], "Base": [[32, "base"]], "Batch preprocessing": [[49, "batch-preprocessing"]], "Comparing PyProBE Performance": [[38, null]], "Contributing to the Analysis Module": [[32, null]], "Convert data to standard format": [[42, "Convert-data-to-standard-format"]], "Converting data to PyProBE Format": [[49, "converting-data-to-pyprobe-format"]], "Dependency Guide": [[33, null]], "Developer Guide": [[34, null]], "Differentiating voltage data": [[39, null]], "Differentiating with the LEAN algorithm": [[36, null]], "Examples": [[40, null]], "Filtering": [[47, "filtering"]], "Filtering data": [[41, null]], "Functions": [[32, "functions"]], "Getting started with PyProBE": [[42, null]], "Importing Data": [[49, null]], "Input Data Guidance": [[50, null]], "Installation": [[35, null], [51, null]], "Introduction": [[52, null]], "Making a cell object": [[49, "making-a-cell-object"]], "OCV Fitting": [[43, null]], "Plotting": [[53, null]], "Polars": [[33, "polars"]], "Providing Valid Inputs": [[44, null]], "PyProBE Structure": [[52, "pyprobe-structure"]], "PyProBE data columns": [[50, "pyprobe-data-columns"]], "PyProBE documentation": [[46, null]], "Pydantic": [[33, "pydantic"]], "RawData Validation": [[44, "RawData-Validation"]], "RawData objects": [[47, "rawdata-objects"]], "Sharing Data": [[45, null]], "Shortcuts": [[55, "shortcuts"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [13, "submodules"]], "Subpackages": [[1, "subpackages"], [2, "subpackages"]], "Supported cyclers and formats": [[50, "supported-cyclers-and-formats"]], "The PyProBE README format": [[55, "the-pyprobe-readme-format"]], "The YAML format": [[55, "the-yaml-format"]], "This documentation": [[52, "this-documentation"]], "User Guide": [[54, null]], "Working with multiple input files": [[49, "working-with-multiple-input-files"]], "Writing a README file": [[55, null]], "Writing an Experiment record": [[56, null]], "pyprobe": [[0, null]], "pyprobe package": [[1, null]], "pyprobe.analysis package": [[2, null]], "pyprobe.analysis.base package": [[3, null]], "pyprobe.analysis.base.degradation_mode_analysis_functions module": [[4, null]], "pyprobe.analysis.base.differentiation_functions module": [[5, null]], "pyprobe.analysis.cycling module": [[6, null]], "pyprobe.analysis.degradation_mode_analysis module": [[7, null]], "pyprobe.analysis.differentiation module": [[8, null]], "pyprobe.analysis.pulsing module": [[9, null]], "pyprobe.analysis.smoothing module": [[10, null]], "pyprobe.analysis.utils module": [[11, null]], "pyprobe.cell module": [[12, null]], "pyprobe.cyclers package": [[13, null]], "pyprobe.cyclers.arbin module": [[14, null]], "pyprobe.cyclers.basecycler module": [[15, null]], "pyprobe.cyclers.basytec module": [[16, null]], "pyprobe.cyclers.biologic module": [[17, null]], "pyprobe.cyclers.maccor module": [[18, null]], "pyprobe.cyclers.neware module": [[19, null]], "pyprobe.dashboard module": [[20, null]], "pyprobe.filters module": [[21, null]], "pyprobe.logger module": [[22, null]], "pyprobe.plot module": [[23, null]], "pyprobe.pyprobe_types module": [[24, null]], "pyprobe.rawdata module": [[25, null]], "pyprobe.readme_processor module": [[26, null]], "pyprobe.result module": [[27, null]], "pyprobe.typing module": [[28, null]], "pyprobe.units module": [[29, null]], "pyprobe.utils module": [[30, null]]}, "docnames": ["api/modules", "api/pyprobe", "api/pyprobe.analysis", "api/pyprobe.analysis.base", "api/pyprobe.analysis.base.degradation_mode_analysis_functions", "api/pyprobe.analysis.base.differentiation_functions", "api/pyprobe.analysis.cycling", "api/pyprobe.analysis.degradation_mode_analysis", "api/pyprobe.analysis.differentiation", "api/pyprobe.analysis.pulsing", "api/pyprobe.analysis.smoothing", "api/pyprobe.analysis.utils", "api/pyprobe.cell", "api/pyprobe.cyclers", "api/pyprobe.cyclers.arbin", "api/pyprobe.cyclers.basecycler", "api/pyprobe.cyclers.basytec", "api/pyprobe.cyclers.biologic", "api/pyprobe.cyclers.maccor", "api/pyprobe.cyclers.neware", "api/pyprobe.dashboard", "api/pyprobe.filters", "api/pyprobe.logger", "api/pyprobe.plot", "api/pyprobe.pyprobe_types", "api/pyprobe.rawdata", "api/pyprobe.readme_processor", "api/pyprobe.result", "api/pyprobe.typing", "api/pyprobe.units", "api/pyprobe.utils", "developer_guide/adding_a_cycler", "developer_guide/contributing_to_the_analysis_module", "developer_guide/dependency_guide", "developer_guide/developer_guide", "developer_guide/developer_installation", "examples/LEAN-differentiation", "examples/analysing-GITT-data", "examples/comparing-pyprobe-performance", "examples/differentiating-voltage-data", "examples/examples", "examples/filtering-data", "examples/getting-started", "examples/ocv-fitting", "examples/providing-valid-inputs", "examples/sharing-data", "index", "user_guide/accessing_data", "user_guide/analysis", "user_guide/importing_data", "user_guide/input_data_guidance", "user_guide/installation", "user_guide/introduction", "user_guide/plotting", "user_guide/user_guide", "user_guide/writing_a_readme_file", "user_guide/writing_an_experiment_record"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["api/modules.rst", "api/pyprobe.rst", "api/pyprobe.analysis.rst", "api/pyprobe.analysis.base.rst", "api/pyprobe.analysis.base.degradation_mode_analysis_functions.rst", "api/pyprobe.analysis.base.differentiation_functions.rst", "api/pyprobe.analysis.cycling.rst", "api/pyprobe.analysis.degradation_mode_analysis.rst", "api/pyprobe.analysis.differentiation.rst", "api/pyprobe.analysis.pulsing.rst", "api/pyprobe.analysis.smoothing.rst", "api/pyprobe.analysis.utils.rst", "api/pyprobe.cell.rst", "api/pyprobe.cyclers.rst", "api/pyprobe.cyclers.arbin.rst", "api/pyprobe.cyclers.basecycler.rst", "api/pyprobe.cyclers.basytec.rst", "api/pyprobe.cyclers.biologic.rst", "api/pyprobe.cyclers.maccor.rst", "api/pyprobe.cyclers.neware.rst", "api/pyprobe.dashboard.rst", "api/pyprobe.filters.rst", "api/pyprobe.logger.rst", "api/pyprobe.plot.rst", "api/pyprobe.pyprobe_types.rst", "api/pyprobe.rawdata.rst", "api/pyprobe.readme_processor.rst", "api/pyprobe.result.rst", "api/pyprobe.typing.rst", "api/pyprobe.units.rst", "api/pyprobe.utils.rst", "developer_guide/adding_a_cycler.rst", "developer_guide/contributing_to_the_analysis_module.rst", "developer_guide/dependency_guide.rst", "developer_guide/developer_guide.rst", "developer_guide/developer_installation.rst", "examples/LEAN-differentiation.ipynb", "examples/analysing-GITT-data.ipynb", "examples/comparing-pyprobe-performance.ipynb", "examples/differentiating-voltage-data.ipynb", "examples/examples.rst", "examples/filtering-data.ipynb", "examples/getting-started.ipynb", "examples/ocv-fitting.ipynb", "examples/providing-valid-inputs.ipynb", "examples/sharing-data.ipynb", "index.rst", "user_guide/accessing_data.rst", "user_guide/analysis.rst", "user_guide/importing_data.rst", "user_guide/input_data_guidance.rst", "user_guide/installation.rst", "user_guide/introduction.rst", "user_guide/plotting.rst", "user_guide/user_guide.rst", "user_guide/writing_a_readme_file.rst", "user_guide/writing_an_experiment_record.rst"], "indexentries": {"add_colorbar() (plot method)": [[23, "pyprobe.plot.Plot.add_colorbar", false]], "add_colorscaled_line() (plot method)": [[23, "pyprobe.plot.Plot.add_colorscaled_line", false]], "add_external_data() (procedure method)": [[21, "pyprobe.filters.Procedure.add_external_data", false]], "add_line() (plot method)": [[23, "pyprobe.plot.Plot.add_line", false]], "add_new_data_columns() (result method)": [[27, "pyprobe.result.Result.add_new_data_columns", false]], "add_procedure() (cell method)": [[12, "pyprobe.cell.Cell.add_procedure", false]], "akima_interpolator() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.akima_interpolator", false]], "apply_step_correction() (biologicmb static method)": [[17, "pyprobe.cyclers.biologic.BiologicMB.apply_step_correction", false]], "archive() (cell method)": [[12, "pyprobe.cell.Cell.archive", false]], "array() (result method)": [[27, "pyprobe.result.Result.array", false]], "assemble_array() (in module pyprobe.analysis.utils)": [[11, "pyprobe.analysis.utils.assemble_array", false]], "average_ocv_curves() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.average_OCV_curves", false]], "average_ocvs() (in module pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.average_ocvs", false]], "axis_font_size (plot attribute)": [[23, "pyprobe.plot.Plot.axis_font_size", false]], "base_dataframe (result attribute)": [[27, "pyprobe.result.Result.base_dataframe", false]], "build() (result class method)": [[27, "pyprobe.result.Result.build", false]], "calc_electrode_capacities() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_electrode_capacities", false]], "calc_full_cell_ocv() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_full_cell_OCV", false]], "calc_full_cell_ocv_composite() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_full_cell_OCV_composite", false]], "calc_gradient_with_lean() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.calc_gradient_with_LEAN", false]], "calculate_dma_parameters() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calculate_dma_parameters", false]], "capacity (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.capacity", false]], "capacity (maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.capacity", false]], "capacity (neware property)": [[19, "pyprobe.cyclers.neware.Neware.capacity", false]], "capacity (rawdata property)": [[25, "pyprobe.rawdata.RawData.capacity", false]], "capacity_from_ch_dch (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.capacity_from_ch_dch", false]], "charge() (cycle method)": [[21, "pyprobe.filters.Cycle.charge", false]], "charge() (experiment method)": [[21, "pyprobe.filters.Experiment.charge", false]], "charge() (procedure method)": [[21, "pyprobe.filters.Procedure.charge", false]], "charge_capacity (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.charge_capacity", false]], "charge_capacity (maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.charge_capacity", false]], "charge_capacity (neware property)": [[19, "pyprobe.cyclers.neware.Neware.charge_capacity", false]], "chargeordischarge() (cycle method)": [[21, "pyprobe.filters.Cycle.chargeordischarge", false]], "chargeordischarge() (experiment method)": [[21, "pyprobe.filters.Experiment.chargeordischarge", false]], "chargeordischarge() (procedure method)": [[21, "pyprobe.filters.Procedure.chargeordischarge", false]], "check_and_set_name() (cell class method)": [[12, "pyprobe.cell.Cell.check_and_set_name", false]], "check_required_columns() (rawdata class method)": [[25, "pyprobe.rawdata.RawData.check_required_columns", false]], "clean_copy() (result method)": [[27, "pyprobe.result.Result.clean_copy", false]], "column_definitions (rawdata attribute)": [[25, "pyprobe.rawdata.RawData.column_definitions", false]], "column_definitions (result attribute)": [[27, "pyprobe.result.Result.column_definitions", false]], "column_dict (arbin attribute)": [[14, "pyprobe.cyclers.arbin.Arbin.column_dict", false]], "column_dict (basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.column_dict", false]], "column_dict (basytec attribute)": [[16, "pyprobe.cyclers.basytec.Basytec.column_dict", false]], "column_dict (biologic attribute)": [[17, "pyprobe.cyclers.biologic.Biologic.column_dict", false]], "column_dict (maccor attribute)": [[18, "pyprobe.cyclers.maccor.Maccor.column_dict", false]], "column_dict (neware attribute)": [[19, "pyprobe.cyclers.neware.Neware.column_dict", false]], "column_list (result property)": [[27, "pyprobe.result.Result.column_list", false]], "compositeocp (class in pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.CompositeOCP", false]], "configure_logging() (in module pyprobe.logger)": [[22, "pyprobe.logger.configure_logging", false]], "constant_current() (cycle method)": [[21, "pyprobe.filters.Cycle.constant_current", false]], "constant_current() (experiment method)": [[21, "pyprobe.filters.Experiment.constant_current", false]], "constant_current() (procedure method)": [[21, "pyprobe.filters.Procedure.constant_current", false]], "constant_current() (step method)": [[21, "pyprobe.filters.Step.constant_current", false]], "constant_voltage() (cycle method)": [[21, "pyprobe.filters.Cycle.constant_voltage", false]], "constant_voltage() (experiment method)": [[21, "pyprobe.filters.Experiment.constant_voltage", false]], "constant_voltage() (procedure method)": [[21, "pyprobe.filters.Procedure.constant_voltage", false]], "constant_voltage() (step method)": [[21, "pyprobe.filters.Step.constant_voltage", false]], "contains_lazyframe (result property)": [[27, "pyprobe.result.Result.contains_lazyframe", false]], "cubic_interpolator() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.cubic_interpolator", false]], "current (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.current", false]], "cycle() (experiment method)": [[21, "pyprobe.filters.Experiment.cycle", false]], "cycle() (procedure method)": [[21, "pyprobe.filters.Procedure.cycle", false]], "cycle_info (cycle attribute)": [[21, "pyprobe.filters.Cycle.cycle_info", false]], "cycle_info (experiment attribute)": [[21, "pyprobe.filters.Experiment.cycle_info", false]], "cycle_info (procedure attribute)": [[21, "pyprobe.filters.Procedure.cycle_info", false]], "data (result property)": [[27, "pyprobe.result.Result.data", false]], "date (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.date", false]], "date (maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.date", false]], "datetime_format (arbin attribute)": [[14, "pyprobe.cyclers.arbin.Arbin.datetime_format", false]], "datetime_format (basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.datetime_format", false]], "datetime_format (maccor attribute)": [[18, "pyprobe.cyclers.maccor.Maccor.datetime_format", false]], "default_layout (plot attribute)": [[23, "pyprobe.plot.Plot.default_layout", false]], "define_column() (result method)": [[27, "pyprobe.result.Result.define_column", false]], "differentiate_fd() (differentiation method)": [[8, "pyprobe.analysis.differentiation.Differentiation.differentiate_FD", false]], "differentiate_lean() (differentiation method)": [[8, "pyprobe.analysis.differentiation.Differentiation.differentiate_LEAN", false]], "differentiate_lean() (in module pyprobe.analysis.differentiation)": [[8, "pyprobe.analysis.differentiation.differentiate_LEAN", false]], "discharge() (cycle method)": [[21, "pyprobe.filters.Cycle.discharge", false]], "discharge() (experiment method)": [[21, "pyprobe.filters.Experiment.discharge", false]], "discharge() (procedure method)": [[21, "pyprobe.filters.Procedure.discharge", false]], "discharge_capacity (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.discharge_capacity", false]], "discharge_capacity (maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.discharge_capacity", false]], "discharge_capacity (neware property)": [[19, "pyprobe.cyclers.neware.Neware.discharge_capacity", false]], "downsample() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.downsample", false]], "downsample() (smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.downsample", false]], "eval (compositeocp property)": [[7, "pyprobe.analysis.degradation_mode_analysis.CompositeOCP.eval", false]], "eval (ocp property)": [[7, "pyprobe.analysis.degradation_mode_analysis.OCP.eval", false]], "event (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.event", false]], "experiment() (procedure method)": [[21, "pyprobe.filters.Procedure.experiment", false]], "experiment_names (procedure property)": [[21, "pyprobe.filters.Procedure.experiment_names", false]], "experimentorcycletype (in module pyprobe.pyprobe_types)": [[24, "pyprobe.pyprobe_types.ExperimentOrCycleType", false]], "extend() (result method)": [[27, "pyprobe.result.Result.extend", false]], "fig (plot property)": [[23, "pyprobe.plot.Plot.fig", false]], "filtertocycletype (in module pyprobe.pyprobe_types)": [[24, "pyprobe.pyprobe_types.FilterToCycleType", false]], "filtertoexperimenttype (in module pyprobe.pyprobe_types)": [[24, "pyprobe.pyprobe_types.FilterToExperimentType", false]], "filtertosteptype (in module pyprobe.pyprobe_types)": [[24, "pyprobe.pyprobe_types.FilterToStepType", false]], "flatten_list() (in module pyprobe.utils)": [[30, "pyprobe.utils.flatten_list", false]], "from_data() (compositeocp static method)": [[7, "pyprobe.analysis.degradation_mode_analysis.CompositeOCP.from_data", false]], "from_data() (ocp static method)": [[7, "pyprobe.analysis.degradation_mode_analysis.OCP.from_data", false]], "from_default_unit() (units method)": [[29, "pyprobe.units.Units.from_default_unit", false]], "from_expression() (ocp static method)": [[7, "pyprobe.analysis.degradation_mode_analysis.OCP.from_expression", false]], "get() (result method)": [[27, "pyprobe.result.Result.get", false]], "get_cycle_column() (in module pyprobe.filters)": [[21, "pyprobe.filters.get_cycle_column", false]], "get_data_dict() (pybammsolution method)": [[30, "pyprobe.utils.PyBaMMSolution.get_data_dict", false]], "get_dx() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_dx", false]], "get_dy_and_counts() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_dy_and_counts", false]], "get_imported_dataframe() (basecycler method)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.get_imported_dataframe", false]], "get_imported_dataframe() (biologicmb method)": [[17, "pyprobe.cyclers.biologic.BiologicMB.get_imported_dataframe", false]], "get_ocv_curve() (in module pyprobe.analysis.pulsing)": [[9, "pyprobe.analysis.pulsing.get_ocv_curve", false]], "get_only() (result method)": [[27, "pyprobe.result.Result.get_only", false]], "get_resistances() (in module pyprobe.analysis.pulsing)": [[9, "pyprobe.analysis.pulsing.get_resistances", false]], "get_x_sections() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_x_sections", false]], "grad (compositeocp property)": [[7, "pyprobe.analysis.degradation_mode_analysis.CompositeOCP.grad", false]], "grad (ocp property)": [[7, "pyprobe.analysis.degradation_mode_analysis.OCP.grad", false]], "gradient() (in module pyprobe.analysis.differentiation)": [[8, "pyprobe.analysis.differentiation.gradient", false]], "import_and_validate_data() (basecycler method)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.import_and_validate_data", false]], "import_pybamm_solution() (cell method)": [[12, "pyprobe.cell.Cell.import_pybamm_solution", false]], "info (cell attribute)": [[12, "pyprobe.cell.Cell.info", false]], "info (result attribute)": [[27, "pyprobe.result.Result.info", false]], "input_data (analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.input_data", false]], "input_data (cycling attribute)": [[6, "pyprobe.analysis.cycling.Cycling.input_data", false]], "input_data (differentiation attribute)": [[8, "pyprobe.analysis.differentiation.Differentiation.input_data", false]], "input_data (pulsing attribute)": [[9, "pyprobe.analysis.pulsing.Pulsing.input_data", false]], "input_data (smoothing attribute)": [[10, "pyprobe.analysis.smoothing.Smoothing.input_data", false]], "input_data_path (arbin attribute)": [[14, "pyprobe.cyclers.arbin.Arbin.input_data_path", false]], "input_data_path (basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.input_data_path", false]], "input_data_path (basytec attribute)": [[16, "pyprobe.cyclers.basytec.Basytec.input_data_path", false]], "input_data_path (biologic attribute)": [[17, "pyprobe.cyclers.biologic.Biologic.input_data_path", false]], "input_data_path (maccor attribute)": [[18, "pyprobe.cyclers.maccor.Maccor.input_data_path", false]], "input_data_path (neware attribute)": [[19, "pyprobe.cyclers.neware.Neware.input_data_path", false]], "join() (result method)": [[27, "pyprobe.result.Result.join", false]], "launch_dashboard() (in module pyprobe.dashboard)": [[20, "pyprobe.dashboard.launch_dashboard", false]], "level_smoothing() (smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.level_smoothing", false]], "linear_interpolator() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.linear_interpolator", false]], "load_archive() (in module pyprobe.cell)": [[12, "pyprobe.cell.load_archive", false]], "load_external_file() (procedure method)": [[21, "pyprobe.filters.Procedure.load_external_file", false]], "make_cell_list() (in module pyprobe.cell)": [[12, "pyprobe.cell.make_cell_list", false]], "make_colorscale() (plot static method)": [[23, "pyprobe.plot.Plot.make_colorscale", false]], "module": [[1, "module-pyprobe", false], [2, "module-pyprobe.analysis", false], [3, "module-pyprobe.analysis.base", false], [4, "module-pyprobe.analysis.base.degradation_mode_analysis_functions", false], [5, "module-pyprobe.analysis.base.differentiation_functions", false], [6, "module-pyprobe.analysis.cycling", false], [7, "module-pyprobe.analysis.degradation_mode_analysis", false], [8, "module-pyprobe.analysis.differentiation", false], [9, "module-pyprobe.analysis.pulsing", false], [10, "module-pyprobe.analysis.smoothing", false], [11, "module-pyprobe.analysis.utils", false], [12, "module-pyprobe.cell", false], [13, "module-pyprobe.cyclers", false], [14, "module-pyprobe.cyclers.arbin", false], [15, "module-pyprobe.cyclers.basecycler", false], [16, "module-pyprobe.cyclers.basytec", false], [17, "module-pyprobe.cyclers.biologic", false], [18, "module-pyprobe.cyclers.maccor", false], [19, "module-pyprobe.cyclers.neware", false], [20, "module-pyprobe.dashboard", false], [21, "module-pyprobe.filters", false], [22, "module-pyprobe.logger", false], [23, "module-pyprobe.plot", false], [24, "module-pyprobe.pyprobe_types", false], [25, "module-pyprobe.rawdata", false], [26, "module-pyprobe.readme_processor", false], [27, "module-pyprobe.result", false], [29, "module-pyprobe.units", false], [30, "module-pyprobe.utils", false]], "ocp (class in pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.OCP", false]], "ocv_curve_fit() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.ocv_curve_fit", false]], "pchip_interpolator() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.pchip_interpolator", false]], "plot (class in pyprobe.plot)": [[23, "pyprobe.plot.Plot", false]], "prefix_dict (units attribute)": [[29, "pyprobe.units.Units.prefix_dict", false]], "print_definitions() (result method)": [[27, "pyprobe.result.Result.print_definitions", false]], "procedure (cell attribute)": [[12, "pyprobe.cell.Cell.procedure", false]], "process_cycler_file() (cell method)": [[12, "pyprobe.cell.Cell.process_cycler_file", false]], "process_generic_file() (cell method)": [[12, "pyprobe.cell.Cell.process_generic_file", false]], "process_readme() (in module pyprobe.readme_processor)": [[26, "pyprobe.readme_processor.process_readme", false]], "pulse() (pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse", false]], "pulse_rest() (pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse_rest", false]], "pulse_summary() (pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse_summary", false]], "pybamm_experiment (rawdata property)": [[25, "pyprobe.rawdata.RawData.pybamm_experiment", false]], "pybammsolution (class in pyprobe.utils)": [[30, "pyprobe.utils.PyBaMMSolution", false]], "pyprobe": [[1, "module-pyprobe", false]], "pyprobe.analysis": [[2, "module-pyprobe.analysis", false]], "pyprobe.analysis.base": [[3, "module-pyprobe.analysis.base", false]], "pyprobe.analysis.base.degradation_mode_analysis_functions": [[4, "module-pyprobe.analysis.base.degradation_mode_analysis_functions", false]], "pyprobe.analysis.base.differentiation_functions": [[5, "module-pyprobe.analysis.base.differentiation_functions", false]], "pyprobe.analysis.cycling": [[6, "module-pyprobe.analysis.cycling", false]], "pyprobe.analysis.degradation_mode_analysis": [[7, "module-pyprobe.analysis.degradation_mode_analysis", false]], "pyprobe.analysis.differentiation": [[8, "module-pyprobe.analysis.differentiation", false]], "pyprobe.analysis.pulsing": [[9, "module-pyprobe.analysis.pulsing", false]], "pyprobe.analysis.smoothing": [[10, "module-pyprobe.analysis.smoothing", false]], "pyprobe.analysis.utils": [[11, "module-pyprobe.analysis.utils", false]], "pyprobe.cell": [[12, "module-pyprobe.cell", false]], "pyprobe.cyclers": [[13, "module-pyprobe.cyclers", false]], "pyprobe.cyclers.arbin": [[14, "module-pyprobe.cyclers.arbin", false]], "pyprobe.cyclers.basecycler": [[15, "module-pyprobe.cyclers.basecycler", false]], "pyprobe.cyclers.basytec": [[16, "module-pyprobe.cyclers.basytec", false]], "pyprobe.cyclers.biologic": [[17, "module-pyprobe.cyclers.biologic", false]], "pyprobe.cyclers.maccor": [[18, "module-pyprobe.cyclers.maccor", false]], "pyprobe.cyclers.neware": [[19, "module-pyprobe.cyclers.neware", false]], "pyprobe.dashboard": [[20, "module-pyprobe.dashboard", false]], "pyprobe.filters": [[21, "module-pyprobe.filters", false]], "pyprobe.logger": [[22, "module-pyprobe.logger", false]], "pyprobe.plot": [[23, "module-pyprobe.plot", false]], "pyprobe.pyprobe_types": [[24, "module-pyprobe.pyprobe_types", false]], "pyprobe.rawdata": [[25, "module-pyprobe.rawdata", false]], "pyprobe.readme_processor": [[26, "module-pyprobe.readme_processor", false]], "pyprobe.result": [[27, "module-pyprobe.result", false]], "pyprobe.units": [[29, "module-pyprobe.units", false]], "pyprobe.utils": [[30, "module-pyprobe.utils", false]], "pyprobe_dataframe (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.pyprobe_dataframe", false]], "pyprobedatatype (in module pyprobe.pyprobe_types)": [[24, "pyprobe.pyprobe_types.PyProBEDataType", false]], "pyproberawdatatype (in module pyprobe.pyprobe_types)": [[24, "pyprobe.pyprobe_types.PyProBERawDataType", false]], "quantify_degradation_modes() (in module pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.quantify_degradation_modes", false]], "quantities (result property)": [[27, "pyprobe.result.Result.quantities", false]], "read_file() (basecycler static method)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.read_file", false]], "read_file() (basytec static method)": [[16, "pyprobe.cyclers.basytec.Basytec.read_file", false]], "read_file() (biologic static method)": [[17, "pyprobe.cyclers.biologic.Biologic.read_file", false]], "read_file() (maccor static method)": [[18, "pyprobe.cyclers.maccor.Maccor.read_file", false]], "read_file() (neware static method)": [[19, "pyprobe.cyclers.neware.Neware.read_file", false]], "readme_dict (procedure attribute)": [[21, "pyprobe.filters.Procedure.readme_dict", false]], "readmemodel (class in pyprobe.readme_processor)": [[26, "pyprobe.readme_processor.ReadmeModel", false]], "remove_experiment() (procedure method)": [[21, "pyprobe.filters.Procedure.remove_experiment", false]], "required_columns (analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.required_columns", false]], "rest() (cycle method)": [[21, "pyprobe.filters.Cycle.rest", false]], "rest() (experiment method)": [[21, "pyprobe.filters.Experiment.rest", false]], "rest() (procedure method)": [[21, "pyprobe.filters.Procedure.rest", false]], "run_batch_dma_parallel() (in module pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.run_batch_dma_parallel", false]], "run_batch_dma_sequential() (in module pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.run_batch_dma_sequential", false]], "run_ocv_curve_fit() (in module pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.run_ocv_curve_fit", false]], "savgol_smoothing() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.savgol_smoothing", false]], "savgol_smoothing() (smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.savgol_smoothing", false]], "set_reference_capacity() (rawdata method)": [[25, "pyprobe.rawdata.RawData.set_reference_capacity", false]], "set_soc() (rawdata method)": [[25, "pyprobe.rawdata.RawData.set_SOC", false]], "show() (plot method)": [[23, "pyprobe.plot.Plot.show", false]], "show_image() (plot method)": [[23, "pyprobe.plot.Plot.show_image", false]], "smooth_gradient() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.smooth_gradient", false]], "spline_smoothing() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.spline_smoothing", false]], "spline_smoothing() (smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.spline_smoothing", false]], "step (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.step", false]], "step() (cycle method)": [[21, "pyprobe.filters.Cycle.step", false]], "step() (experiment method)": [[21, "pyprobe.filters.Experiment.step", false]], "step() (procedure method)": [[21, "pyprobe.filters.Procedure.step", false]], "step() (step method)": [[21, "pyprobe.filters.Step.step", false]], "step_descriptions (rawdata attribute)": [[25, "pyprobe.rawdata.RawData.step_descriptions", false]], "summary() (cycling method)": [[6, "pyprobe.analysis.cycling.Cycling.summary", false]], "summary() (in module pyprobe.analysis.cycling)": [[6, "pyprobe.analysis.cycling.summary", false]], "temperature (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.temperature", false]], "time (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.time", false]], "time (neware property)": [[19, "pyprobe.cyclers.neware.Neware.time", false]], "time_unit_dict (units attribute)": [[29, "pyprobe.units.Units.time_unit_dict", false]], "title_font_size (plot attribute)": [[23, "pyprobe.plot.Plot.title_font_size", false]], "to_default_unit() (units method)": [[29, "pyprobe.units.Units.to_default_unit", false]], "unit_dict (units attribute)": [[29, "pyprobe.units.Units.unit_dict", false]], "unit_from_regexp() (in module pyprobe.units)": [[29, "pyprobe.units.unit_from_regexp", false]], "units (class in pyprobe.units)": [[29, "pyprobe.units.Units", false]], "validate_required_columns() (analysisvalidator method)": [[11, "pyprobe.analysis.utils.AnalysisValidator.validate_required_columns", false]], "variables (analysisvalidator property)": [[11, "pyprobe.analysis.utils.AnalysisValidator.variables", false]], "voltage (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.voltage", false]], "x_range (plot property)": [[23, "pyprobe.plot.Plot.x_range", false]], "y2_range (plot property)": [[23, "pyprobe.plot.Plot.y2_range", false]], "y_range (plot property)": [[23, "pyprobe.plot.Plot.y_range", false]], "y_sampling_interval() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.y_sampling_interval", false]], "zero_column() (rawdata method)": [[25, "pyprobe.rawdata.RawData.zero_column", false]]}, "objects": {"": [[1, 0, 0, "-", "pyprobe"]], "pyprobe": [[2, 0, 0, "-", "analysis"], [12, 0, 0, "-", "cell"], [13, 0, 0, "-", "cyclers"], [20, 0, 0, "-", "dashboard"], [21, 0, 0, "-", "filters"], [22, 0, 0, "-", "logger"], [23, 0, 0, "-", "plot"], [24, 0, 0, "-", "pyprobe_types"], [25, 0, 0, "-", "rawdata"], [26, 0, 0, "-", "readme_processor"], [27, 0, 0, "-", "result"], [29, 0, 0, "-", "units"], [30, 0, 0, "-", "utils"]], "pyprobe.analysis": [[3, 0, 0, "-", "base"], [6, 0, 0, "-", "cycling"], [7, 0, 0, "-", "degradation_mode_analysis"], [8, 0, 0, "-", "differentiation"], [9, 0, 0, "-", "pulsing"], [10, 0, 0, "-", "smoothing"], [11, 0, 0, "-", "utils"]], "pyprobe.analysis.base": [[4, 0, 0, "-", "degradation_mode_analysis_functions"], [5, 0, 0, "-", "differentiation_functions"]], "pyprobe.analysis.base.degradation_mode_analysis_functions": [[4, 1, 1, "", "average_OCV_curves"], [4, 1, 1, "", "calc_electrode_capacities"], [4, 1, 1, "", "calc_full_cell_OCV"], [4, 1, 1, "", "calc_full_cell_OCV_composite"], [4, 1, 1, "", "calculate_dma_parameters"], [4, 1, 1, "", "ocv_curve_fit"]], "pyprobe.analysis.base.differentiation_functions": [[5, 1, 1, "", "calc_gradient_with_LEAN"], [5, 1, 1, "", "get_dx"], [5, 1, 1, "", "get_dy_and_counts"], [5, 1, 1, "", "get_x_sections"], [5, 1, 1, "", "smooth_gradient"], [5, 1, 1, "", "y_sampling_interval"]], "pyprobe.analysis.cycling": [[6, 2, 1, "", "Cycling"], [6, 1, 1, "", "summary"]], "pyprobe.analysis.cycling.Cycling": [[6, 3, 1, "", "input_data"], [6, 4, 1, "", "summary"]], "pyprobe.analysis.degradation_mode_analysis": [[7, 5, 1, "", "CompositeOCP"], [7, 5, 1, "", "OCP"], [7, 1, 1, "", "average_ocvs"], [7, 1, 1, "", "quantify_degradation_modes"], [7, 1, 1, "", "run_batch_dma_parallel"], [7, 1, 1, "", "run_batch_dma_sequential"], [7, 1, 1, "", "run_ocv_curve_fit"]], "pyprobe.analysis.degradation_mode_analysis.CompositeOCP": [[7, 6, 1, "", "eval"], [7, 4, 1, "", "from_data"], [7, 6, 1, "", "grad"]], "pyprobe.analysis.degradation_mode_analysis.OCP": [[7, 6, 1, "", "eval"], [7, 4, 1, "", "from_data"], [7, 4, 1, "", "from_expression"], [7, 6, 1, "", "grad"]], "pyprobe.analysis.differentiation": [[8, 2, 1, "", "Differentiation"], [8, 1, 1, "", "differentiate_LEAN"], [8, 1, 1, "", "gradient"]], "pyprobe.analysis.differentiation.Differentiation": [[8, 4, 1, "", "differentiate_FD"], [8, 4, 1, "", "differentiate_LEAN"], [8, 3, 1, "", "input_data"]], "pyprobe.analysis.pulsing": [[9, 2, 1, "", "Pulsing"], [9, 1, 1, "", "get_ocv_curve"], [9, 1, 1, "", "get_resistances"]], "pyprobe.analysis.pulsing.Pulsing": [[9, 3, 1, "", "input_data"], [9, 4, 1, "", "pulse"], [9, 4, 1, "", "pulse_rest"], [9, 4, 1, "", "pulse_summary"]], "pyprobe.analysis.smoothing": [[10, 2, 1, "", "Smoothing"], [10, 1, 1, "", "akima_interpolator"], [10, 1, 1, "", "cubic_interpolator"], [10, 1, 1, "", "downsample"], [10, 1, 1, "", "linear_interpolator"], [10, 1, 1, "", "pchip_interpolator"], [10, 1, 1, "", "savgol_smoothing"], [10, 1, 1, "", "spline_smoothing"]], "pyprobe.analysis.smoothing.Smoothing": [[10, 4, 1, "", "downsample"], [10, 3, 1, "", "input_data"], [10, 4, 1, "", "level_smoothing"], [10, 4, 1, "", "savgol_smoothing"], [10, 4, 1, "", "spline_smoothing"]], "pyprobe.analysis.utils": [[11, 2, 1, "", "AnalysisValidator"], [11, 1, 1, "", "assemble_array"]], "pyprobe.analysis.utils.AnalysisValidator": [[11, 3, 1, "", "input_data"], [11, 3, 1, "", "required_columns"], [11, 7, 1, "", "validate_required_columns"], [11, 6, 1, "", "variables"]], "pyprobe.cell": [[12, 2, 1, "", "Cell"], [12, 1, 1, "", "load_archive"], [12, 1, 1, "", "make_cell_list"]], "pyprobe.cell.Cell": [[12, 4, 1, "", "add_procedure"], [12, 4, 1, "", "archive"], [12, 7, 1, "", "check_and_set_name"], [12, 4, 1, "", "import_pybamm_solution"], [12, 3, 1, "", "info"], [12, 3, 1, "", "procedure"], [12, 4, 1, "", "process_cycler_file"], [12, 4, 1, "", "process_generic_file"]], "pyprobe.cyclers": [[14, 0, 0, "-", "arbin"], [15, 0, 0, "-", "basecycler"], [16, 0, 0, "-", "basytec"], [17, 0, 0, "-", "biologic"], [18, 0, 0, "-", "maccor"], [19, 0, 0, "-", "neware"]], "pyprobe.cyclers.arbin": [[14, 2, 1, "", "Arbin"]], "pyprobe.cyclers.arbin.Arbin": [[14, 3, 1, "", "column_dict"], [14, 3, 1, "", "datetime_format"], [14, 3, 1, "", "input_data_path"]], "pyprobe.cyclers.basecycler": [[15, 2, 1, "", "BaseCycler"]], "pyprobe.cyclers.basecycler.BaseCycler": [[15, 6, 1, "", "capacity"], [15, 6, 1, "", "capacity_from_ch_dch"], [15, 6, 1, "", "charge_capacity"], [15, 3, 1, "", "column_dict"], [15, 6, 1, "", "current"], [15, 6, 1, "", "date"], [15, 3, 1, "", "datetime_format"], [15, 6, 1, "", "discharge_capacity"], [15, 6, 1, "", "event"], [15, 4, 1, "", "get_imported_dataframe"], [15, 7, 1, "", "import_and_validate_data"], [15, 3, 1, "", "input_data_path"], [15, 6, 1, "", "pyprobe_dataframe"], [15, 4, 1, "", "read_file"], [15, 6, 1, "", "step"], [15, 6, 1, "", "temperature"], [15, 6, 1, "", "time"], [15, 6, 1, "", "voltage"]], "pyprobe.cyclers.basytec": [[16, 2, 1, "", "Basytec"]], "pyprobe.cyclers.basytec.Basytec": [[16, 3, 1, "", "column_dict"], [16, 3, 1, "", "input_data_path"], [16, 4, 1, "", "read_file"]], "pyprobe.cyclers.biologic": [[17, 2, 1, "", "Biologic"], [17, 2, 1, "", "BiologicMB"]], "pyprobe.cyclers.biologic.Biologic": [[17, 3, 1, "", "column_dict"], [17, 3, 1, "", "input_data_path"], [17, 4, 1, "", "read_file"]], "pyprobe.cyclers.biologic.BiologicMB": [[17, 4, 1, "", "apply_step_correction"], [17, 4, 1, "", "get_imported_dataframe"]], "pyprobe.cyclers.maccor": [[18, 2, 1, "", "Maccor"]], "pyprobe.cyclers.maccor.Maccor": [[18, 6, 1, "", "capacity"], [18, 6, 1, "", "charge_capacity"], [18, 3, 1, "", "column_dict"], [18, 6, 1, "", "date"], [18, 3, 1, "", "datetime_format"], [18, 6, 1, "", "discharge_capacity"], [18, 3, 1, "", "input_data_path"], [18, 4, 1, "", "read_file"]], "pyprobe.cyclers.neware": [[19, 2, 1, "", "Neware"]], "pyprobe.cyclers.neware.Neware": [[19, 6, 1, "", "capacity"], [19, 6, 1, "", "charge_capacity"], [19, 3, 1, "", "column_dict"], [19, 6, 1, "", "discharge_capacity"], [19, 3, 1, "", "input_data_path"], [19, 4, 1, "", "read_file"], [19, 6, 1, "", "time"]], "pyprobe.dashboard": [[20, 1, 1, "", "launch_dashboard"]], "pyprobe.filters": [[21, 2, 1, "", "Cycle"], [21, 2, 1, "", "Experiment"], [21, 2, 1, "", "Procedure"], [21, 2, 1, "", "Step"], [21, 1, 1, "", "get_cycle_column"]], "pyprobe.filters.Cycle": [[21, 4, 1, "", "charge"], [21, 4, 1, "", "chargeordischarge"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 3, 1, "", "cycle_info"], [21, 4, 1, "", "discharge"], [21, 4, 1, "", "rest"], [21, 4, 1, "", "step"]], "pyprobe.filters.Experiment": [[21, 4, 1, "", "charge"], [21, 4, 1, "", "chargeordischarge"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 4, 1, "", "cycle"], [21, 3, 1, "", "cycle_info"], [21, 4, 1, "", "discharge"], [21, 4, 1, "", "rest"], [21, 4, 1, "", "step"]], "pyprobe.filters.Procedure": [[21, 4, 1, "", "add_external_data"], [21, 4, 1, "", "charge"], [21, 4, 1, "", "chargeordischarge"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 4, 1, "", "cycle"], [21, 3, 1, "", "cycle_info"], [21, 4, 1, "", "discharge"], [21, 4, 1, "", "experiment"], [21, 6, 1, "", "experiment_names"], [21, 4, 1, "", "load_external_file"], [21, 3, 1, "", "readme_dict"], [21, 4, 1, "", "remove_experiment"], [21, 4, 1, "", "rest"], [21, 4, 1, "", "step"]], "pyprobe.filters.Step": [[21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 4, 1, "", "step"]], "pyprobe.logger": [[22, 1, 1, "", "configure_logging"]], "pyprobe.plot": [[23, 5, 1, "", "Plot"]], "pyprobe.plot.Plot": [[23, 4, 1, "", "add_colorbar"], [23, 4, 1, "", "add_colorscaled_line"], [23, 4, 1, "", "add_line"], [23, 8, 1, "", "axis_font_size"], [23, 8, 1, "", "default_layout"], [23, 6, 1, "", "fig"], [23, 4, 1, "", "make_colorscale"], [23, 4, 1, "", "show"], [23, 4, 1, "", "show_image"], [23, 8, 1, "", "title_font_size"], [23, 6, 1, "", "x_range"], [23, 6, 1, "", "y2_range"], [23, 6, 1, "", "y_range"]], "pyprobe.pyprobe_types": [[24, 9, 1, "", "ExperimentOrCycleType"], [24, 9, 1, "", "FilterToCycleType"], [24, 9, 1, "", "FilterToExperimentType"], [24, 9, 1, "", "FilterToStepType"], [24, 9, 1, "", "PyProBEDataType"], [24, 9, 1, "", "PyProBERawDataType"]], "pyprobe.rawdata": [[25, 2, 1, "", "RawData"]], "pyprobe.rawdata.RawData": [[25, 6, 1, "", "capacity"], [25, 7, 1, "", "check_required_columns"], [25, 3, 1, "", "column_definitions"], [25, 6, 1, "", "pybamm_experiment"], [25, 4, 1, "", "set_SOC"], [25, 4, 1, "", "set_reference_capacity"], [25, 3, 1, "", "step_descriptions"], [25, 4, 1, "", "zero_column"]], "pyprobe.readme_processor": [[26, 5, 1, "", "ReadmeModel"], [26, 1, 1, "", "process_readme"]], "pyprobe.result": [[27, 2, 1, "", "Result"]], "pyprobe.result.Result": [[27, 4, 1, "", "add_new_data_columns"], [27, 4, 1, "", "array"], [27, 3, 1, "", "base_dataframe"], [27, 4, 1, "", "build"], [27, 4, 1, "", "clean_copy"], [27, 3, 1, "", "column_definitions"], [27, 6, 1, "", "column_list"], [27, 6, 1, "", "contains_lazyframe"], [27, 6, 1, "", "data"], [27, 4, 1, "", "define_column"], [27, 4, 1, "", "extend"], [27, 4, 1, "", "get"], [27, 4, 1, "", "get_only"], [27, 3, 1, "", "info"], [27, 4, 1, "", "join"], [27, 4, 1, "", "print_definitions"], [27, 6, 1, "", "quantities"]], "pyprobe.units": [[29, 5, 1, "", "Units"], [29, 1, 1, "", "unit_from_regexp"]], "pyprobe.units.Units": [[29, 4, 1, "", "from_default_unit"], [29, 8, 1, "", "prefix_dict"], [29, 8, 1, "", "time_unit_dict"], [29, 4, 1, "", "to_default_unit"], [29, 8, 1, "", "unit_dict"]], "pyprobe.utils": [[30, 5, 1, "", "PyBaMMSolution"], [30, 1, 1, "", "flatten_list"]], "pyprobe.utils.PyBaMMSolution": [[30, 4, 1, "", "get_data_dict"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "pydantic_model", "Python model"], "3": ["py", "pydantic_field", "Python field"], "4": ["py", "method", "Python method"], "5": ["py", "class", "Python class"], "6": ["py", "property", "Python property"], "7": ["py", "pydantic_validator", "Python validator"], "8": ["py", "attribute", "Python attribute"], "9": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:pydantic_model", "3": "py:pydantic_field", "4": "py:method", "5": "py:class", "6": "py:property", "7": "py:pydantic_validator", "8": "py:attribute", "9": "py:data"}, "terms": {"": [10, 14, 18, 21, 22, 25, 27, 29, 32, 38, 41, 42, 44, 46, 47, 50, 53, 55, 56], "0": [7, 8, 10, 29, 31, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 49, 55], "00": 42, "000001": 42, "000002": 42, "000003": 42, "000005": 42, "00001": 42, "00004": 42, "0004": 42, "0004023": 42, "00040614": 42, "001": [29, 42], "001267": 42, "002": 39, "00399931": 42, "00400001": 42, "00400004": 42, "01": [36, 37, 39, 42, 43, 44, 45], "018585": 42, "02": [42, 49], "0205": 43, "022805": 42, "024001": 38, "025830": 38, "026056": 37, "026211": 37, "026450": 38, "028": 39, "029": 39, "03": [42, 43], "030008": 43, "030212": 37, "034212": 37, "038212": 37, "04": [36, 37, 38, 39, 41, 42, 44, 45, 49, 55], "040937": 42, "041086": 42, "041138": 42, "041241": 42, "041247": 42, "041296": 42, "04132": 42, "041329": 42, "041362": 42, "04139": 42, "041391": 42, "041392": 42, "041393": 42, "041395": 42, "042212": 37, "0428": 43, "04478": 43, "046213": 37, "050213": 37, "053917": 38, "054213": 37, "058214": 37, "06": [29, 42], "062214": 37, "0668": 8, "08": 37, "080534": 43, "082022": 42, "087": 37, "088": 37, "089": 37, "09": [29, 38, 42, 43, 49], "0909": 43, "094": 42, "0949": 37, "0x7efbd31bee40": 42, "0x7fc14be00710": 38, "0x7fc15000a8d0": 38, "0x7fc1517a44a0": 38, "1": [4, 5, 7, 8, 9, 18, 29, 31, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 55], "10": [5, 8, 36, 37, 38, 39, 41, 42, 43, 44, 55], "100": [37, 38, 42], "1000": [29, 43], "1000000": 29, "100051": [5, 8, 36, 39], "1016": [5, 8, 36, 39], "1059": 8, "11": [35, 37, 38, 41, 42, 51, 55], "110": 44, "111": 44, "112": 44, "113": 44, "1149": 43, "119273": 42, "12": [29, 35, 37, 38, 41, 42, 44, 51, 55], "121": 8, "1234": 43, "131485": 37, "14": [23, 38, 43], "15": [37, 43], "154": 43, "164407": 42, "167": 43, "17": [38, 43], "173": 36, "174": 36, "1745": 8, "18": [23, 43, 44], "19": [36, 37, 39, 42, 43, 44, 45, 49], "1919": 37, "1945": 43, "196": 37, "197": [37, 42], "1972": 8, "1d": [27, 42, 47], "1e": [29, 39], "2": [4, 7, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 50, 53, 55], "20": [38, 41, 42, 55], "2001": 42, "2020": [5, 8, 36, 39, 43], "2024": [42, 49], "2025": [36, 37, 39, 42, 43, 44, 45], "21": 42, "210305": 42, "212": 44, "213": 44, "214": [36, 44], "215": [36, 44], "216": 44, "217": 44, "218": 44, "219": 44, "22": [44, 45], "220": 44, "221": 44, "227986": 37, "23": 44, "234": 37, "235": 37, "24": [38, 44], "2417": 8, "246969": 42, "2482": 43, "25": 8, "27": 43, "270011": 43, "2769": 43, "28": 36, "28448": 42, "2895": 42, "29": [36, 37, 42, 43, 49], "2962": 42, "2979": 42, "2f": 38, "3": [5, 8, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 50, 51, 55], "30": [22, 41, 42, 43, 55], "301386": 42, "31": [39, 42], "3117": 43, "3120": 43, "32": [42, 43, 44, 45], "324487": 37, "329627": 42, "33": [39, 42], "34": [42, 44], "345855": 37, "35": [42, 44], "36": [42, 44], "3600": [29, 38], "3631": 43, "37": [42, 44], "38": [42, 44], "383": 8, "3830": 8, "39": [37, 39, 42, 43, 44, 45], "390765": 37, "392471": 42, "393179": 42, "4": [32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 53, 55], "40": 44, "400785": 37, "4023": 42, "40614": 42, "41": 44, "42": 44, "420988": 37, "43": 44, "44": 44, "443": 43, "4444": 43, "45": 44, "4513": 42, "464198": 38, "4875": 43, "490732": 42, "495": 42, "497": 42, "4ma": [41, 42, 55], "5": [8, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 55], "500495": 43, "5138": 43, "5164": 37, "517489": 37, "55": 38, "554": 49, "5542": 43, "562745": 42, "562746": 42, "562747": 42, "562748": 42, "562749": 42, "565912": 37, "5711": 42, "58": [36, 49], "5842": 43, "5866": 37, "591": 42, "6": [32, 37, 38, 39, 41, 42, 43, 44, 45, 55], "60": 29, "600": 23, "609454": 38, "61": 42, "6103": 43, "613991": 37, "62069": 43, "622008": 43, "6334": 37, "640815": 37, "665": 37, "672765": 42, "685": 44, "685915": 37, "686": 44, "687": 44, "7": [8, 32, 37, 38, 39, 41, 42, 43, 44, 55], "705558": 37, "705622": 37, "710493": 37, "7111": 43, "7114": 37, "713": 42, "714": 42, "7172": 42, "7197": 42, "7201": 42, "7205": 42, "7208": 42, "725532": 37, "7326": 43, "735555": 37, "735943": 37, "740624": 42, "743512": 42, "747127": 43, "747137": 43, "750596": 37, "775612": 37, "7890": 43, "789_589": 42, "795638": 37, "8": [37, 38, 41, 42, 43, 44, 55], "800": 23, "8022": 37, "805578": 37, "805967": 37, "806994": 37, "8090": 43, "835632": 37, "849922": 43, "85": 43, "8538": 43, "86": 43, "860": 45, "861": 45, "876766": 42, "8987": 37, "9": [7, 37, 38, 41, 42, 43, 44, 55], "900006": 43, "900663": 37, "903497": 37, "910931": 37, "9159": 43, "92": 38, "928": 37, "929": 37, "930": 37, "9308": 43, "931": [36, 37], "932": 36, "933": 36, "959186": 42, "963": 37, "964": 37, "9793": 43, "9934": 37, "999212": 42, "99931": 42, "999406": 42, "999854": 42, "A": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 27, 29, 30, 31, 32, 36, 38, 39, 41, 42, 44, 47, 49, 50, 55], "And": [37, 38, 42, 43], "As": [37, 44], "BY": [36, 39], "But": 44, "By": [22, 32], "For": [18, 19, 21, 31, 42, 44, 48, 49, 53, 55], "If": [5, 7, 10, 11, 12, 21, 27, 31, 32, 42, 44, 49, 51, 52, 55], "In": [31, 32, 35, 38, 43, 44, 48, 49, 51, 55], "It": [12, 25, 31, 32, 33, 35, 47, 49, 51, 55, 56], "Its": 50, "No": 50, "On": [36, 51], "One": [32, 41], "Or": 47, "That": 41, "The": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 47, 49, 50, 51, 53, 54, 56], "Then": [37, 47, 52, 53], "There": 55, "These": [12, 25, 32, 42, 44, 49, 52, 55], "To": [35, 36, 37, 46, 47, 51, 55], "With": [35, 37, 38], "_": [38, 49], "__call__": 44, "__init__": 44, "__pydantic_validator__": 44, "__return_pydantic_validator__": 44, "__tracebackhide__": 44, "_abstractocp": 7, "_check_column_dict": [14, 15, 16, 17, 18, 19], "_check_input_data_path": [14, 15, 16, 17, 18, 19], "_intern": 44, "_load_base_datafram": [21, 25, 27], "_mb": 49, "_validate_cal": 44, "ab9050": 43, "abl": [38, 41, 49, 50, 51], "about": [12, 27, 29, 44, 48, 49, 55, 56], "abov": [27, 38, 55], "accept": 32, "access": [32, 42, 54], "accordingli": 25, "achiev": 12, "acquisit": 50, "across": [7, 23, 25, 33], "activ": [35, 51], "ad": [27, 34, 45, 54], "add": [12, 17, 18, 21, 23, 25, 27, 31, 32, 37, 38, 42, 49, 53, 55, 56], "add_colorbar": [1, 23], "add_colorscaled_lin": [1, 23], "add_external_data": [1, 21, 49], "add_lin": [1, 23, 36, 37, 39, 41, 42, 43, 45, 53], "add_new_data_column": [1, 27], "add_procedur": [1, 12, 36, 37, 38, 39, 41, 42, 44, 45, 49], "addit": [12, 32, 49, 56], "addition": 52, "adjust": [31, 38], "after": [9, 37, 45, 47, 49, 51], "ag": 43, "against": [38, 44], "agnost": [31, 49], "ah": [9, 16, 25, 29, 36, 37, 38, 39, 41, 42, 43, 44, 45, 48, 49, 50], "akima": [7, 10], "akima_interpol": [1, 2, 10], "al": [5, 8, 36, 39], "algorithm": [4, 7, 10, 12, 40], "alia": [24, 38], "alias": 24, "align": 36, "all": [7, 8, 10, 11, 15, 27, 31, 32, 33, 35, 38, 45, 47, 49, 52], "allclos": 38, "allow": [21, 31, 33, 36, 41, 48, 55], "along": 38, "alongsid": [32, 35, 41, 42, 49, 55], "alpha": 5, "alreadi": [12, 43, 49], "also": [37, 39, 43, 44], "altern": [8, 35, 39, 43], "alwai": [32, 48], "amper": 50, "an": [4, 7, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 29, 31, 32, 37, 39, 44, 46, 47, 48, 49, 52, 54, 55], "anaconda": 51, "analys": [36, 39, 40, 42, 45, 55], "analysi": [0, 1, 33, 34, 36, 37, 38, 39, 40, 42, 43, 52, 54], "analysis_modu": 48, "analysisvalid": [1, 2, 11, 32, 33, 44], "ani": [7, 10, 11, 12, 15, 21, 25, 26, 27, 30, 31, 32, 35, 42, 44, 47, 49, 51, 52, 53, 55], "anod": [4, 32, 43], "anoth": [21, 27, 31], "anyth": 44, "api": [46, 48], "app": 51, "appear": [41, 49], "append": [7, 38], "appli": [5, 7, 8, 21, 25, 39, 47], "apply_step_correct": [13, 17], "approach": [5, 8, 36, 39, 47], "ar": [5, 7, 11, 12, 14, 15, 16, 17, 18, 19, 21, 25, 27, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55], "arang": 38, "arbin": [1, 12, 13, 50], "archiv": [1, 12, 45], "arg": [30, 32, 44], "argskwarg": 44, "argsort": 38, "argument": [7, 8, 9, 10, 21, 33, 37, 49, 53], "around": [27, 38], "arrai": [1, 7, 11, 23, 27, 32, 42, 43, 44, 47], "articl": [5, 8], "asctim": 22, "assembl": 11, "assemble_arrai": [1, 2, 11], "assert": 38, "assign": [12, 48, 49], "assum": [5, 8, 10, 12, 49, 50], "asterisk": [12, 14, 15, 16, 17, 18, 19, 31], "astyp": 38, "attribut": [27, 32, 44, 45, 47, 48, 49, 52], "auto": 50, "automat": [31, 33, 35, 37, 50, 56], "aux_temperature_1": [14, 50], "avail": [12, 41, 48, 51], "averag": [4, 7, 38], "average_differ": 38, "average_ocv": [1, 2, 7], "average_ocv_curv": [2, 3, 4], "ax1": 38, "ax2": 38, "axi": [23, 38], "axis_font_s": [1, 23], "b": 18, "back": 33, "backend": 38, "bar": 38, "base": [1, 2, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 27, 29, 30, 31, 34, 39, 44, 47, 50, 53], "base_": 44, "base_datafram": [1, 21, 25, 27, 42, 43, 44, 50], "basecycl": [1, 13, 14, 16, 17, 18, 19, 31], "basemodel": [6, 8, 9, 10, 11, 12, 15, 27, 31, 33, 44], "basytec": [1, 12, 13, 50], "bat": [17, 49, 50], "batch": 54, "batteri": [5, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 21, 31, 36, 37, 38, 39, 43, 49, 55], "bbox_to_anchor": 38, "becaus": [38, 44], "been": [12, 21, 38, 42, 48, 49], "befor": [6, 21, 49, 51, 55], "begin": [31, 36, 42, 49], "behaviour": 12, "behind": [33, 38, 44], "being": [31, 32, 38, 51], "below": [31, 38, 50, 51, 52], "benchmark": 38, "benefit": 38, "between": [4, 7, 10, 49], "bin": [5, 8, 10, 35, 51], "biolog": [1, 12, 13, 31, 49, 50], "biologic_mb": [12, 49, 50], "biologicmb": [1, 13, 17, 31], "blue": [36, 37, 38, 39, 41], "bool": [6, 7, 10, 12, 23, 27, 30], "bor": [5, 8], "bound": [7, 23, 43], "boxplot": 38, "branch": 52, "break": [36, 37, 38, 39, 41, 42, 44, 55], "break_in": 41, "breakdown": 38, "browser": 52, "buffer": 23, "build": [1, 27, 52], "built": [32, 37, 38, 43, 49, 52, 56], "c": [29, 36, 39, 42, 44, 50], "caihao": [5, 8], "calc_electrode_capac": [2, 3, 4, 32], "calc_full_cell_ocv": [2, 3, 4], "calc_full_cell_ocv_composit": [2, 3, 4], "calc_gradient_with_lean": [2, 3, 5], "calcul": [3, 4, 5, 6, 8, 9, 15, 18, 19, 25, 32, 36, 37, 44], "calculate_dma_paramet": [2, 3, 4], "call": [7, 12, 21, 25, 27, 32, 35, 37, 38, 44, 47, 48], "callabl": [7, 10, 12, 43], "can": [7, 8, 12, 21, 25, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 51, 52, 53, 55], "cap": [19, 50], "capabl": 46, "capac": [1, 4, 6, 7, 9, 13, 14, 15, 16, 17, 18, 19, 25, 29, 31, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 48, 49, 50], "capacity_from_ch_dch": [13, 15], "care": 38, "carefulli": 37, "case": [31, 41, 50], "cathod": [4, 32, 43], "caus": 33, "cc": [41, 55], "cc_charg": 41, "cc_discharg": 41, "cd": [35, 52], "cell": [0, 1, 4, 6, 7, 9, 20, 25, 27, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 52, 53, 54, 55, 56], "cell_capac": [4, 32], "cell_list": [20, 49], "ch": 43, "chain": [33, 47], "chang": [7, 15, 31, 35, 42, 50], "changyong": [5, 8], "channel": [12, 36, 37, 38, 39, 41, 42, 44, 45, 49], "characteris": 39, "charg": [1, 4, 6, 7, 14, 15, 17, 18, 19, 21, 25, 31, 36, 37, 41, 42, 47, 48, 50, 53, 55], "charge_capac": [4, 13, 15, 18, 19], "charge_curr": 4, "charge_dqdv": 36, "charge_filt": 7, "charge_numb": 21, "charge_ocv": 4, "charge_soc": 4, "chargeordischarg": [1, 21, 47], "chargeordischarge_numb": 21, "check": [11, 12, 21, 25, 32, 33, 44], "check_and_set_nam": [1, 12], "check_required_column": [1, 25], "chemistri": [36, 37, 38, 39, 41, 42, 44, 45, 49], "chen": 43, "chen2020": 43, "chg": [19, 50], "choos": [36, 45, 49, 55], "chrono": [14, 15, 18], "circuit": [4, 7, 43], "class": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 42, 43, 44, 46, 47, 48, 50, 53, 56], "classmethod": 27, "clean": [32, 45], "clean_copi": [1, 27, 32], "clearli": [32, 39], "clone": [35, 51], "coalesc": 27, "code": [32, 35, 51], "coeffici": [5, 8], "collect": [30, 49], "color": [12, 23, 36, 37, 38, 39, 41, 42, 43, 45], "color_bi": 23, "color_bound": 23, "colorbar": 23, "colormap": 23, "colorscal": 23, "column": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 27, 29, 31, 32, 33, 37, 38, 42, 44, 47, 48, 49, 54, 56], "column_definit": [1, 21, 25, 27, 32, 42], "column_dict": [12, 13, 14, 15, 16, 17, 18, 19, 31], "column_list": [1, 27, 39], "column_nam": 27, "com": [5, 8, 35], "combin": 27, "come": [6, 44], "comma": 55, "command": [33, 35, 42, 51, 52], "comment": [36, 39, 41, 42, 43], "commit": 35, "comp1_frac": 4, "compar": [10, 33, 39, 40, 45], "compat": [32, 35, 52], "complet": [31, 43, 51, 56], "compon": [4, 7], "composit": 7, "compositeocp": [1, 2, 7], "compress": [12, 38, 45], "compression_prior": [12, 38], "comput": [10, 32, 36, 38, 44, 48], "concat": [27, 38], "concat_method": 27, "concaten": [27, 31], "concept": 44, "conda": [35, 51], "condit": [10, 21, 25], "conduct": [11, 32, 43], "configur": 22, "configure_log": [0, 1, 22], "confirm": [32, 38], "conflict": [27, 35], "consid": [8, 21, 41, 55], "constant": [8, 21, 41], "constant_curr": [1, 21, 36, 41], "constant_current_numb": 21, "constant_voltag": [1, 21, 41], "constant_voltage_numb": 21, "construct": [32, 33, 41], "consum": 55, "contain": [4, 5, 6, 7, 8, 9, 10, 12, 15, 21, 23, 25, 27, 32, 41, 43, 44, 47, 48, 49, 52, 55], "contains_lazyfram": [1, 27], "content": 31, "continu": [23, 35, 52], "contribut": [33, 34, 46, 48], "control": 51, "convers": [12, 29, 31, 36, 38, 50], "convert": [12, 21, 29, 31, 40, 47, 50, 54], "copi": [27, 31, 32], "correct": [17, 32, 33, 44], "correctli": [32, 33], "correspond": [25, 29, 49, 50, 55], "coulomb": 42, "count": [5, 21, 41, 42, 47, 55], "cover": 38, "crate": [14, 15, 18], "creat": [7, 10, 20, 21, 23, 25, 27, 29, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 49, 51, 53, 56], "critic": 33, "csv": [21, 38, 49, 50], "csv_time": 38, "csv_time_panda": 38, "cubic": [7, 10], "cubic_interpol": [1, 2, 10], "cumbersom": 55, "cumsum": 38, "cumul": 38, "cumulative_tim": 38, "current": [9, 13, 14, 15, 16, 17, 18, 19, 21, 25, 29, 31, 38, 41, 42, 44, 47, 48, 50], "current_ma": [42, 47], "curv": [4, 7, 9, 10, 36, 39, 43], "custom": [33, 44], "customiz": 56, "cv": [41, 55], "cv_hold": 41, "cycl": [0, 1, 2, 7, 8, 9, 10, 11, 12, 21, 24, 25, 27, 36, 37, 38, 39, 41, 42, 44, 47, 48, 49, 50, 53, 55], "cycle_3": 41, "cycle_incr": 38, "cycle_info": [1, 21, 42, 44], "cycle_numb": 21, "cycle_rep": 38, "cycler": [0, 1, 12, 34, 36, 37, 38, 39, 41, 42, 44, 45, 54, 55], "cycler_fil": 49, "cycler_file_": 49, "cycler_file_1": 49, "cycler_file_2": 49, "cycles_and_step": 30, "cycling_summari": 42, "d": [14, 18, 32, 36, 39, 43], "dai": 38, "dash": [23, 39, 43], "dashboard": [0, 1, 42, 51], "dashdot": 23, "data": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 29, 30, 31, 32, 33, 36, 38, 40, 43, 44, 48, 51, 52, 53, 54, 55], "data_directori": [36, 37, 38, 39, 41, 42, 44, 45], "data_list": 27, "datafram": [10, 15, 16, 17, 18, 19, 21, 23, 25, 27, 31, 32, 33, 38, 42, 43, 44, 47], "dataframe_list": [15, 17], "datapoint": 8, "dataset": [36, 38, 39, 41, 44, 49], "datatyp": 50, "date": [13, 14, 15, 16, 17, 18, 19, 21, 27, 31, 36, 37, 39, 42, 44, 45, 49, 50], "date_column_nam": [21, 27], "datetim": [21, 42, 49, 50], "datetime_format": [13, 14, 15, 16, 17, 18, 19], "dchg": [19, 50], "dchg_before_chg": 6, "deal": 44, "debug": 32, "declar": [31, 32, 43, 44], "decor": [32, 33], "decreas": [15, 21, 50], "def": [32, 38, 43, 44, 49], "default": [6, 7, 8, 10, 12, 19, 21, 22, 25, 27, 29, 38, 49, 50], "default_layout": [1, 23], "default_tim": 38, "defin": [3, 15, 25, 27, 30, 31, 32, 37, 43, 44, 49, 55], "define_column": [1, 27], "definit": [25, 27, 32], "degrad": [4, 7, 38, 39, 43, 49], "degradation_mode_analysi": [1, 2, 43], "degradation_mode_analysis_funct": [2, 3, 32], "delai": 38, "delta": [5, 8, 25], "demonstr": [33, 37, 38, 44, 45], "depend": [8, 10, 34, 35, 48], "deriv": 10, "describ": [8, 27, 32, 39, 42, 45, 49, 52, 55], "descript": [25, 41, 42, 49, 55], "design": [47, 48], "desir": 10, "desktop": 51, "detail": [21, 44, 49, 55, 56], "determin": [7, 10], "dev": [35, 44], "develop": [35, 36, 43, 46, 48, 52], "df": [17, 38], "diagnosi": [5, 8, 36, 39], "diagon": 27, "dict": [7, 12, 14, 15, 16, 17, 18, 19, 21, 25, 26, 27, 29, 30, 31, 44, 49], "dictionari": [7, 12, 14, 15, 16, 17, 18, 19, 21, 25, 27, 29, 30, 31, 32, 42, 44, 47, 49, 52, 56], "differ": [8, 10, 32, 39, 42, 44, 49, 55], "differenti": [1, 2, 5, 32, 40, 43, 44, 45, 48], "differential_evolut": [7, 43], "differentiate_fd": [2, 8], "differentiate_lean": [1, 2, 8, 36, 39], "differentiation_funct": [2, 3], "dimension": 47, "direct": 48, "directli": [25, 43, 47, 51], "directori": [12, 35, 49, 51], "discharg": [1, 4, 6, 7, 14, 15, 17, 18, 19, 21, 31, 36, 37, 38, 39, 41, 42, 44, 47, 50, 55], "discharge_capac": [4, 13, 15, 18, 19], "discharge_curr": 4, "discharge_dqdv": 36, "discharge_filt": 7, "discharge_numb": 21, "discharge_ocv": 4, "discharge_soc": 4, "discret": [5, 8, 23, 36, 39], "displai": [20, 52, 53], "distinguish": [49, 56], "dma": [4, 7, 43], "do": [12, 31, 49, 51], "doc": [35, 42, 44, 52], "document": [14, 15, 18, 27, 32, 36, 39, 41, 42, 43, 48, 53, 54, 55], "doe": [25, 31, 36, 37, 39, 42, 44, 45, 49], "doesn": 37, "doi": [5, 8, 36, 39, 43], "done": [31, 32, 35, 49], "dongsheng": [5, 8], "dot": 23, "down": [9, 41], "downsampl": [1, 2, 10, 39], "downsampled_data": 39, "downsampled_data_dvdq": 39, "dpt": [18, 50], "dqdv": [7, 43], "dropdown": 51, "dsocdv": 43, "dtype": [4, 7, 11], "due": [38, 39], "dva": 39, "dvdq": 7, "dx": 8, "dxdy": [5, 8, 36, 39], "dy": [5, 8], "dydx": [5, 8], "e": [7, 12, 23, 31, 35, 43, 44, 47, 49, 50, 55], "each": [7, 9, 10, 31, 49, 55], "easi": [32, 49, 52], "easiest": 51, "easili": [32, 39], "ecel": [17, 31, 50], "edit": [35, 51], "effect": 39, "effici": [10, 42], "either": [5, 8, 19, 25, 35, 38, 47], "elaps": [42, 50], "electrochem": 43, "electrod": [4, 7, 32, 43], "enabl": 55, "encourag": 32, "end": [21, 31, 33, 41, 55], "enough": [32, 44], "ensur": [31, 32, 33, 44], "enter": 35, "entir": 41, "enumer": 38, "environ": [35, 42, 51], "error": [25, 32, 33, 36, 37, 39, 42, 44, 45, 48, 55], "et": [5, 8, 36, 39], "etc": [32, 47, 49], "etran": [5, 8, 36, 39], "etransport": [5, 8, 36, 39], "eval": [2, 7], "evalu": [8, 9, 33, 37], "evenli": 8, "event": [13, 15, 21, 25, 36, 37, 38, 39, 42, 44, 45, 50], "event_incr": 38, "event_rep": 38, "everi": [27, 47], "exampl": [8, 31, 32, 33, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 48, 49, 51, 55, 56], "excel": [12, 21, 38, 49, 56], "except": 38, "execut": [33, 38], "exist": [12, 19, 27, 31, 32, 42, 44, 48], "exp": 43, "experi": [0, 1, 6, 7, 8, 9, 10, 11, 12, 21, 24, 25, 26, 36, 37, 38, 39, 41, 42, 44, 47, 48, 49, 53, 54, 55], "experiment": [5, 8, 10, 21, 39, 43, 47, 48, 49, 52, 55, 56], "experiment_fold": 49, "experiment_nam": [1, 12, 21, 37], "experiment_object": 44, "experiment_record": 49, "experimentorcycletyp": [0, 1, 24], "explor": [39, 46], "expr": [7, 15, 18, 19, 21, 29], "express": [7, 15, 18, 19, 21, 29, 33, 43], "extend": [1, 27], "extens": [31, 55], "extern": [21, 35], "extra": 35, "extract": [31, 37, 41], "f": [14, 32, 38, 49], "f64": [37, 42, 43], "factor": [29, 38], "factori": [12, 21, 25, 27], "fals": [7, 10, 12, 27, 38], "familiar": 47, "faster": [10, 38], "fastest": 49, "fb": 43, "feng": [5, 8, 36, 39], "few": 38, "ff00ff": [42, 45], "field": [6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 25, 27, 32, 42, 45, 49], "fig": [1, 23, 36, 37, 38, 39, 41, 43, 45], "figsiz": 38, "figur": [23, 38, 42, 43], "file": [12, 15, 16, 17, 18, 19, 21, 22, 25, 26, 31, 38, 41, 42, 44, 45, 47, 50, 54, 56], "file_s": 38, "filenam": [12, 36, 37, 38, 39, 41, 42, 44, 45, 49], "filename_funct": 12, "filename_input": [12, 49], "filepath": [15, 16, 17, 18, 19, 21], "fill": [27, 49], "fillna": 38, "filter": [0, 1, 7, 8, 9, 10, 12, 24, 25, 27, 33, 36, 37, 38, 40, 44, 45, 48, 49, 50, 52, 54, 55], "filtering_column_nam": 27, "filtertocycletyp": [0, 1, 21, 24], "filtertoexperimenttyp": [0, 1, 21, 24], "filtertosteptyp": [0, 1, 24], "final": [33, 37, 38], "final_cycl": [36, 39], "finit": [8, 32, 39, 44], "first": [4, 7, 9, 10, 18, 21, 25, 27, 35, 36, 37, 39, 42, 43, 44, 45, 47, 49, 53, 55], "fit": [4, 7, 10, 40, 45], "fitted_curv": 43, "fitting_target": [4, 7, 43], "fitting_target_data": 4, "fix": 25, "flag": 35, "flatten": 30, "flatten_list": [0, 1, 30], "float": [4, 5, 8, 9, 10, 12, 21, 23, 25, 27, 29, 32], "float64": [4, 5, 7, 10, 11, 23, 27, 50], "flowchart": 52, "fly": 36, "folder": [12, 45, 49], "folder_path": [12, 36, 37, 38, 39, 41, 42, 44, 45, 49], "follow": [17, 31, 32, 33, 35, 44, 49, 50, 51, 52, 55, 56], "font": 23, "fontsiz": 38, "fork": 35, "form": [7, 31, 32], "format": [12, 14, 15, 16, 17, 18, 19, 21, 22, 25, 31, 32, 35, 38, 40, 44, 51, 54], "found": 33, "frac": 8, "fraction": 4, "framework": 33, "from": [7, 9, 10, 11, 12, 15, 17, 18, 19, 21, 26, 27, 29, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 48, 50, 51, 52, 54, 55], "from_data": [2, 7, 43], "from_default_unit": [1, 29], "from_express": [2, 7, 43], "full": [4, 7, 37, 43, 47], "full_procedur": 41, "function": [3, 4, 5, 7, 8, 10, 12, 13, 20, 23, 26, 30, 31, 33, 34, 39, 41, 42, 43, 44, 48, 49], "functool": 44, "further": [25, 32, 41, 42, 44, 48, 52], "g": [12, 23, 31, 44, 49], "gastol": 43, "gener": [12, 23, 43, 48, 49, 50, 52, 55], "get": [1, 5, 27, 30, 38, 40, 44, 45, 46, 47, 51], "get_cycle_column": [0, 1, 21], "get_data_dict": [1, 30], "get_dx": [2, 3, 5], "get_dy_and_count": [2, 3, 5], "get_imported_datafram": [13, 15, 17, 31], "get_ocv_curv": [1, 2, 9], "get_onli": [1, 27], "get_resist": [1, 2, 9, 37], "get_x_sect": [2, 3, 5], "getsiz": 38, "git": [35, 51], "github": [35, 51], "gitt": [40, 45], "give": [12, 39], "given": [7, 49, 55], "go": [23, 31, 36, 37, 39, 43], "golai": 10, "good": [32, 51], "grad": [2, 7], "gradient": [1, 2, 5, 7, 8, 10, 32, 36, 39, 44, 48], "gradient_data": 32, "gradient_result": 32, "gradient_titl": 32, "graphit": 43, "graphite_lgm50_ocp_chen2020": 43, "green": [39, 41], "gregori": [5, 8], "group": 35, "gt": [38, 42, 44], "guarante": [10, 35], "guess": [4, 7], "guid": [31, 35, 46, 48, 52], "guidanc": [49, 54], "h": [14, 29], "ha": [27, 32, 38, 39, 42, 43, 44, 47, 49, 51, 53], "half": [4, 7, 43], "han": [5, 8], "hand": 38, "handler": 22, "happen": 44, "have": [12, 21, 31, 32, 38, 43, 47, 48, 49], "he": [5, 8, 36, 39], "head": 31, "header": [31, 50], "health": 6, "height": 23, "hello": 51, "help": [44, 56], "here": [32, 44], "hi": 7, "high": [7, 43], "higher": 7, "highest": [4, 32], "highli": 55, "hint": 24, "hold": [25, 27, 41, 42, 43, 47, 55], "hook": 35, "horizont": 27, "hour": [41, 42, 44, 50, 55], "how": [7, 27, 36, 44, 46, 52], "howev": [31, 37, 44], "hr": [29, 36, 37, 39, 45], "html": 52, "http": [5, 8, 35, 36, 39, 43, 44], "huang": [5, 8], "human": 55, "i": [5, 6, 7, 8, 9, 10, 12, 16, 17, 18, 19, 21, 22, 25, 27, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56], "i64": 42, "ica": 39, "identifi": [15, 18, 19, 21, 38, 44, 49, 50, 55], "illustr": 38, "imag": 23, "immedi": 42, "imperialcollegelondon": 35, "implement": [38, 48], "import": [12, 13, 15, 17, 21, 31, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 51, 54, 55], "import_and_validate_data": [13, 14, 15, 16, 17, 18, 19], "import_pybamm_solut": [1, 12], "importing_column": 21, "includ": [8, 9, 12, 27, 31, 32, 37, 47, 49, 50, 55, 56], "inclus": [21, 41, 55], "incorrect": 48, "incorrect_data_dict": 44, "incorrect_datafram": 44, "increas": [15, 17, 38, 50, 55], "increment": [38, 39], "index": [14, 19, 27, 31, 41, 47, 50, 52, 55], "indic": [7, 12, 14, 15, 16, 17, 18, 19, 21, 27, 31, 47], "individu": [37, 42, 47], "info": [1, 12, 21, 25, 27, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 49, 52, 56], "info_dictionari": [36, 37, 38, 39, 41, 42, 44, 45, 49], "inform": [12, 14, 15, 18, 21, 27, 29, 32, 43, 44, 49, 55, 56], "inherit": [31, 33, 44], "initi": [4, 7, 37, 38, 41, 42, 55], "initial_charg": 41, "initialis": 51, "inlin": 38, "inner": [21, 27, 55], "input": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 32, 33, 40, 43, 45, 52, 54], "input_data": [2, 6, 7, 8, 9, 10, 11, 25, 32, 36, 37, 39, 42, 43, 44, 48], "input_data_list": 7, "input_data_path": [13, 14, 15, 16, 17, 18, 19, 31], "input_filenam": [12, 38, 42, 49], "input_name_gener": 49, "input_quant": 29, "input_typ": 44, "input_unit": 29, "input_valu": 44, "insid": [32, 35], "instal": [34, 43, 54], "instanc": [11, 29, 32, 37, 43, 44, 49, 53, 55], "instead": [32, 36, 38, 55], "instruct": [37, 41, 50, 51, 55], "int": [4, 5, 7, 8, 9, 10, 11, 12, 21, 22, 25, 26, 27, 38], "int64": 50, "integ": [5, 8, 10], "integr": [35, 48], "intens": 38, "interact": [33, 36, 39, 41, 42, 43], "interfac": [30, 47], "intern": 48, "interpol": [7, 10, 21, 27, 49], "interpolation_method": 7, "interpret": [21, 49], "interv": [5, 8, 10], "introduct": [46, 54], "inventori": [4, 32, 43], "ion": 43, "ipynb": 45, "ipywidget": 43, "is_instance_of": 44, "isin": 38, "isn": 44, "item": 7, "ith": 7, "its": [31, 32, 35, 38, 41, 49, 55], "j": [5, 8, 36, 39], "jin": [5, 8], "join": [1, 27], "journal": 43, "json": 45, "jupyt": 51, "just": [8, 31, 55], "k": [5, 8, 29, 36, 39, 43], "keep": [32, 56], "kei": [9, 12, 21, 27, 37, 42, 43, 49, 56], "kendrick": 43, "keyword": [49, 55], "know": 44, "kwarg": [10, 30, 44], "label": [23, 36, 37, 38, 39, 41, 43], "lam_n": [4, 7], "lam_p": [4, 7], "languag": [41, 47], "languang": [5, 8], "larg": [31, 38], "last": [10, 21, 36, 38, 39, 44, 55], "later": [35, 51], "latest": 44, "launch": [20, 42, 51], "launch_dashboard": [0, 1, 20, 42], "layout": [23, 38], "laz": 44, "lazi": [33, 38], "lazyfram": [15, 16, 17, 18, 19, 21, 25, 27, 33, 42, 44], "lean": [8, 39, 40, 45], "lean_dqdv": 39, "learn": 46, "least": 7, "left": 7, "legend": [23, 38], "len": 38, "length": [7, 10, 21, 38], "less": 47, "level": [8, 22, 39, 44, 48], "level_smooth": [2, 10], "levelnam": 22, "li": [5, 8, 43], "li_inventori": [4, 32], "liaw": [5, 8, 36, 39], "lib": 44, "librari": [37, 38], "life": 49, "light": 8, "like": [31, 32, 33, 41, 44, 49, 50], "limit": [4, 7, 43, 55], "line": [16, 23, 44, 50, 51, 53, 55], "linear": [7, 10], "linear_interpol": [1, 2, 10], "linestyl": 38, "link": 7, "link_result": 7, "linspac": 43, "linux": 51, "list": [5, 7, 8, 9, 11, 12, 15, 17, 20, 21, 23, 25, 26, 27, 30, 31, 37, 38, 41, 49, 51, 55, 56], "listdir": 45, "liter": [7, 10, 12], "lithium": [4, 32, 43], "littl": 32, "liu": [5, 8], "ll": 37, "lli": [4, 7], "lo": 7, "load": [12, 14, 15, 16, 17, 18, 19, 21, 25, 31, 42], "load_arch": [0, 1, 12, 45], "load_external_fil": [1, 21], "loc": 38, "local": [35, 42, 44, 52], "lock": 35, "log": [22, 38], "log_fil": 22, "log_scal": 38, "logger": [0, 1], "longest": 8, "look": [36, 39, 50, 55], "loop": [6, 10, 41, 55], "low": [7, 43], "lowest": [4, 32], "lst": 30, "lt": [38, 42, 44], "lu": [5, 8], "lz4": 12, "m": [14, 18, 29, 35, 36, 39, 51], "ma": [41, 42, 47, 55], "mac": 51, "maccor": [1, 12, 13, 50], "machin": 35, "made": 38, "mah": 36, "mai": [12, 31, 44, 48, 49], "main": [27, 33, 35, 41, 44, 49, 52], "make": [12, 31, 35, 45, 46, 52, 54], "make_boxplot": 38, "make_cell_list": [0, 1, 12, 49], "make_colorscal": [1, 23], "manag": 51, "mani": 44, "manipul": [32, 33], "manner": 7, "manual": 38, "manufactur": 49, "map": [12, 14, 15, 16, 17, 18, 19], "mark": 50, "marker": 38, "match": [7, 29, 36, 37, 38, 39, 42, 44, 45, 49], "mathemat": 32, "matplotlib": [38, 43], "matrix": 8, "max": 38, "maximum": [17, 21, 25], "mb": [17, 38], "mean": [33, 35, 41, 49], "measur": [38, 50], "measure_panda": 38, "measure_pyprob": 38, "mechan": 35, "median": [9, 38], "median_total_time_idx_panda": 38, "median_total_time_idx_pyprob": 38, "median_total_time_panda": 38, "median_total_time_pyprob": 38, "mengchao": [5, 8], "menu": 51, "merla": [5, 8, 36, 39], "messag": [22, 32], "met": 10, "metadata": [45, 52], "method": [2, 7, 8, 10, 12, 17, 21, 25, 27, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 47, 48, 49, 52], "method_paramet": 48, "metric": 37, "middl": 10, "midpoint": 5, "might": [33, 50], "min": 29, "minggao": [5, 8], "minim": [7, 43], "minimum": 10, "minut": [41, 42, 55], "miss": [11, 27, 43, 44], "mode": [4, 7, 35, 43], "model": [6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 25, 27, 33, 43, 44, 49], "model_typ": 44, "model_valid": 44, "modifi": [25, 31], "modul": [0, 1, 2, 3, 13, 31, 33, 34, 36, 40, 42, 46, 47, 48, 52, 53], "modulo": [17, 49, 50], "modulobat": 31, "monoton": [10, 17], "more": [10, 14, 15, 18, 27, 32, 44, 47, 49], "most": [31, 33, 38, 44, 48, 55], "mpt": [49, 50], "much": [38, 44], "multi": 43, "multipl": [5, 7, 8, 12, 31, 33, 38, 39, 42, 47, 54, 55, 56], "must": [7, 10, 12, 21, 27, 35, 37, 38, 42, 43, 49, 51, 55], "n": [7, 17, 29, 31, 35, 44, 47, 50, 51], "n_pt": 43, "n_repeat": 38, "name": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 25, 27, 29, 32, 36, 37, 38, 39, 41, 42, 44, 45, 47, 49, 50, 53, 55, 56], "natur": [41, 47], "navig": 52, "ndarrai": [4, 5, 7, 10, 11, 23, 27, 32, 42, 44], "ne_capac": [4, 32], "ne_stoich_limit": 4, "neccessari": [32, 44], "necessari": [32, 43], "need": [31, 32, 38, 51, 56], "neg": [7, 18, 19, 43], "neg_ocp": 43, "nest": [21, 55], "net": [25, 42], "never": 44, "new": [9, 25, 27, 31, 38, 51], "new_column_definit": 25, "new_column_nam": 25, "new_data": 27, "newar": [1, 12, 13, 14, 18, 36, 37, 38, 39, 41, 42, 44, 45, 49, 50, 55], "next": 7, "nmc": 43, "nmc622": [36, 37, 38, 39, 41, 42, 44, 45, 49], "nmc_lgm50_ocp_chen2020": 43, "nois": 39, "noisi": [8, 10], "nomin": [36, 37, 38, 39, 41, 42, 44, 45, 49], "non": 10, "none": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 30], "normal": [38, 42, 43, 44, 49], "notat": 47, "note": [31, 35], "notebook": [43, 51], "notic": 44, "now": [38, 39, 43], "np": [4, 5, 7, 10, 11, 23, 27, 32, 36, 38, 39, 41, 43, 44], "null": 42, "number": [9, 12, 15, 17, 21, 25, 31, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 55], "numer": [21, 47], "numpi": [8, 27, 32, 36, 38, 39, 41, 42, 43, 44, 47], "o": [38, 43, 45], "object": [6, 7, 8, 9, 10, 12, 20, 21, 23, 25, 26, 27, 29, 32, 36, 37, 39, 41, 42, 43, 44, 45, 48, 52, 53, 54], "occur": 44, "occurr": 10, "ocp": [1, 2, 4, 7, 43], "ocp_c1": 4, "ocp_c2": 4, "ocp_comp1": 7, "ocp_comp2": 7, "ocp_funct": 7, "ocp_list": 7, "ocp_n": [4, 7, 43], "ocp_p": [4, 7, 43], "ocp_vector": 7, "ocv": [4, 7, 9, 36, 37, 39, 40, 45], "ocv_curve_fit": [2, 3, 4], "ocv_result": 43, "odd": 10, "offer": [5, 8, 39], "often": 32, "ohm": [9, 29, 37], "omit": 44, "onc": [31, 35, 38, 42, 48, 49, 50, 52], "one": [27, 31, 38, 44, 47, 55], "onli": [10, 31, 32, 33, 37, 38, 44, 49, 56], "onto": 35, "open": [4, 7, 41, 43, 51, 52], "oper": [25, 48], "optim": [4, 7, 38, 43], "optimizer_opt": [7, 43], "option": [7, 8, 10, 12, 18, 19, 21, 25, 26, 27, 38], "optional_vari": 12, "order": [7, 10, 49, 51], "org": [5, 8, 36, 39, 43], "origin": [38, 42], "other": [12, 25, 27, 44, 48, 53], "otherwis": [10, 27], "our": [37, 38, 43], "out": [36, 37, 39, 41, 42, 43, 55], "outer": [21, 55], "output": [43, 49], "output_data_path": 12, "output_filenam": [12, 38, 42, 49], "output_name_gener": 49, "outsid": 42, "ouyang": [5, 8, 36, 39], "overal": 38, "overhead": 38, "overrid": 31, "overwrite_exist": 12, "overwritten": 12, "own": [31, 35, 41, 49, 55], "p": [18, 29], "packag": [0, 22, 32, 35, 36, 39, 43, 44, 51], "pair": 49, "panda": 38, "pandas_tim": 38, "pandas_voltag": 38, "paper": [5, 8], "parallel": 7, "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 32, 37], "parameter": 43, "parametr": 49, "parquet": [12, 21, 36, 37, 38, 39, 41, 42, 44, 45, 49], "pars": 31, "part": [42, 48, 55], "particular": [7, 44, 52], "particularli": 55, "pass": [25, 32, 33, 42, 47, 48, 50], "patch_artist": 38, "patel": [5, 8], "path": [12, 14, 15, 16, 17, 18, 19, 21, 26, 35, 38, 45, 49], "pattern": [29, 36, 37, 39, 42, 44, 45, 49], "pchip": [7, 10], "pchip_interpol": [1, 2, 10], "pd": 38, "pe_capac": [4, 32], "pe_stoich_limit": 4, "peng": [5, 8], "perform": [12, 21, 27, 31, 32, 33, 40, 44, 45, 48, 49], "period": 38, "perman": 25, "pii": [5, 8], "ping": [5, 8], "pip": [35, 43, 51], "pl": [15, 16, 17, 18, 19, 21, 25, 27, 29, 32, 38, 43, 44], "place": 51, "planella": 43, "plot": [0, 1, 33, 36, 37, 38, 39, 41, 42, 43, 45, 48, 49, 52, 54, 56], "plotli": [23, 53], "plt": [38, 43], "point": [8, 9, 10, 23, 32, 37, 42, 43], "polar": [15, 18, 19, 21, 27, 34, 38, 43, 44, 47, 50], "polynomi": 10, "polynomial_ord": 10, "polyord": 10, "poor": 39, "popul": 49, "popular": [38, 39, 51], "portabl": 32, "pos_ocp": 43, "posit": [7, 10, 18, 19, 43], "possibl": [32, 35, 47], "potenti": [4, 7], "power": 41, "ppoli": 7, "pre": 35, "preced": 27, "prefix": 29, "prefix_dict": [1, 29], "preprocess": [20, 54], "presenc": 25, "present": [11, 12, 14, 15, 18, 25, 44], "prevent": 44, "previou": [7, 17, 41, 55], "previous": [10, 49], "principl": 33, "print": [27, 33, 37, 38, 39, 41, 42, 43, 44, 45, 49], "print_definit": [1, 27], "prior": 39, "prioriti": [12, 38], "prioritis": 38, "problem": 44, "procedur": [0, 1, 6, 7, 8, 9, 10, 11, 12, 21, 24, 36, 37, 38, 39, 41, 42, 44, 45, 47, 49, 52, 53, 55], "procedure_nam": [12, 36, 37, 38, 39, 41, 42, 44, 45, 49], "process": [14, 15, 16, 17, 18, 19, 26, 31, 32, 38, 45, 47, 49, 50, 51, 52], "process_cycler_fil": [1, 12, 38, 42, 49], "process_generic_fil": [1, 12], "process_readm": [0, 1, 26], "processed_cycler_fil": 49, "processed_cycler_file_": 49, "processed_cycler_file_cycl": 49, "processed_cycler_file_rpt": 49, "produc": [12, 43, 52], "program": 50, "prompt": 51, "properti": [7, 11, 15, 18, 19, 21, 23, 25, 27, 31, 42], "protocol": [30, 49], "provid": [7, 8, 9, 12, 21, 25, 27, 32, 33, 37, 40, 41, 42, 45, 48, 49, 50, 55], "pseudo": [36, 39], "puls": [1, 2, 37, 41, 42, 55], "pulse_numb": 9, "pulse_object": 37, "pulse_resist": 37, "pulse_rest": [2, 9], "pulse_summari": [2, 9], "pulsing_experi": 37, "purpl": 41, "purpos": 55, "put": 43, "py": [43, 44], "pybamm": [12, 25, 26, 30, 41, 55], "pybamm_experi": [1, 25], "pybamm_solut": 12, "pybammsolut": [0, 1, 30], "pydant": [6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 25, 27, 31, 32, 34, 44], "pydantic_cor": 44, "pyplot": [38, 43], "pyprb": 26, "pyprob": [31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 51, 53, 54, 56], "pyprobe_datafram": [13, 15], "pyprobe_tim": 38, "pyprobe_typ": [0, 1], "pyprobe_voltag": 38, "pyprobedatatyp": [0, 1, 24, 32], "pyproberawdatatyp": [0, 1, 24], "pytest": 44, "python": [35, 41, 47, 51], "python3": 44, "q": [17, 31, 50], "quantifi": 7, "quantify_degradation_mod": [1, 2, 7], "quantiti": [1, 27, 29, 44, 53], "queri": 38, "quickli": [41, 42], "r": [5, 8, 35, 41], "r0": [9, 37], "r_10": 37, "r_time": [9, 37], "rais": [5, 11, 25, 27], "rang": [21, 23, 38, 43], "rate": 8, "raw": [24, 39, 42], "raw_data_dvdq": 39, "rawdata": [0, 1, 7, 8, 9, 10, 11, 21, 24, 33, 40, 50, 53, 54], "re": [31, 36, 38, 39, 44], "read": [12, 15, 16, 17, 18, 19, 31, 32, 38, 41, 48], "read_csv": 38, "read_fil": [13, 15, 16, 17, 18, 19, 31], "read_parquet": 38, "readabl": [32, 55], "reader": 49, "readm": [12, 21, 25, 26, 41, 47, 49, 54], "readme_dict": [1, 21, 26, 42], "readme_nam": 12, "readme_path": 26, "readme_processor": [0, 1], "readmemodel": [0, 1, 26], "real": 55, "reason": 37, "recent": 44, "recogn": 31, "recommend": [32, 35, 51, 55], "record": [12, 49, 54], "record_filepath": [12, 49], "red": [36, 37, 38, 39, 41, 43], "reduc": 31, "refer": [5, 8, 25, 37, 49], "referenc": 25, "reference_capac": 25, "reference_charg": [25, 37], "reflect": [12, 35], "regan": 43, "regular": 29, "regular_express": 29, "rel": [25, 50], "relat": [31, 56], "releas": 52, "reliabl": [5, 8, 35, 36, 39], "remain": [7, 25, 32], "remov": [18, 19, 21, 27, 38, 39], "remove_experi": [1, 21], "ren": [5, 8], "renam": 21, "rep_csv_time_panda": 38, "rep_median_total_time_idx_panda": 38, "rep_median_total_time_idx_pyprob": 38, "rep_median_total_time_panda": 38, "rep_median_total_time_pyprob": 38, "rep_pandas_tim": 38, "rep_pandas_voltag": 38, "rep_pyprobe_tim": 38, "rep_pyprobe_voltag": 38, "rep_total_time_panda": 38, "rep_total_time_pyprob": 38, "repeat": [38, 50, 55], "repeated_data": 38, "replac": [32, 38], "repositori": [32, 35, 51, 52], "repres": [5, 9, 21], "request": [33, 38, 44], "requir": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 25, 27, 30, 31, 32, 35, 37, 38, 42, 44, 45, 48, 49, 50, 56], "required_column": [2, 11, 32, 44], "required_typ": [32, 44], "resampl": 10, "reset": 47, "resist": [9, 29, 37], "respect": [7, 8, 10, 32], "rest": [1, 9, 21, 32, 41, 42, 47, 55], "rest_0": 41, "rest_1": 41, "rest_numb": [9, 21], "restart": 43, "result": [0, 1, 6, 7, 8, 9, 10, 11, 12, 23, 24, 25, 32, 33, 35, 37, 38, 39, 42, 43, 44, 47, 48, 52, 53], "retriev": [7, 32, 38, 41, 44, 45, 47], "return": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 32, 38, 42, 43, 44, 47, 48, 49], "rich": 43, "rig": 12, "right": 38, "rmtree": 45, "root_fold": 49, "rpt": 49, "rst": 45, "ruih": [5, 8], "run": [7, 12, 35, 38, 42, 43, 49, 51, 52, 56], "run_batch_dma_parallel": [1, 2, 7], "run_batch_dma_sequenti": [1, 2, 7], "run_ocv_curve_fit": [1, 2, 7, 43], "s2590116820300084": [5, 8], "safe": 35, "sai": 44, "sake": [36, 39, 41, 42, 43], "same": [7, 10, 12, 25, 31, 38, 42, 49, 55], "sampl": [5, 8, 10, 36, 37, 38, 39, 41, 42, 44, 45, 49], "sample_arch": 45, "sample_data": [36, 37, 38, 39, 41, 42, 44, 45], "sample_data_newar": [36, 37, 38, 39, 41, 42, 44, 45], "sample_data_neware_rep": 38, "sampling_interv": [10, 39], "santhanagopalan": [5, 8], "save": [38, 49], "saved_cel": 45, "savgol_smooth": [1, 2, 10], "savitzki": 10, "scalabl": 38, "scale": [23, 43], "scene": [33, 44], "scienc": [5, 8], "sciencedirect": [5, 8], "scipi": 10, "script": [20, 51], "sec": [18, 50], "second": [7, 9, 27, 38, 41, 42, 43, 49, 53, 55], "secondari": 23, "secondary_i": 23, "section": [5, 8, 41, 48, 49, 50, 52, 55], "see": [14, 15, 18, 27, 44, 46, 48, 49, 53], "select": [10, 38, 41, 47, 48, 51], "self": 44, "self_inst": 44, "separ": [27, 37, 41, 55], "seper": [41, 55], "sequenti": 7, "seri": [27, 49], "serial": 55, "server": 43, "set": [12, 25, 31, 33, 35, 36, 38, 43, 44], "set_reference_capac": [1, 25], "set_soc": [1, 25, 37], "set_titl": 38, "set_vis": 38, "set_ylabel": 38, "set_yscal": 38, "setup": 56, "shape": [37, 38, 42, 43, 44], "share": 40, "sharei": 38, "shift": 38, "short_nam": 30, "shortcut": 54, "should": [25, 31, 32, 44, 51, 55], "show": [1, 23, 36, 38, 39, 41, 42, 43, 45, 53], "show_imag": [1, 23, 36, 37, 39, 41, 42, 43], "showflier": 38, "showlegend": 23, "shriram": [5, 8], "shutil": 45, "si": 29, "simpl": [32, 45, 47, 48], "simplest": 31, "simpli": [3, 31, 32, 47], "simplifi": 32, "sinc": [42, 43], "singl": [7, 12, 15, 18, 19, 27, 30, 35, 45, 49, 50, 55], "site": 44, "size": [5, 8, 10, 12, 23, 38], "skip": [12, 35, 41, 55], "slice": 5, "smooth": [1, 2, 5, 8, 32, 39, 44], "smooth_gradi": [2, 3, 5], "smoothing_filt": 8, "smoothing_lambda": [10, 39], "so": [17, 25, 33, 35, 36, 38, 39, 41, 42, 44, 47, 49, 55], "soc": [4, 7, 9, 25, 32, 37, 43], "societi": 43, "softwar": 51, "soh": [4, 6, 7, 42], "solid": 23, "solut": [12, 30], "some": [31, 41, 42, 44, 45, 49, 55], "someth": 49, "sometim": 31, "sourc": [21, 31, 35, 49, 51], "space": [5, 8], "special": 47, "specif": [25, 31, 44, 48, 52], "specifi": [10, 25, 27, 32, 44, 47], "speed": [38, 49], "spline": [10, 39], "spline_smooth": [1, 2, 10, 39], "spline_smoothed_data": 39, "spline_smoothed_data_dvdq": 39, "split": [5, 41], "stacklevel": 44, "stage": 52, "standard": [25, 31, 32, 40, 44, 49, 50], "start": [21, 31, 40, 41, 44, 45, 50, 51, 55], "start_tim": 38, "state": [6, 37, 39], "static": [7, 15, 16, 17, 18, 19, 23], "statist": 9, "step": [0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 55], "step_descript": [1, 21, 25, 42], "step_incr": 38, "step_numb": 21, "step_rep": 38, "still": 41, "sto": 43, "stoichiometri": [4, 7, 32, 43], "stoichiometry_comp1": 7, "stoichiometry_comp2": 7, "stoichiometry_limit": 43, "stoichiometry_limits_list": 7, "storag": 33, "store": [27, 29, 32, 35, 41, 44, 45, 49, 50, 52, 55], "str": [4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 38], "straightforward": 45, "streamlit": [20, 51], "strength": 41, "strict": [32, 44], "stricter": 25, "string": [12, 14, 15, 18, 25, 31, 41, 44, 47, 49, 55], "structur": [54, 55], "studio": 51, "style": 23, "subclass": 25, "submodul": [0, 32], "subpackag": 0, "subplot": 38, "subsequ": 21, "summari": [1, 2, 6, 9, 37, 42], "summaris": [9, 50, 52], "support": [21, 44, 49, 51, 54], "sympi": [7, 43], "sympy_express": 7, "sync": 35, "syntax": 55, "synthet": 43, "system": 35, "t": [37, 38, 44], "t1": [16, 19, 50], "tabl": 50, "take": [10, 18, 27, 37], "taken": [10, 50], "tanh": 43, "target": [4, 7, 10], "target_column": [10, 39], "techniqu": 43, "tell": 44, "temp": [18, 50], "temperatur": [13, 14, 15, 16, 17, 18, 19, 29, 42, 44, 50], "templat": 23, "tempt": 32, "termin": [42, 51], "test": [12, 14, 18, 27, 35, 36, 37, 38, 39, 41, 42, 44, 45, 49, 50, 55], "test_csv": 38, "testabl": 32, "text": 43, "than": [25, 38, 44, 47], "thei": [12, 17, 32, 42, 44, 49], "them": [21, 31, 41, 43, 46, 48, 49], "therefor": [44, 47, 55], "thi": [7, 8, 10, 12, 17, 18, 19, 21, 25, 27, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 54, 55], "third": [41, 53], "three": 41, "through": [10, 31, 33, 42], "throughout": [33, 49], "throughput": 42, "tick_label": 38, "tickfont": 23, "tight_layout": 38, "time": [9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 25, 27, 29, 31, 36, 37, 38, 39, 41, 42, 44, 45, 49, 50, 53, 55], "time_column": 10, "time_incr": 38, "time_rep": 38, "time_unit_dict": [1, 29], "timeit": 38, "timeseri": 49, "timestamp": [21, 42, 50], "titl": [23, 26, 41, 55], "title_font_s": [1, 23], "to_default_unit": [1, 29], "togeth": 33, "too": [42, 55], "tool": [35, 44], "top": 44, "total": [19, 38, 55], "total_time_panda": 38, "total_time_pyprob": 38, "traceback": 44, "track": 56, "treat": 55, "true": [6, 10, 12, 23, 27, 30, 38, 44], "try": 44, "tupl": [4, 5, 7, 11, 21, 25, 26, 27, 32], "twice": 50, "two": [7, 10, 27, 38, 41, 43, 44, 49, 55], "txt": [35, 50], "type": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 42, 44, 47, 48, 53], "u": [16, 43, 50], "u32": 37, "u_eq": 43, "uncom": 42, "uncompress": [12, 38], "under": 31, "undergo": 49, "undergon": 49, "underli": [32, 44], "underpin": 32, "unexpect": 44, "unifomli": 8, "uniformli": 5, "union": 27, "uniqu": [38, 50], "unique_cycl": 38, "unique_ev": 38, "unit": [0, 1, 12, 14, 15, 16, 17, 18, 19, 27, 31, 36, 37, 39, 42, 44, 45, 47, 50], "unit_dict": [1, 29], "unit_from_regexp": [0, 1, 29], "unset": 31, "until": [37, 38, 41, 42, 55], "up": [31, 33, 38, 45, 46, 49], "update_wrapper_attribut": 44, "upon": 25, "upper": 38, "upward": 55, "url": [5, 8], "us": [4, 7, 8, 10, 12, 21, 23, 25, 27, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56], "user": [25, 32, 33, 37, 39, 46, 47, 52, 56], "usual": 49, "util": [0, 1, 2, 43, 44], "uv": 35, "v": [9, 12, 25, 29, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 53, 55], "valid": [11, 12, 14, 15, 16, 17, 18, 19, 21, 25, 27, 32, 33, 40, 45, 48], "validate_cal": [32, 33], "validate_python": 44, "validate_required_column": [2, 11], "validatecallwrapp": 44, "validated_self": 44, "validationerror": 44, "valu": [5, 12, 21, 25, 27, 37, 38, 44, 49, 50, 55], "value_error": 44, "valueerror": [5, 11, 27], "variabl": [2, 8, 10, 11, 12, 21, 30, 31, 32, 44], "variant": [44, 47], "vector": [5, 7, 43], "venv": [35, 44, 51], "veri": 31, "verifi": [44, 49], "version": 51, "vert": 38, "via": 44, "viridi": 23, "virtual": [35, 51], "visit": 44, "visual": 51, "visualis": 52, "volt": 50, "voltag": [12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 29, 31, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 50, 53], "vscode": [51, 55], "w": 29, "wa": 50, "wai": [25, 32, 41, 42, 49, 51], "wang": [5, 8], "want": 21, "warn": 44, "wd": 43, "we": [32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45], "web": 52, "week": 38, "well": 56, "weng": [5, 8, 36, 39], "were": [44, 50], "when": [10, 12, 18, 19, 25, 27, 31, 32, 33, 37, 38, 42, 44, 47, 48, 49, 50, 55, 56], "whenev": 44, "where": [7, 9, 31, 38, 49, 50, 55], "wherea": 38, "whether": [6, 7, 10, 23, 27], "which": [8, 9, 25, 31, 32, 33, 35, 36, 37, 39, 41, 44, 48, 49, 51, 52, 55, 56], "whichev": 36, "while": [10, 31, 32, 35], "who": 47, "why": 55, "widanag": 43, "wide": 35, "width": 23, "wildcard": 49, "window": [10, 51], "window_length": 10, "wish": 35, "with_column": 38, "within": [9, 10, 31, 35, 42, 48, 55], "without": 27, "work": [31, 32, 33, 35, 37, 44, 51, 54], "workflow": 49, "worksheet": 12, "worksheet_nam": [12, 49], "would": 44, "wrap": 44, "wrapper": [8, 27, 32, 44], "wrapper_funct": 44, "write": [12, 22, 32, 38, 49, 51, 54], "write_parquet": 38, "written": [22, 44, 55], "www": [5, 8], "x": [5, 8, 10, 23, 32, 36, 39, 42, 43, 44, 48, 53], "x0": [7, 43], "x_c1": 4, "x_c2": 4, "x_data": [32, 44], "x_guess": 4, "x_ne": [4, 43], "x_ne_hi": [4, 7, 32, 43], "x_ne_lo": [4, 7, 32, 43], "x_pe": [4, 43], "x_pe_hi": [4, 7, 32, 43], "x_pe_lo": [4, 7, 32, 43], "x_rang": [1, 23], "xaxi": 23, "xiangm": [5, 8], "xlabel": [38, 43], "xlsx": [12, 38, 42, 49, 50], "xtick": 38, "xueb": [5, 8], "xuemin": [5, 8], "xune": [5, 8], "y": [5, 8, 10, 14, 18, 23, 32, 36, 38, 39, 42, 43, 44, 48, 53], "y2_rang": [1, 23], "y_data": [32, 44], "y_rang": [1, 23], "y_sampling_interv": [2, 3, 5], "yaml": [12, 21, 26, 41, 47, 49, 54], "yan": [5, 8], "yann": [5, 8], "yatish": [5, 8], "yaxi": [23, 38], "yaxis_titl": 37, "ye": 50, "year": 38, "yi": [5, 8], "ylabel": [38, 43], "you": [12, 21, 31, 32, 35, 36, 38, 39, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55], "your": [31, 32, 33, 35, 43, 48, 49, 51, 52, 55], "yscale": 38, "ytick": 38, "yu": [5, 8], "z": 43, "z_ne_hi": 4, "z_ne_lo": 4, "z_pe_hi": 4, "z_pe_lo": 4, "zero": [25, 31, 36, 38, 41, 44, 47], "zero_column": [1, 25], "zhao": [5, 8], "zip": [12, 45], "zstd": 12, "\u00b5": 29, "\u03bc": 42}, "titles": ["pyprobe", "pyprobe package", "pyprobe.analysis package", "pyprobe.analysis.base package", "pyprobe.analysis.base.degradation_mode_analysis_functions module", "pyprobe.analysis.base.differentiation_functions module", "pyprobe.analysis.cycling module", "pyprobe.analysis.degradation_mode_analysis module", "pyprobe.analysis.differentiation module", "pyprobe.analysis.pulsing module", "pyprobe.analysis.smoothing module", "pyprobe.analysis.utils module", "pyprobe.cell module", "pyprobe.cyclers package", "pyprobe.cyclers.arbin module", "pyprobe.cyclers.basecycler module", "pyprobe.cyclers.basytec module", "pyprobe.cyclers.biologic module", "pyprobe.cyclers.maccor module", "pyprobe.cyclers.neware module", "pyprobe.dashboard module", "pyprobe.filters module", "pyprobe.logger module", "pyprobe.plot module", "pyprobe.pyprobe_types module", "pyprobe.rawdata module", "pyprobe.readme_processor module", "pyprobe.result module", "pyprobe.typing module", "pyprobe.units module", "pyprobe.utils module", "Adding a Cycler", "Contributing to the Analysis Module", "Dependency Guide", "Developer Guide", "Installation", "Differentiating with the LEAN algorithm", "Analysing GITT data", "Comparing PyProBE Performance", "Differentiating voltage data", "Examples", "Filtering data", "Getting started with PyProBE", "OCV Fitting", "Providing Valid Inputs", "Sharing Data", "PyProBE documentation", "Accessing Data", "Analysis", "Importing Data", "Input Data Guidance", "Installation", "Introduction", "Plotting", "User Guide", "Writing a README file", "Writing an Experiment record"], "titleterms": {"The": 55, "access": 47, "ad": [31, 49], "algorithm": 36, "an": 56, "analys": 37, "analysi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 32, 44, 48], "arbin": 14, "base": [3, 4, 5, 32], "basecycl": 15, "basytec": 16, "batch": 49, "biolog": 17, "cell": [12, 49], "column": 50, "compar": 38, "contribut": 32, "convert": [42, 49], "cycl": 6, "cycler": [13, 14, 15, 16, 17, 18, 19, 31, 49, 50], "dashboard": 20, "data": [37, 39, 41, 42, 45, 47, 49, 50], "degradation_mode_analysi": 7, "degradation_mode_analysis_funct": 4, "depend": 33, "develop": 34, "differenti": [8, 36, 39], "differentiation_funct": 5, "document": [46, 52], "exampl": 40, "experi": 56, "file": [49, 55], "filter": [21, 41, 47], "fit": 43, "format": [42, 49, 50, 55], "from": 49, "function": 32, "get": 42, "gitt": 37, "guid": [33, 34, 54], "guidanc": 50, "import": 49, "input": [44, 49, 50], "instal": [35, 51], "introduct": 52, "lean": 36, "logger": 22, "maccor": 18, "make": 49, "modul": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 44], "multipl": 49, "newar": 19, "object": [47, 49], "ocv": 43, "packag": [1, 2, 3, 13], "perform": 38, "plot": [23, 53], "polar": 33, "preprocess": 49, "provid": 44, "puls": 9, "pydant": 33, "pyprob": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 38, 42, 46, 49, 50, 52, 55], "pyprobe_typ": 24, "rawdata": [25, 44, 47], "readm": 55, "readme_processor": 26, "record": 56, "result": 27, "share": 45, "shortcut": 55, "smooth": 10, "standard": 42, "start": 42, "structur": 52, "submodul": [1, 2, 3, 13], "subpackag": [1, 2], "support": 50, "thi": 52, "type": 28, "unit": 29, "user": 54, "util": [11, 30], "valid": 44, "voltag": 39, "work": 49, "write": [55, 56], "yaml": 55}})