Search.setIndex({"alltitles": {"Accessing Data": [[43, null]], "Adding a Cycler": [[28, null]], "Adding data not from a cycler": [[45, "adding-data-not-from-a-cycler"]], "Adding data to a cell object": [[45, "adding-data-to-a-cell-object"]], "Analysing GITT data": [[34, null]], "Analysis": [[44, null]], "Analysis Class Validation": [[41, "Analysis-Class-Validation"]], "Base": [[29, "base"]], "Batch preprocessing": [[45, "batch-preprocessing"]], "Comparing PyProBE Performance": [[35, null]], "Contributing to the Analysis Module": [[29, null]], "Convert data to standard format": [[39, "Convert-data-to-standard-format"]], "Converting data to PyProBE Format": [[45, "converting-data-to-pyprobe-format"]], "Dependency Guide": [[30, null]], "Developer Guide": [[31, null]], "Differentiating voltage data": [[36, null]], "Differentiating with the LEAN algorithm": [[33, null]], "Examples": [[37, null]], "Filtering": [[43, "filtering"]], "Filtering data": [[38, null]], "Getting started with PyProBE": [[39, null]], "Importing Data": [[45, null]], "Input Data Guidance": [[46, null]], "Installation": [[32, null], [47, null]], "Introduction": [[48, null]], "Making a cell object": [[45, "making-a-cell-object"]], "Methods": [[29, "methods"]], "OCV Fitting": [[40, null]], "Plotting": [[49, null]], "Polars": [[30, "polars"]], "Providing Valid Inputs": [[41, null]], "PyProBE Structure": [[48, "pyprobe-structure"]], "PyProBE data columns": [[46, "pyprobe-data-columns"]], "PyProBE documentation": [[42, null]], "Pydantic": [[30, "pydantic"]], "RawData Validation": [[41, "RawData-Validation"]], "RawData objects": [[43, "rawdata-objects"]], "Setup": [[29, "setup"]], "Shortcuts": [[51, "shortcuts"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [13, "submodules"]], "Subpackages": [[1, "subpackages"], [2, "subpackages"]], "Supported cyclers and formats": [[46, "supported-cyclers-and-formats"]], "The PyProBE README format": [[51, "the-pyprobe-readme-format"]], "The YAML format": [[51, "the-yaml-format"]], "This documentation": [[48, "this-documentation"]], "User Guide": [[50, null]], "Working with multiple input files": [[45, "working-with-multiple-input-files"]], "Writing a README file": [[51, null]], "Writing an Experiment record": [[52, null]], "pyprobe": [[0, null]], "pyprobe package": [[1, null]], "pyprobe.analysis package": [[2, null]], "pyprobe.analysis.base package": [[3, null]], "pyprobe.analysis.base.degradation_mode_analysis_functions module": [[4, null]], "pyprobe.analysis.base.differentiation_functions module": [[5, null]], "pyprobe.analysis.cycling module": [[6, null]], "pyprobe.analysis.degradation_mode_analysis module": [[7, null]], "pyprobe.analysis.differentiation module": [[8, null]], "pyprobe.analysis.pulsing module": [[9, null]], "pyprobe.analysis.smoothing module": [[10, null]], "pyprobe.analysis.utils module": [[11, null]], "pyprobe.cell module": [[12, null]], "pyprobe.cyclers package": [[13, null]], "pyprobe.cyclers.arbin module": [[14, null]], "pyprobe.cyclers.basecycler module": [[15, null]], "pyprobe.cyclers.basytec module": [[16, null]], "pyprobe.cyclers.biologic module": [[17, null]], "pyprobe.cyclers.maccor module": [[18, null]], "pyprobe.cyclers.neware module": [[19, null]], "pyprobe.dashboard module": [[20, null]], "pyprobe.filters module": [[21, null]], "pyprobe.plot module": [[22, null]], "pyprobe.rawdata module": [[23, null]], "pyprobe.readme_processor module": [[24, null]], "pyprobe.result module": [[25, null]], "pyprobe.typing module": [[26, null]], "pyprobe.units module": [[27, null]]}, "docnames": ["api/modules", "api/pyprobe", "api/pyprobe.analysis", "api/pyprobe.analysis.base", "api/pyprobe.analysis.base.degradation_mode_analysis_functions", "api/pyprobe.analysis.base.differentiation_functions", "api/pyprobe.analysis.cycling", "api/pyprobe.analysis.degradation_mode_analysis", "api/pyprobe.analysis.differentiation", "api/pyprobe.analysis.pulsing", "api/pyprobe.analysis.smoothing", "api/pyprobe.analysis.utils", "api/pyprobe.cell", "api/pyprobe.cyclers", "api/pyprobe.cyclers.arbin", "api/pyprobe.cyclers.basecycler", "api/pyprobe.cyclers.basytec", "api/pyprobe.cyclers.biologic", "api/pyprobe.cyclers.maccor", "api/pyprobe.cyclers.neware", "api/pyprobe.dashboard", "api/pyprobe.filters", "api/pyprobe.plot", "api/pyprobe.rawdata", "api/pyprobe.readme_processor", "api/pyprobe.result", "api/pyprobe.typing", "api/pyprobe.units", "developer_guide/adding_a_cycler", "developer_guide/contributing_to_the_analysis_module", "developer_guide/dependency_guide", "developer_guide/developer_guide", "developer_guide/developer_installation", "examples/LEAN-differentiation", "examples/analysing-GITT-data", "examples/comparing-pyprobe-performance", "examples/differentiating-voltage-data", "examples/examples", "examples/filtering-data", "examples/getting-started", "examples/ocv-fitting", "examples/providing-valid-inputs", "index", "user_guide/accessing_data", "user_guide/analysis", "user_guide/importing_data", "user_guide/input_data_guidance", "user_guide/installation", "user_guide/introduction", "user_guide/plotting", "user_guide/user_guide", "user_guide/writing_a_readme_file", "user_guide/writing_an_experiment_record"], "envversion": {"nbsphinx": 4, "sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["api/modules.rst", "api/pyprobe.rst", "api/pyprobe.analysis.rst", "api/pyprobe.analysis.base.rst", "api/pyprobe.analysis.base.degradation_mode_analysis_functions.rst", "api/pyprobe.analysis.base.differentiation_functions.rst", "api/pyprobe.analysis.cycling.rst", "api/pyprobe.analysis.degradation_mode_analysis.rst", "api/pyprobe.analysis.differentiation.rst", "api/pyprobe.analysis.pulsing.rst", "api/pyprobe.analysis.smoothing.rst", "api/pyprobe.analysis.utils.rst", "api/pyprobe.cell.rst", "api/pyprobe.cyclers.rst", "api/pyprobe.cyclers.arbin.rst", "api/pyprobe.cyclers.basecycler.rst", "api/pyprobe.cyclers.basytec.rst", "api/pyprobe.cyclers.biologic.rst", "api/pyprobe.cyclers.maccor.rst", "api/pyprobe.cyclers.neware.rst", "api/pyprobe.dashboard.rst", "api/pyprobe.filters.rst", "api/pyprobe.plot.rst", "api/pyprobe.rawdata.rst", "api/pyprobe.readme_processor.rst", "api/pyprobe.result.rst", "api/pyprobe.typing.rst", "api/pyprobe.units.rst", "developer_guide/adding_a_cycler.rst", "developer_guide/contributing_to_the_analysis_module.rst", "developer_guide/dependency_guide.rst", "developer_guide/developer_guide.rst", "developer_guide/developer_installation.rst", "examples/LEAN-differentiation.ipynb", "examples/analysing-GITT-data.ipynb", "examples/comparing-pyprobe-performance.ipynb", "examples/differentiating-voltage-data.ipynb", "examples/examples.rst", "examples/filtering-data.ipynb", "examples/getting-started.ipynb", "examples/ocv-fitting.ipynb", "examples/providing-valid-inputs.ipynb", "index.rst", "user_guide/accessing_data.rst", "user_guide/analysis.rst", "user_guide/importing_data.rst", "user_guide/input_data_guidance.rst", "user_guide/installation.rst", "user_guide/introduction.rst", "user_guide/plotting.rst", "user_guide/user_guide.rst", "user_guide/writing_a_readme_file.rst", "user_guide/writing_an_experiment_record.rst"], "indexentries": {"add_colorbar() (pyprobe.plot.plot method)": [[22, "pyprobe.plot.Plot.add_colorbar", false]], "add_colorscaled_line() (pyprobe.plot.plot method)": [[22, "pyprobe.plot.Plot.add_colorscaled_line", false]], "add_external_data() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.add_external_data", false]], "add_line() (pyprobe.plot.plot method)": [[22, "pyprobe.plot.Plot.add_line", false]], "add_new_data_columns() (pyprobe.result.result method)": [[25, "pyprobe.result.Result.add_new_data_columns", false]], "add_procedure() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.add_procedure", false]], "apply_step_correction() (pyprobe.cyclers.biologic.biologicmb static method)": [[17, "pyprobe.cyclers.biologic.BiologicMB.apply_step_correction", false]], "array() (pyprobe.result.result method)": [[25, "pyprobe.result.Result.array", false]], "assemble_array() (in module pyprobe.analysis.utils)": [[11, "pyprobe.analysis.utils.assemble_array", false]], "average_ocv_curves() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.average_OCV_curves", false]], "average_ocvs() (pyprobe.analysis.degradation_mode_analysis.dma static method)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.average_ocvs", false]], "axis_font_size (pyprobe.plot.plot attribute)": [[22, "pyprobe.plot.Plot.axis_font_size", false]], "base_dataframe (pyprobe.filters.cycle attribute)": [[21, "pyprobe.filters.Cycle.base_dataframe", false]], "base_dataframe (pyprobe.filters.experiment attribute)": [[21, "pyprobe.filters.Experiment.base_dataframe", false]], "base_dataframe (pyprobe.filters.procedure attribute)": [[21, "pyprobe.filters.Procedure.base_dataframe", false]], "base_dataframe (pyprobe.filters.step attribute)": [[21, "pyprobe.filters.Step.base_dataframe", false]], "base_dataframe (pyprobe.rawdata.rawdata attribute)": [[23, "pyprobe.rawdata.RawData.base_dataframe", false]], "base_dataframe (pyprobe.result.result attribute)": [[25, "pyprobe.result.Result.base_dataframe", false]], "build() (pyprobe.result.result class method)": [[25, "pyprobe.result.Result.build", false]], "calc_electrode_capacities() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_electrode_capacities", false]], "calc_full_cell_ocv() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_full_cell_OCV", false]], "calc_gradient_with_lean() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.calc_gradient_with_LEAN", false]], "calculate_dma_parameters() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calculate_dma_parameters", false]], "capacity (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.capacity", false]], "capacity (pyprobe.cyclers.maccor.maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.capacity", false]], "capacity (pyprobe.cyclers.neware.neware property)": [[19, "pyprobe.cyclers.neware.Neware.capacity", false]], "capacity (pyprobe.rawdata.rawdata property)": [[23, "pyprobe.rawdata.RawData.capacity", false]], "capacity_from_ch_dch (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.capacity_from_ch_dch", false]], "charge() (pyprobe.filters.cycle method)": [[21, "pyprobe.filters.Cycle.charge", false]], "charge() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.charge", false]], "charge() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.charge", false]], "charge_capacity (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.charge_capacity", false]], "charge_capacity (pyprobe.cyclers.maccor.maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.charge_capacity", false]], "charge_capacity (pyprobe.cyclers.neware.neware property)": [[19, "pyprobe.cyclers.neware.Neware.charge_capacity", false]], "chargeordischarge() (pyprobe.filters.cycle method)": [[21, "pyprobe.filters.Cycle.chargeordischarge", false]], "chargeordischarge() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.chargeordischarge", false]], "chargeordischarge() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.chargeordischarge", false]], "check_and_set_name() (pyprobe.cell.cell class method)": [[12, "pyprobe.cell.Cell.check_and_set_name", false]], "check_readme_dict() (pyprobe.readme_processor.readmemodel class method)": [[24, "pyprobe.readme_processor.ReadmeModel.check_readme_dict", false]], "check_required_columns() (pyprobe.rawdata.rawdata class method)": [[23, "pyprobe.rawdata.RawData.check_required_columns", false]], "clean_copy() (pyprobe.result.result method)": [[25, "pyprobe.result.Result.clean_copy", false]], "column_definitions (pyprobe.filters.cycle attribute)": [[21, "pyprobe.filters.Cycle.column_definitions", false]], "column_definitions (pyprobe.filters.experiment attribute)": [[21, "pyprobe.filters.Experiment.column_definitions", false]], "column_definitions (pyprobe.filters.procedure attribute)": [[21, "pyprobe.filters.Procedure.column_definitions", false]], "column_definitions (pyprobe.filters.step attribute)": [[21, "pyprobe.filters.Step.column_definitions", false]], "column_definitions (pyprobe.rawdata.rawdata attribute)": [[23, "pyprobe.rawdata.RawData.column_definitions", false]], "column_definitions (pyprobe.result.result attribute)": [[25, "pyprobe.result.Result.column_definitions", false]], "column_dict (pyprobe.cyclers.arbin.arbin attribute)": [[14, "pyprobe.cyclers.arbin.Arbin.column_dict", false]], "column_dict (pyprobe.cyclers.basecycler.basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.column_dict", false]], "column_dict (pyprobe.cyclers.basytec.basytec attribute)": [[16, "pyprobe.cyclers.basytec.Basytec.column_dict", false]], "column_dict (pyprobe.cyclers.biologic.biologic attribute)": [[17, "pyprobe.cyclers.biologic.Biologic.column_dict", false]], "column_dict (pyprobe.cyclers.maccor.maccor attribute)": [[18, "pyprobe.cyclers.maccor.Maccor.column_dict", false]], "column_dict (pyprobe.cyclers.neware.neware attribute)": [[19, "pyprobe.cyclers.neware.Neware.column_dict", false]], "column_list (pyprobe.result.result property)": [[25, "pyprobe.result.Result.column_list", false]], "constant_current() (pyprobe.filters.cycle method)": [[21, "pyprobe.filters.Cycle.constant_current", false]], "constant_current() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.constant_current", false]], "constant_current() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.constant_current", false]], "constant_current() (pyprobe.filters.step method)": [[21, "pyprobe.filters.Step.constant_current", false]], "constant_voltage() (pyprobe.filters.cycle method)": [[21, "pyprobe.filters.Cycle.constant_voltage", false]], "constant_voltage() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.constant_voltage", false]], "constant_voltage() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.constant_voltage", false]], "constant_voltage() (pyprobe.filters.step method)": [[21, "pyprobe.filters.Step.constant_voltage", false]], "contains_lazyframe (pyprobe.result.result property)": [[25, "pyprobe.result.Result.contains_lazyframe", false]], "current (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.current", false]], "cycle (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.cycle", false]], "cycle() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.cycle", false]], "cycle() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.cycle", false]], "cycle_details (pyprobe.readme_processor.readmemodel attribute)": [[24, "pyprobe.readme_processor.ReadmeModel.cycle_details", false]], "data (pyprobe.result.result property)": [[25, "pyprobe.result.Result.data", false]], "date (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.date", false]], "date (pyprobe.cyclers.maccor.maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.date", false]], "datetime_format (pyprobe.cyclers.arbin.arbin attribute)": [[14, "pyprobe.cyclers.arbin.Arbin.datetime_format", false]], "datetime_format (pyprobe.cyclers.basecycler.basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.datetime_format", false]], "datetime_format (pyprobe.cyclers.maccor.maccor attribute)": [[18, "pyprobe.cyclers.maccor.Maccor.datetime_format", false]], "default_layout (pyprobe.plot.plot attribute)": [[22, "pyprobe.plot.Plot.default_layout", false]], "define_column() (pyprobe.result.result method)": [[25, "pyprobe.result.Result.define_column", false]], "differentiate_fd() (pyprobe.analysis.differentiation.differentiation method)": [[8, "pyprobe.analysis.differentiation.Differentiation.differentiate_FD", false]], "differentiate_lean() (pyprobe.analysis.differentiation.differentiation method)": [[8, "pyprobe.analysis.differentiation.Differentiation.differentiate_LEAN", false]], "discharge() (pyprobe.filters.cycle method)": [[21, "pyprobe.filters.Cycle.discharge", false]], "discharge() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.discharge", false]], "discharge() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.discharge", false]], "discharge_capacity (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.discharge_capacity", false]], "discharge_capacity (pyprobe.cyclers.maccor.maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.discharge_capacity", false]], "discharge_capacity (pyprobe.cyclers.neware.neware property)": [[19, "pyprobe.cyclers.neware.Neware.discharge_capacity", false]], "dma_result (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.dma_result", false]], "event (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.event", false]], "experiment() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.experiment", false]], "experiment_names (pyprobe.filters.procedure property)": [[21, "pyprobe.filters.Procedure.experiment_names", false]], "fig (pyprobe.plot.plot property)": [[22, "pyprobe.plot.Plot.fig", false]], "filtertocycletype (in module pyprobe.typing)": [[26, "pyprobe.typing.FilterToCycleType", false]], "filtertoexperimenttype (in module pyprobe.typing)": [[26, "pyprobe.typing.FilterToExperimentType", false]], "filtertosteptype (in module pyprobe.typing)": [[26, "pyprobe.typing.FilterToStepType", false]], "fit_ocv() (pyprobe.analysis.degradation_mode_analysis.dma method)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.fit_ocv", false]], "fitted_ocv (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.fitted_OCV", false]], "from_default_unit() (pyprobe.units.units method)": [[27, "pyprobe.units.Units.from_default_unit", false]], "get() (pyprobe.result.result method)": [[25, "pyprobe.result.Result.get", false]], "get_dx() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_dx", false]], "get_dy_and_counts() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_dy_and_counts", false]], "get_imported_dataframe() (pyprobe.cyclers.basecycler.basecycler method)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.get_imported_dataframe", false]], "get_imported_dataframe() (pyprobe.cyclers.biologic.biologicmb method)": [[17, "pyprobe.cyclers.biologic.BiologicMB.get_imported_dataframe", false]], "get_only() (pyprobe.result.result method)": [[25, "pyprobe.result.Result.get_only", false]], "get_x_sections() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_x_sections", false]], "import_and_validate_data() (pyprobe.cyclers.basecycler.basecycler method)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.import_and_validate_data", false]], "info (pyprobe.cell.cell attribute)": [[12, "pyprobe.cell.Cell.info", false]], "info (pyprobe.filters.cycle attribute)": [[21, "pyprobe.filters.Cycle.info", false]], "info (pyprobe.filters.experiment attribute)": [[21, "pyprobe.filters.Experiment.info", false]], "info (pyprobe.filters.procedure attribute)": [[21, "pyprobe.filters.Procedure.info", false]], "info (pyprobe.filters.step attribute)": [[21, "pyprobe.filters.Step.info", false]], "info (pyprobe.rawdata.rawdata attribute)": [[23, "pyprobe.rawdata.RawData.info", false]], "info (pyprobe.result.result attribute)": [[25, "pyprobe.result.Result.info", false]], "input_data (pyprobe.analysis.cycling.cycling attribute)": [[6, "pyprobe.analysis.cycling.Cycling.input_data", false]], "input_data (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.input_data", false]], "input_data (pyprobe.analysis.differentiation.differentiation attribute)": [[8, "pyprobe.analysis.differentiation.Differentiation.input_data", false]], "input_data (pyprobe.analysis.pulsing.pulsing attribute)": [[9, "pyprobe.analysis.pulsing.Pulsing.input_data", false]], "input_data (pyprobe.analysis.smoothing.smoothing attribute)": [[10, "pyprobe.analysis.smoothing.Smoothing.input_data", false]], "input_data (pyprobe.analysis.utils.analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.input_data", false]], "input_data_path (pyprobe.cyclers.arbin.arbin attribute)": [[14, "pyprobe.cyclers.arbin.Arbin.input_data_path", false]], "input_data_path (pyprobe.cyclers.basecycler.basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.input_data_path", false]], "input_data_path (pyprobe.cyclers.basytec.basytec attribute)": [[16, "pyprobe.cyclers.basytec.Basytec.input_data_path", false]], "input_data_path (pyprobe.cyclers.biologic.biologic attribute)": [[17, "pyprobe.cyclers.biologic.Biologic.input_data_path", false]], "input_data_path (pyprobe.cyclers.maccor.maccor attribute)": [[18, "pyprobe.cyclers.maccor.Maccor.input_data_path", false]], "input_data_path (pyprobe.cyclers.neware.neware attribute)": [[19, "pyprobe.cyclers.neware.Neware.input_data_path", false]], "launch_dashboard() (in module pyprobe.dashboard)": [[20, "pyprobe.dashboard.launch_dashboard", false]], "level_smoothing() (pyprobe.analysis.smoothing.smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.level_smoothing", false]], "load_external_file() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.load_external_file", false]], "make_cell_list() (in module pyprobe.cell)": [[12, "pyprobe.cell.make_cell_list", false]], "make_colorscale() (pyprobe.plot.plot static method)": [[22, "pyprobe.plot.Plot.make_colorscale", false]], "module": [[1, "module-pyprobe", false], [2, "module-pyprobe.analysis", false], [3, "module-pyprobe.analysis.base", false], [4, "module-pyprobe.analysis.base.degradation_mode_analysis_functions", false], [5, "module-pyprobe.analysis.base.differentiation_functions", false], [6, "module-pyprobe.analysis.cycling", false], [7, "module-pyprobe.analysis.degradation_mode_analysis", false], [8, "module-pyprobe.analysis.differentiation", false], [9, "module-pyprobe.analysis.pulsing", false], [10, "module-pyprobe.analysis.smoothing", false], [11, "module-pyprobe.analysis.utils", false], [12, "module-pyprobe.cell", false], [13, "module-pyprobe.cyclers", false], [14, "module-pyprobe.cyclers.arbin", false], [15, "module-pyprobe.cyclers.basecycler", false], [16, "module-pyprobe.cyclers.basytec", false], [17, "module-pyprobe.cyclers.biologic", false], [18, "module-pyprobe.cyclers.maccor", false], [19, "module-pyprobe.cyclers.neware", false], [20, "module-pyprobe.dashboard", false], [21, "module-pyprobe.filters", false], [22, "module-pyprobe.plot", false], [23, "module-pyprobe.rawdata", false], [24, "module-pyprobe.readme_processor", false], [25, "module-pyprobe.result", false], [26, "module-pyprobe.typing", false], [27, "module-pyprobe.units", false]], "number_of_experiments (pyprobe.readme_processor.readmemodel attribute)": [[24, "pyprobe.readme_processor.ReadmeModel.number_of_experiments", false]], "ocv_curve_fit() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.ocv_curve_fit", false]], "plot (class in pyprobe.plot)": [[22, "pyprobe.plot.Plot", false]], "prefix_dict (pyprobe.units.units attribute)": [[27, "pyprobe.units.Units.prefix_dict", false]], "print_definitions() (pyprobe.result.result method)": [[25, "pyprobe.result.Result.print_definitions", false]], "procedure (pyprobe.cell.cell attribute)": [[12, "pyprobe.cell.Cell.procedure", false]], "process_cycler_file() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.process_cycler_file", false]], "process_generic_file() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.process_generic_file", false]], "process_readme() (in module pyprobe.readme_processor)": [[24, "pyprobe.readme_processor.process_readme", false]], "pulse() (pyprobe.analysis.pulsing.pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse", false]], "pulse_rest() (pyprobe.analysis.pulsing.pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse_rest", false]], "pulse_summary() (pyprobe.analysis.pulsing.pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse_summary", false]], "pybamm_experiment (pyprobe.filters.procedure attribute)": [[21, "pyprobe.filters.Procedure.pybamm_experiment", false]], "pybamm_experiment (pyprobe.readme_processor.readmemodel attribute)": [[24, "pyprobe.readme_processor.ReadmeModel.pybamm_experiment", false]], "pybamm_experiment_descriptions (pyprobe.readme_processor.readmemodel attribute)": [[24, "pyprobe.readme_processor.ReadmeModel.pybamm_experiment_descriptions", false]], "pybamm_experiment_list (pyprobe.filters.procedure attribute)": [[21, "pyprobe.filters.Procedure.pybamm_experiment_list", false]], "pybamm_experiment_list (pyprobe.readme_processor.readmemodel attribute)": [[24, "pyprobe.readme_processor.ReadmeModel.pybamm_experiment_list", false]], "pyprobe": [[1, "module-pyprobe", false]], "pyprobe.analysis": [[2, "module-pyprobe.analysis", false]], "pyprobe.analysis.base": [[3, "module-pyprobe.analysis.base", false]], "pyprobe.analysis.base.degradation_mode_analysis_functions": [[4, "module-pyprobe.analysis.base.degradation_mode_analysis_functions", false]], "pyprobe.analysis.base.differentiation_functions": [[5, "module-pyprobe.analysis.base.differentiation_functions", false]], "pyprobe.analysis.cycling": [[6, "module-pyprobe.analysis.cycling", false]], "pyprobe.analysis.degradation_mode_analysis": [[7, "module-pyprobe.analysis.degradation_mode_analysis", false]], "pyprobe.analysis.differentiation": [[8, "module-pyprobe.analysis.differentiation", false]], "pyprobe.analysis.pulsing": [[9, "module-pyprobe.analysis.pulsing", false]], "pyprobe.analysis.smoothing": [[10, "module-pyprobe.analysis.smoothing", false]], "pyprobe.analysis.utils": [[11, "module-pyprobe.analysis.utils", false]], "pyprobe.cell": [[12, "module-pyprobe.cell", false]], "pyprobe.cyclers": [[13, "module-pyprobe.cyclers", false]], "pyprobe.cyclers.arbin": [[14, "module-pyprobe.cyclers.arbin", false]], "pyprobe.cyclers.basecycler": [[15, "module-pyprobe.cyclers.basecycler", false]], "pyprobe.cyclers.basytec": [[16, "module-pyprobe.cyclers.basytec", false]], "pyprobe.cyclers.biologic": [[17, "module-pyprobe.cyclers.biologic", false]], "pyprobe.cyclers.maccor": [[18, "module-pyprobe.cyclers.maccor", false]], "pyprobe.cyclers.neware": [[19, "module-pyprobe.cyclers.neware", false]], "pyprobe.dashboard": [[20, "module-pyprobe.dashboard", false]], "pyprobe.filters": [[21, "module-pyprobe.filters", false]], "pyprobe.plot": [[22, "module-pyprobe.plot", false]], "pyprobe.rawdata": [[23, "module-pyprobe.rawdata", false]], "pyprobe.readme_processor": [[24, "module-pyprobe.readme_processor", false]], "pyprobe.result": [[25, "module-pyprobe.result", false]], "pyprobe.typing": [[26, "module-pyprobe.typing", false]], "pyprobe.units": [[27, "module-pyprobe.units", false]], "pyprobe_dataframe (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.pyprobe_dataframe", false]], "pyprobedatatype (in module pyprobe.typing)": [[26, "pyprobe.typing.PyProBEDataType", false]], "pyproberawdatatype (in module pyprobe.typing)": [[26, "pyprobe.typing.PyProBERawDataType", false]], "quantify_degradation_modes() (pyprobe.analysis.degradation_mode_analysis.dma method)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.quantify_degradation_modes", false]], "quantities (pyprobe.result.result property)": [[25, "pyprobe.result.Result.quantities", false]], "read_file() (pyprobe.cyclers.basecycler.basecycler static method)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.read_file", false]], "read_file() (pyprobe.cyclers.basytec.basytec static method)": [[16, "pyprobe.cyclers.basytec.Basytec.read_file", false]], "read_file() (pyprobe.cyclers.biologic.biologic static method)": [[17, "pyprobe.cyclers.biologic.Biologic.read_file", false]], "read_file() (pyprobe.cyclers.maccor.maccor static method)": [[18, "pyprobe.cyclers.maccor.Maccor.read_file", false]], "read_file() (pyprobe.cyclers.neware.neware static method)": [[19, "pyprobe.cyclers.neware.Neware.read_file", false]], "readme_dict (pyprobe.readme_processor.readmemodel attribute)": [[24, "pyprobe.readme_processor.ReadmeModel.readme_dict", false]], "readme_type (pyprobe.readme_processor.readmemodel attribute)": [[24, "pyprobe.readme_processor.ReadmeModel.readme_type", false]], "required_columns (pyprobe.analysis.utils.analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.required_columns", false]], "required_type (pyprobe.analysis.utils.analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.required_type", false]], "rest() (pyprobe.filters.cycle method)": [[21, "pyprobe.filters.Cycle.rest", false]], "rest() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.rest", false]], "rest() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.rest", false]], "savgol_smoothing() (pyprobe.analysis.smoothing.smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.savgol_smoothing", false]], "set_reference_capacity() (pyprobe.rawdata.rawdata method)": [[23, "pyprobe.rawdata.RawData.set_reference_capacity", false]], "set_soc() (pyprobe.rawdata.rawdata method)": [[23, "pyprobe.rawdata.RawData.set_SOC", false]], "show() (pyprobe.plot.plot method)": [[22, "pyprobe.plot.Plot.show", false]], "show_image() (pyprobe.plot.plot method)": [[22, "pyprobe.plot.Plot.show_image", false]], "smooth_gradient() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.smooth_gradient", false]], "spline_smoothing() (pyprobe.analysis.smoothing.smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.spline_smoothing", false]], "step (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.step", false]], "step() (pyprobe.filters.cycle method)": [[21, "pyprobe.filters.Cycle.step", false]], "step() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.step", false]], "step() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.step", false]], "step() (pyprobe.filters.step method)": [[21, "pyprobe.filters.Step.step", false]], "step_descriptions (pyprobe.readme_processor.readmemodel attribute)": [[24, "pyprobe.readme_processor.ReadmeModel.step_descriptions", false]], "step_indices (pyprobe.readme_processor.readmemodel attribute)": [[24, "pyprobe.readme_processor.ReadmeModel.step_indices", false]], "step_numbers (pyprobe.readme_processor.readmemodel attribute)": [[24, "pyprobe.readme_processor.ReadmeModel.step_numbers", false]], "steps_idx (pyprobe.filters.procedure attribute)": [[21, "pyprobe.filters.Procedure.steps_idx", false]], "stoichiometry_limits (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.stoichiometry_limits", false]], "summary() (pyprobe.analysis.cycling.cycling method)": [[6, "pyprobe.analysis.cycling.Cycling.summary", false]], "temperature (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.temperature", false]], "time (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.time", false]], "time (pyprobe.cyclers.neware.neware property)": [[19, "pyprobe.cyclers.neware.Neware.time", false]], "time_unit_dict (pyprobe.units.units attribute)": [[27, "pyprobe.units.Units.time_unit_dict", false]], "title_font_size (pyprobe.plot.plot attribute)": [[22, "pyprobe.plot.Plot.title_font_size", false]], "titles (pyprobe.filters.procedure attribute)": [[21, "pyprobe.filters.Procedure.titles", false]], "titles (pyprobe.readme_processor.readmemodel attribute)": [[24, "pyprobe.readme_processor.ReadmeModel.titles", false]], "to_default_unit() (pyprobe.units.units method)": [[27, "pyprobe.units.Units.to_default_unit", false]], "unit_dict (pyprobe.units.units attribute)": [[27, "pyprobe.units.Units.unit_dict", false]], "unit_from_regexp() (in module pyprobe.units)": [[27, "pyprobe.units.unit_from_regexp", false]], "units (class in pyprobe.units)": [[27, "pyprobe.units.Units", false]], "validate_input_data_type() (pyprobe.analysis.utils.analysisvalidator method)": [[11, "pyprobe.analysis.utils.AnalysisValidator.validate_input_data_type", false]], "validate_required_columns() (pyprobe.analysis.utils.analysisvalidator method)": [[11, "pyprobe.analysis.utils.AnalysisValidator.validate_required_columns", false]], "variables (pyprobe.analysis.utils.analysisvalidator property)": [[11, "pyprobe.analysis.utils.AnalysisValidator.variables", false]], "voltage (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.voltage", false]], "x_range (pyprobe.plot.plot property)": [[22, "pyprobe.plot.Plot.x_range", false]], "y2_range (pyprobe.plot.plot property)": [[22, "pyprobe.plot.Plot.y2_range", false]], "y_range (pyprobe.plot.plot property)": [[22, "pyprobe.plot.Plot.y_range", false]], "y_sampling_interval() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.y_sampling_interval", false]], "zero_column() (pyprobe.rawdata.rawdata method)": [[23, "pyprobe.rawdata.RawData.zero_column", false]]}, "objects": {"": [[1, 0, 0, "-", "pyprobe"]], "pyprobe": [[2, 0, 0, "-", "analysis"], [12, 0, 0, "-", "cell"], [13, 0, 0, "-", "cyclers"], [20, 0, 0, "-", "dashboard"], [21, 0, 0, "-", "filters"], [22, 0, 0, "-", "plot"], [23, 0, 0, "-", "rawdata"], [24, 0, 0, "-", "readme_processor"], [25, 0, 0, "-", "result"], [26, 0, 0, "-", "typing"], [27, 0, 0, "-", "units"]], "pyprobe.analysis": [[3, 0, 0, "-", "base"], [6, 0, 0, "-", "cycling"], [7, 0, 0, "-", "degradation_mode_analysis"], [8, 0, 0, "-", "differentiation"], [9, 0, 0, "-", "pulsing"], [10, 0, 0, "-", "smoothing"], [11, 0, 0, "-", "utils"]], "pyprobe.analysis.base": [[4, 0, 0, "-", "degradation_mode_analysis_functions"], [5, 0, 0, "-", "differentiation_functions"]], "pyprobe.analysis.base.degradation_mode_analysis_functions": [[4, 1, 1, "", "average_OCV_curves"], [4, 1, 1, "", "calc_electrode_capacities"], [4, 1, 1, "", "calc_full_cell_OCV"], [4, 1, 1, "", "calculate_dma_parameters"], [4, 1, 1, "", "ocv_curve_fit"]], "pyprobe.analysis.base.differentiation_functions": [[5, 1, 1, "", "calc_gradient_with_LEAN"], [5, 1, 1, "", "get_dx"], [5, 1, 1, "", "get_dy_and_counts"], [5, 1, 1, "", "get_x_sections"], [5, 1, 1, "", "smooth_gradient"], [5, 1, 1, "", "y_sampling_interval"]], "pyprobe.analysis.cycling": [[6, 2, 1, "", "Cycling"]], "pyprobe.analysis.cycling.Cycling": [[6, 3, 1, "", "input_data"], [6, 4, 1, "", "summary"]], "pyprobe.analysis.degradation_mode_analysis": [[7, 2, 1, "", "DMA"]], "pyprobe.analysis.degradation_mode_analysis.DMA": [[7, 4, 1, "", "average_ocvs"], [7, 3, 1, "", "dma_result"], [7, 4, 1, "", "fit_ocv"], [7, 3, 1, "", "fitted_OCV"], [7, 3, 1, "", "input_data"], [7, 4, 1, "", "quantify_degradation_modes"], [7, 3, 1, "", "stoichiometry_limits"]], "pyprobe.analysis.differentiation": [[8, 2, 1, "", "Differentiation"]], "pyprobe.analysis.differentiation.Differentiation": [[8, 4, 1, "", "differentiate_FD"], [8, 4, 1, "", "differentiate_LEAN"], [8, 3, 1, "", "input_data"]], "pyprobe.analysis.pulsing": [[9, 2, 1, "", "Pulsing"]], "pyprobe.analysis.pulsing.Pulsing": [[9, 3, 1, "", "input_data"], [9, 4, 1, "", "pulse"], [9, 4, 1, "", "pulse_rest"], [9, 4, 1, "", "pulse_summary"]], "pyprobe.analysis.smoothing": [[10, 2, 1, "", "Smoothing"]], "pyprobe.analysis.smoothing.Smoothing": [[10, 3, 1, "", "input_data"], [10, 4, 1, "", "level_smoothing"], [10, 4, 1, "", "savgol_smoothing"], [10, 4, 1, "", "spline_smoothing"]], "pyprobe.analysis.utils": [[11, 2, 1, "", "AnalysisValidator"], [11, 1, 1, "", "assemble_array"]], "pyprobe.analysis.utils.AnalysisValidator": [[11, 3, 1, "", "input_data"], [11, 3, 1, "", "required_columns"], [11, 3, 1, "", "required_type"], [11, 5, 1, "", "validate_input_data_type"], [11, 5, 1, "", "validate_required_columns"], [11, 6, 1, "", "variables"]], "pyprobe.cell": [[12, 2, 1, "", "Cell"], [12, 1, 1, "", "make_cell_list"]], "pyprobe.cell.Cell": [[12, 4, 1, "", "add_procedure"], [12, 5, 1, "", "check_and_set_name"], [12, 3, 1, "", "info"], [12, 3, 1, "", "procedure"], [12, 4, 1, "", "process_cycler_file"], [12, 4, 1, "", "process_generic_file"]], "pyprobe.cyclers": [[14, 0, 0, "-", "arbin"], [15, 0, 0, "-", "basecycler"], [16, 0, 0, "-", "basytec"], [17, 0, 0, "-", "biologic"], [18, 0, 0, "-", "maccor"], [19, 0, 0, "-", "neware"]], "pyprobe.cyclers.arbin": [[14, 2, 1, "", "Arbin"]], "pyprobe.cyclers.arbin.Arbin": [[14, 3, 1, "", "column_dict"], [14, 3, 1, "", "datetime_format"], [14, 3, 1, "", "input_data_path"]], "pyprobe.cyclers.basecycler": [[15, 2, 1, "", "BaseCycler"]], "pyprobe.cyclers.basecycler.BaseCycler": [[15, 6, 1, "", "capacity"], [15, 6, 1, "", "capacity_from_ch_dch"], [15, 6, 1, "", "charge_capacity"], [15, 3, 1, "", "column_dict"], [15, 6, 1, "", "current"], [15, 6, 1, "", "cycle"], [15, 6, 1, "", "date"], [15, 3, 1, "", "datetime_format"], [15, 6, 1, "", "discharge_capacity"], [15, 6, 1, "", "event"], [15, 4, 1, "", "get_imported_dataframe"], [15, 5, 1, "", "import_and_validate_data"], [15, 3, 1, "", "input_data_path"], [15, 6, 1, "", "pyprobe_dataframe"], [15, 4, 1, "", "read_file"], [15, 6, 1, "", "step"], [15, 6, 1, "", "temperature"], [15, 6, 1, "", "time"], [15, 6, 1, "", "voltage"]], "pyprobe.cyclers.basytec": [[16, 2, 1, "", "Basytec"]], "pyprobe.cyclers.basytec.Basytec": [[16, 3, 1, "", "column_dict"], [16, 3, 1, "", "input_data_path"], [16, 4, 1, "", "read_file"]], "pyprobe.cyclers.biologic": [[17, 2, 1, "", "Biologic"], [17, 2, 1, "", "BiologicMB"]], "pyprobe.cyclers.biologic.Biologic": [[17, 3, 1, "", "column_dict"], [17, 3, 1, "", "input_data_path"], [17, 4, 1, "", "read_file"]], "pyprobe.cyclers.biologic.BiologicMB": [[17, 4, 1, "", "apply_step_correction"], [17, 4, 1, "", "get_imported_dataframe"]], "pyprobe.cyclers.maccor": [[18, 2, 1, "", "Maccor"]], "pyprobe.cyclers.maccor.Maccor": [[18, 6, 1, "", "capacity"], [18, 6, 1, "", "charge_capacity"], [18, 3, 1, "", "column_dict"], [18, 6, 1, "", "date"], [18, 3, 1, "", "datetime_format"], [18, 6, 1, "", "discharge_capacity"], [18, 3, 1, "", "input_data_path"], [18, 4, 1, "", "read_file"]], "pyprobe.cyclers.neware": [[19, 2, 1, "", "Neware"]], "pyprobe.cyclers.neware.Neware": [[19, 6, 1, "", "capacity"], [19, 6, 1, "", "charge_capacity"], [19, 3, 1, "", "column_dict"], [19, 6, 1, "", "discharge_capacity"], [19, 3, 1, "", "input_data_path"], [19, 4, 1, "", "read_file"], [19, 6, 1, "", "time"]], "pyprobe.dashboard": [[20, 1, 1, "", "launch_dashboard"]], "pyprobe.filters": [[21, 2, 1, "", "Cycle"], [21, 2, 1, "", "Experiment"], [21, 2, 1, "", "Procedure"], [21, 2, 1, "", "Step"]], "pyprobe.filters.Cycle": [[21, 3, 1, "", "base_dataframe"], [21, 4, 1, "", "charge"], [21, 4, 1, "", "chargeordischarge"], [21, 3, 1, "", "column_definitions"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 4, 1, "", "discharge"], [21, 3, 1, "", "info"], [21, 4, 1, "", "rest"], [21, 4, 1, "", "step"]], "pyprobe.filters.Experiment": [[21, 3, 1, "", "base_dataframe"], [21, 4, 1, "", "charge"], [21, 4, 1, "", "chargeordischarge"], [21, 3, 1, "", "column_definitions"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 4, 1, "", "cycle"], [21, 4, 1, "", "discharge"], [21, 3, 1, "", "info"], [21, 4, 1, "", "rest"], [21, 4, 1, "", "step"]], "pyprobe.filters.Procedure": [[21, 4, 1, "", "add_external_data"], [21, 3, 1, "", "base_dataframe"], [21, 4, 1, "", "charge"], [21, 4, 1, "", "chargeordischarge"], [21, 3, 1, "", "column_definitions"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 4, 1, "", "cycle"], [21, 4, 1, "", "discharge"], [21, 4, 1, "", "experiment"], [21, 6, 1, "", "experiment_names"], [21, 3, 1, "", "info"], [21, 4, 1, "", "load_external_file"], [21, 3, 1, "", "pybamm_experiment"], [21, 3, 1, "", "pybamm_experiment_list"], [21, 4, 1, "", "rest"], [21, 4, 1, "", "step"], [21, 3, 1, "", "steps_idx"], [21, 3, 1, "", "titles"]], "pyprobe.filters.Step": [[21, 3, 1, "", "base_dataframe"], [21, 3, 1, "", "column_definitions"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 3, 1, "", "info"], [21, 4, 1, "", "step"]], "pyprobe.plot": [[22, 7, 1, "", "Plot"]], "pyprobe.plot.Plot": [[22, 4, 1, "", "add_colorbar"], [22, 4, 1, "", "add_colorscaled_line"], [22, 4, 1, "", "add_line"], [22, 8, 1, "", "axis_font_size"], [22, 8, 1, "", "default_layout"], [22, 6, 1, "", "fig"], [22, 4, 1, "", "make_colorscale"], [22, 4, 1, "", "show"], [22, 4, 1, "", "show_image"], [22, 8, 1, "", "title_font_size"], [22, 6, 1, "", "x_range"], [22, 6, 1, "", "y2_range"], [22, 6, 1, "", "y_range"]], "pyprobe.rawdata": [[23, 2, 1, "", "RawData"]], "pyprobe.rawdata.RawData": [[23, 3, 1, "", "base_dataframe"], [23, 6, 1, "", "capacity"], [23, 5, 1, "", "check_required_columns"], [23, 3, 1, "", "column_definitions"], [23, 3, 1, "", "info"], [23, 4, 1, "", "set_SOC"], [23, 4, 1, "", "set_reference_capacity"], [23, 4, 1, "", "zero_column"]], "pyprobe.readme_processor": [[24, 2, 1, "", "ReadmeModel"], [24, 1, 1, "", "process_readme"]], "pyprobe.readme_processor.ReadmeModel": [[24, 5, 1, "", "check_readme_dict"], [24, 3, 1, "", "cycle_details"], [24, 3, 1, "", "number_of_experiments"], [24, 3, 1, "", "pybamm_experiment"], [24, 3, 1, "", "pybamm_experiment_descriptions"], [24, 3, 1, "", "pybamm_experiment_list"], [24, 3, 1, "", "readme_dict"], [24, 3, 1, "", "readme_type"], [24, 3, 1, "", "step_descriptions"], [24, 3, 1, "", "step_indices"], [24, 3, 1, "", "step_numbers"], [24, 3, 1, "", "titles"]], "pyprobe.result": [[25, 2, 1, "", "Result"]], "pyprobe.result.Result": [[25, 4, 1, "", "add_new_data_columns"], [25, 4, 1, "", "array"], [25, 3, 1, "", "base_dataframe"], [25, 4, 1, "", "build"], [25, 4, 1, "", "clean_copy"], [25, 3, 1, "", "column_definitions"], [25, 6, 1, "", "column_list"], [25, 6, 1, "", "contains_lazyframe"], [25, 6, 1, "", "data"], [25, 4, 1, "", "define_column"], [25, 4, 1, "", "get"], [25, 4, 1, "", "get_only"], [25, 3, 1, "", "info"], [25, 4, 1, "", "print_definitions"], [25, 6, 1, "", "quantities"]], "pyprobe.typing": [[26, 9, 1, "", "FilterToCycleType"], [26, 9, 1, "", "FilterToExperimentType"], [26, 9, 1, "", "FilterToStepType"], [26, 9, 1, "", "PyProBEDataType"], [26, 9, 1, "", "PyProBERawDataType"]], "pyprobe.units": [[27, 7, 1, "", "Units"], [27, 1, 1, "", "unit_from_regexp"]], "pyprobe.units.Units": [[27, 4, 1, "", "from_default_unit"], [27, 8, 1, "", "prefix_dict"], [27, 8, 1, "", "time_unit_dict"], [27, 4, 1, "", "to_default_unit"], [27, 8, 1, "", "unit_dict"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "pydantic_model", "Python model"], "3": ["py", "pydantic_field", "Python field"], "4": ["py", "method", "Python method"], "5": ["py", "pydantic_validator", "Python validator"], "6": ["py", "property", "Python property"], "7": ["py", "class", "Python class"], "8": ["py", "attribute", "Python attribute"], "9": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:pydantic_model", "3": "py:pydantic_field", "4": "py:method", "5": "py:pydantic_validator", "6": "py:property", "7": "py:class", "8": "py:attribute", "9": "py:data"}, "terms": {"": [10, 14, 18, 21, 23, 25, 27, 33, 35, 38, 39, 41, 42, 43, 46, 47, 49, 51, 52], "0": [8, 10, 27, 28, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 47, 51], "000001": 39, "000002": 39, "000003": 39, "000005": 39, "00001": 39, "00004": 39, "0004": 39, "0004023": 39, "00040614": 39, "000464": 39, "001": [27, 39], "001267": 39, "002": 36, "00399931": 39, "004": 34, "00400001": 39, "00400004": 39, "008001": 34, "012001": 34, "016001": 34, "018585": 39, "02": [39, 45], "020002": 34, "020355": 39, "020356": 39, "020357": 39, "020359": 39, "02036": 39, "0205": 40, "020824": 39, "022805": 39, "023979": 35, "024002": 34, "026056": 34, "028002": 34, "03": [39, 40], "030002": 40, "030003": 40, "032002": 34, "033062": 35, "036003": 34, "04": [33, 34, 35, 36, 38, 39, 41, 45, 51], "040937": 39, "041086": 39, "041138": 39, "041241": 39, "041247": 39, "041296": 39, "04132": 39, "041329": 39, "041362": 39, "04139": 39, "041391": 39, "041392": 39, "041393": 39, "041395": 39, "0428": 40, "04478": 40, "05": 39, "052115": 35, "06": [27, 39], "0668": 8, "080534": 40, "082022": 39, "09": [7, 27, 39, 45], "0909": 40, "094": 39, "0949": 34, "0x7fa120f11c50": 39, "0x7fbc175d2e50": 35, "0x7fbc1764ae50": 35, "0x7fbc17c08ed0": 35, "1": [5, 7, 8, 9, 18, 27, 28, 29, 33, 34, 35, 36, 38, 39, 40, 41, 43, 45, 46, 47, 51], "10": [5, 7, 8, 33, 34, 35, 36, 38, 39, 40, 41, 51], "100": [34, 35, 39], "1000": [27, 40], "1000000": 27, "100051": [5, 8, 33, 36], "1016": [5, 8, 33, 36], "1059": 8, "11": [32, 38, 39, 41, 47, 51], "1149": 40, "119273": 39, "12": [27, 32, 35, 38, 39, 41, 47, 51], "121": 8, "1234": [7, 40], "13": 39, "131485": 34, "14": [22, 35, 39, 40], "15": 40, "164407": 39, "167": 40, "17": [35, 39, 40], "1745": 8, "18": [22, 40], "19": 45, "191": 41, "1919": 34, "192": 41, "193": 41, "1945": 40, "197": 39, "1972": 8, "1d": [25, 39, 43], "1e": [27, 36], "2": [29, 33, 34, 35, 36, 38, 39, 40, 41, 43, 46, 49, 51], "20": [38, 39, 51], "2001": 39, "2020": [5, 8, 33, 36, 40], "2023": 7, "2024": [39, 45], "21": 39, "210305": 39, "227986": 34, "23": [35, 39], "24": 35, "2417": 8, "246969": 39, "248": 41, "2482": 40, "249": 41, "25": 8, "250": 41, "255": 41, "256": 41, "257": 41, "258": 41, "259": 41, "260": 41, "261": 41, "262": 41, "264": 41, "265": 41, "27": 40, "270001": 40, "27001": 40, "2769": 40, "28": 7, "28448": 39, "28449": 39, "28450": 39, "28451": 39, "28452": 39, "2895": 39, "29": [39, 40, 45], "292593": 35, "2962": 39, "2979": 39, "2f": 35, "3": [5, 8, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 46, 47, 51], "30": [38, 39, 40, 51], "301386": 39, "31": 39, "3117": 40, "3120": 40, "32": 39, "324487": 34, "329627": 39, "33": 39, "34": [39, 41], "345855": 34, "35": 39, "36": 39, "3600": [27, 35], "3631": 40, "37": 39, "378779": 35, "38": 39, "383": 8, "3830": 8, "39": [34, 36, 39, 40, 41], "390765": 34, "392471": 39, "393179": 39, "397": 39, "4": [29, 33, 34, 35, 36, 38, 39, 40, 41, 43, 49, 51], "40": 39, "400785": 34, "4023": 39, "40614": 39, "41": 39, "420988": 34, "4444": 40, "4513": 39, "455110": 39, "455111": 39, "455112": 39, "455113": 39, "455114": 39, "455_167": 39, "47": 39, "48": 39, "483558": 39, "483559": 39, "483560": 39, "483561": 39, "483562": 39, "4875": 40, "49": 39, "490732": 39, "495": 39, "497": 39, "4ma": [38, 39, 51], "5": [8, 29, 33, 34, 35, 36, 38, 39, 40, 41, 51], "50": 39, "500029": 40, "500426": 40, "51": 39, "5138": 40, "5164": 34, "517489": 34, "5281": 7, "554": 45, "5542": 40, "562745": 39, "562746": 39, "562747": 39, "562748": 39, "562749": 39, "565912": 34, "5711": 39, "58": 45, "5842": 40, "5866": 34, "591": 39, "6": [29, 33, 34, 35, 36, 38, 39, 40, 41, 51], "60": [27, 35], "600": 22, "6103": 40, "613991": 34, "614419": 35, "620704": 40, "621925": 40, "6334": 34, "640815": 34, "665": 34, "672765": 39, "685915": 34, "7": [8, 29, 33, 34, 35, 36, 38, 39, 40, 41, 51], "705558": 34, "705622": 34, "710493": 34, "7111": 40, "7114": 34, "7172": 39, "7197": 39, "7201": 39, "7205": 39, "7208": 39, "725532": 34, "7326": 40, "735555": 34, "735943": 34, "740624": 39, "743512": 39, "747055": 40, "747199": 40, "750596": 34, "775612": 34, "7890": 40, "789_589": 39, "795638": 34, "8": [33, 34, 35, 38, 39, 40, 41, 51], "800": 22, "8022": 34, "805578": 34, "805967": 34, "806994": 34, "8090": 40, "835632": 34, "849927": 40, "85": [35, 40], "8538": 40, "876766": 39, "8987": 34, "899992": 40, "9": [34, 35, 38, 39, 40, 41, 51], "900012": 40, "900663": 34, "903497": 34, "910931": 34, "9159": 40, "9308": 40, "959186": 39, "9793": 40, "9934": 34, "999212": 39, "99931": 39, "999406": 39, "999854": 39, "A": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 33, 35, 36, 38, 39, 41, 43, 45, 46, 51], "And": [34, 35, 39, 40], "As": [34, 41], "BY": [33, 36], "But": 41, "By": 29, "For": [18, 19, 21, 28, 29, 39, 41, 44, 45, 47, 49, 51], "If": [5, 7, 10, 11, 12, 21, 24, 25, 28, 29, 33, 39, 41, 45, 47, 48, 51], "In": [28, 29, 32, 40, 41, 44, 45, 47, 51], "It": [12, 23, 28, 29, 30, 32, 41, 43, 45, 47, 51, 52], "Its": 46, "No": 46, "On": [33, 47], "One": [38, 40], "Or": 43, "That": 38, "The": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 40, 41, 43, 45, 46, 47, 49, 50, 52], "Then": [29, 34, 43, 48, 49], "There": 51, "These": [12, 23, 29, 39, 41, 45, 48, 51], "To": [32, 33, 34, 42, 43, 44, 47, 51], "With": [34, 35], "_": 45, "__init__": 41, "__pydantic_validator__": 41, "__tracebackhide__": 41, "_check_column_dict": [14, 15, 16, 17, 18, 19], "_check_input_data_path": [14, 15, 16, 17, 18, 19], "_mb": 45, "ab9050": 40, "abl": [35, 38, 45, 46, 47], "about": [12, 21, 23, 25, 27, 41, 44, 45, 51, 52], "abov": [29, 33, 35, 51], "accept": 29, "access": [29, 39, 50], "acquisit": 46, "across": [22, 23, 30], "activ": [32, 47], "ad": [25, 31, 50], "add": [12, 17, 18, 21, 22, 23, 25, 28, 29, 34, 39, 45, 49, 51, 52], "add_colorbar": [1, 22], "add_colorscaled_lin": [1, 22], "add_external_data": [1, 21, 45], "add_lin": [1, 22, 33, 34, 36, 38, 39, 40, 41, 49], "add_new_data_column": [1, 25], "add_procedur": [1, 12, 33, 34, 35, 36, 38, 39, 41, 45], "addit": [29, 44, 45, 52], "addition": 48, "adjust": [28, 35], "after": [9, 34, 43, 45, 47], "ag": 40, "against": [35, 41], "agnost": [28, 45], "ah": [9, 16, 23, 27, 33, 34, 35, 36, 38, 39, 40, 41, 45, 46], "al": [5, 8, 33, 36], "algorithm": [4, 7, 37], "alia": [26, 35], "alias": [26, 29], "align": [33, 41], "all": [8, 10, 11, 15, 24, 25, 28, 29, 30, 33, 35, 43, 45, 48], "allclos": 35, "allow": [28, 29, 30, 33, 38, 44, 51], "alongsid": [29, 38, 39, 45, 51], "alpha": 5, "alreadi": 45, "also": [29, 34, 36, 40, 41, 44], "altern": [8, 36], "alwai": [29, 44], "amper": 46, "an": [4, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26, 27, 28, 29, 34, 36, 41, 42, 43, 44, 45, 48, 50, 51], "anaconda": 47, "analys": [33, 36, 37, 39, 51], "analysi": [0, 1, 30, 31, 33, 34, 35, 36, 37, 39, 40, 48, 50], "analysis_object": 44, "analysisclass": 44, "analysisvalid": [1, 2, 11, 29, 30, 41], "ani": [4, 11, 15, 24, 25, 28, 29, 32, 39, 41, 43, 44, 45, 47, 48, 49, 51], "anod": [4, 7, 29, 40], "anoth": [21, 28], "api": [42, 44], "app": 47, "appear": [38, 45], "appli": [5, 8, 21, 23, 36, 43], "applic": 33, "apply_step_correct": [13, 17], "approach": [5, 8, 33, 36, 43], "ar": [5, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 51], "arang": 35, "arbin": [1, 13, 46], "arg": [29, 41], "argsort": 35, "argument": [8, 9, 21, 34, 45, 49], "around": 35, "arrai": [1, 11, 22, 25, 29, 39, 43], "articl": [5, 8], "assembl": 11, "assemble_arrai": [1, 2, 11], "assert": 35, "assign": [29, 44, 45], "assum": [5, 8, 10, 12, 45, 46], "asterisk": [12, 14, 15, 16, 17, 18, 19, 28], "attribut": [25, 29, 43, 44, 45, 48], "auto": 46, "automat": [28, 30, 32, 34, 46, 52], "aux_temperature_1": [14, 46], "avail": [12, 38, 40, 44, 47], "averag": [4, 7, 35, 41], "average_differ": 35, "average_ocv": [2, 7, 41], "average_ocv_curv": [2, 3, 4], "averaged_ocv_dma": 41, "ax1": 35, "ax2": 35, "axi": [22, 35], "axis_font_s": [1, 22], "b": 18, "back": 30, "backend": 35, "base": [1, 2, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 31, 36, 41, 43, 46, 49], "base_": 41, "base_datafram": [1, 21, 23, 25, 39, 40, 41, 46], "basecycl": [1, 13, 14, 16, 17, 18, 19, 28], "basemodel": [6, 7, 8, 9, 10, 11, 12, 15, 24, 25, 28, 29, 30, 41], "basytec": [1, 13, 46], "bat": [12, 17, 45, 46], "batch": 50, "batteri": [5, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 21, 28, 33, 34, 35, 36, 40, 45, 51], "batterydat": 7, "bbox_to_anchor": 35, "becaus": [35, 41], "been": [12, 35, 39, 44, 45], "befor": [6, 21, 45, 47, 51], "begin": [7, 28, 33, 39, 41, 45], "behaviour": 33, "behind": [30, 35, 41], "being": [28, 47], "below": [28, 29, 33, 35, 46, 47, 48], "benefit": 35, "between": [4, 7, 10, 45], "bin": [5, 8, 32, 47], "biolog": [1, 12, 13, 28, 45, 46], "biologic_mb": [12, 45, 46], "biologicmb": [1, 13, 17, 28], "blue": [33, 34, 35, 36, 38, 41], "bool": [6, 10, 22, 25], "bor": [5, 8], "both": 41, "bound": 22, "boxplot": 35, "branch": 48, "break": [33, 34, 35, 36, 38, 39, 41, 51], "break_in": 38, "breakdown": 35, "browser": 48, "buffer": 22, "build": [1, 25, 48], "built": [29, 34, 35, 40, 45, 48, 52], "c": [27, 33, 36, 39, 46], "caihao": [5, 8], "calc_electrode_capac": [2, 3, 4, 29], "calc_full_cell_ocv": [2, 3, 4], "calc_gradient_with_lean": [2, 3, 5], "calcul": [3, 4, 5, 6, 8, 9, 15, 18, 19, 23, 29, 34, 41], "calculate_dma_paramet": [2, 3, 4], "call": [12, 21, 23, 29, 32, 34, 35, 39, 41, 43, 44, 47], "can": [8, 21, 23, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 51], "cap": [19, 46], "capabl": 42, "capac": [1, 4, 6, 7, 9, 13, 14, 15, 16, 17, 18, 19, 23, 27, 28, 29, 33, 34, 35, 36, 38, 39, 40, 41, 45, 46], "capacity_from_ch_dch": [13, 15], "care": 35, "carefulli": 34, "case": [28, 38, 46], "cathod": [4, 7, 29, 40], "caus": 30, "cc": [38, 51], "cc_charg": 38, "cc_discharg": 38, "cd": [32, 47, 48], "cell": [0, 1, 4, 6, 7, 9, 20, 21, 23, 25, 29, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52], "cell_capac": [4, 29], "cell_list": [20, 45], "ch": 40, "chain": [30, 43], "chang": [7, 15, 28, 32, 39, 46], "changyong": [5, 8], "channel": [12, 33, 34, 35, 36, 38, 39, 41, 45], "characteris": 36, "charg": [1, 4, 6, 7, 14, 15, 17, 18, 19, 21, 23, 28, 33, 34, 38, 39, 41, 43, 44, 46, 49, 51], "charge_capac": [4, 13, 15, 18, 19], "charge_curr": 4, "charge_differenti": 33, "charge_dqdv": 33, "charge_filt": [7, 41], "charge_numb": 21, "charge_ocv": 4, "charge_result": 7, "charge_soc": 4, "chargeordischarg": [1, 21, 43], "chargeordischarge_numb": 21, "check": [11, 12, 23, 29, 30, 41], "check_and_set_nam": [1, 12], "check_readme_dict": [1, 24], "check_required_column": [1, 21, 23], "checkout": 47, "chemistri": [33, 34, 35, 36, 38, 39, 41, 45], "chen": 40, "chen2020": 40, "chg": [19, 46], "choos": [33, 45, 51], "chrono": [14, 15, 18], "circuit": [4, 7, 40], "class": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 37, 39, 42, 43, 44, 46, 49, 52], "classmethod": 25, "clean": 29, "clean_copi": [1, 25, 29], "clearer": 41, "clearli": [29, 36], "clone": [32, 47], "code": [7, 29, 32, 47], "coeffici": [5, 8], "collect": 45, "color": [12, 22, 33, 34, 35, 36, 38, 39, 40, 41], "color_bi": 22, "color_bound": 22, "colorbar": 22, "colormap": 22, "colorscal": 22, "column": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 28, 29, 30, 34, 35, 39, 41, 43, 44, 45, 50, 52], "column_definit": [1, 21, 23, 25, 29, 39], "column_dict": [12, 13, 14, 15, 16, 17, 18, 19, 28], "column_list": [1, 25, 36], "column_nam": 25, "com": [5, 8, 32, 47], "come": [6, 41], "comma": 51, "command": [30, 39, 47, 48], "comment": [33, 36, 38, 39, 40, 41], "commit": 32, "compar": [30, 36, 37], "compat": [29, 48], "complet": [28, 40, 47, 52], "comput": [10, 29, 33, 35, 44], "concat": 35, "concaten": 28, "conda": [32, 47], "condit": 21, "conduct": [11, 29, 40], "confirm": 35, "consid": [8, 21, 38, 51], "constant": [8, 21, 38], "constant_curr": [1, 21, 33, 38, 41], "constant_current_numb": 21, "constant_voltag": [1, 21, 38], "constant_voltage_numb": 21, "construct": [29, 30, 38], "consum": 51, "contain": [4, 5, 7, 8, 9, 10, 12, 15, 21, 22, 23, 24, 25, 29, 38, 40, 41, 43, 44, 45, 48, 51], "contains_lazyfram": [1, 25], "content": [24, 28], "continu": [22, 48], "contribut": [30, 31, 42, 44], "control": 47, "convers": [27, 28, 33, 35, 46], "convert": [12, 21, 27, 28, 37, 43, 46, 50], "copi": [25, 28, 29], "correct": [17, 30, 41], "correctli": 30, "correspond": [27, 45, 46, 51], "coulomb": 39, "count": [5, 38, 39, 43, 51], "cover": 35, "crate": [14, 15, 18], "creat": [20, 22, 25, 27, 29, 32, 33, 34, 35, 36, 38, 39, 41, 44, 45, 47, 49, 52], "critic": 30, "csv": [21, 35, 45, 46], "csv_time": 35, "csv_time_panda": 35, "cumbersom": 51, "cumul": 35, "cumulative_tim": 35, "current": [9, 13, 14, 15, 16, 17, 18, 19, 21, 23, 27, 28, 35, 38, 39, 41, 43, 44, 46], "current_ma": [39, 43], "curv": [4, 7, 10, 33, 36, 40, 41], "custom": 30, "customiz": 52, "cv": [38, 51], "cv_hold": 38, "cycl": [0, 1, 2, 7, 8, 11, 13, 15, 21, 23, 24, 25, 26, 33, 34, 35, 36, 38, 39, 41, 43, 44, 45, 46, 49, 51], "cycle_3": 38, "cycle_detail": [1, 24], "cycle_incr": 35, "cycle_numb": 21, "cycle_rep": 35, "cycler": [0, 1, 12, 31, 33, 34, 35, 36, 38, 39, 41, 50, 51], "cycler_fil": 45, "cycler_file_": 45, "cycler_file_1": 45, "cycler_file_2": 45, "d": [14, 18, 29, 33, 36, 40], "dai": 35, "dash": [22, 36, 40], "dashboard": [0, 1, 39, 47], "dashdot": 22, "data": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 35, 37, 40, 41, 44, 47, 48, 49, 50, 51], "data_directori": [33, 34, 35, 36, 38, 39, 41], "data_list": 25, "datafram": [15, 16, 17, 18, 19, 21, 22, 23, 25, 28, 29, 30, 35, 39, 40, 41, 43], "dataframe_list": [15, 17], "datapoint": 8, "dataset": [33, 35, 36, 38, 41, 45], "datatyp": 46, "date": [13, 14, 15, 16, 17, 18, 19, 21, 25, 28, 39, 45, 46], "date_column_nam": [21, 25], "datetim": [21, 39, 45, 46], "datetime_format": [13, 14, 15, 16, 17, 18, 19], "dchg": [19, 46], "dchg_before_chg": 6, "deal": 41, "declar": [28, 29], "decreas": [15, 46], "deeper": 41, "def": [29, 35, 40, 45], "default": [6, 7, 8, 10, 12, 19, 21, 23, 27, 29, 33, 45, 46], "default_layout": [1, 22], "default_tim": 35, "defin": [3, 15, 23, 25, 28, 29, 34, 40, 41, 45, 51], "define_column": [1, 25], "definit": [21, 23, 25, 29], "degrad": [4, 7, 29, 35, 36, 40, 44, 45], "degradation_mode_analysi": [1, 2, 40, 41], "degradation_mode_analysis_funct": [2, 3, 29], "delai": 35, "delta": [5, 8, 23], "demonstr": [30, 34, 35, 41], "depend": [8, 31, 32, 44, 47], "deriv": 10, "describ": [8, 25, 29, 36, 39, 45, 48, 51], "descript": [24, 38, 45, 51], "design": [43, 44], "desir": [10, 47], "desktop": 47, "detail": [24, 45, 51, 52], "dev": [32, 41], "develop": [32, 33, 40, 42, 44, 48], "df": [17, 35], "diagnosi": [5, 8, 33, 36], "dict": [12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 41, 45], "dictionari": [12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 29, 39, 41, 43, 45, 48, 52], "diff": 33, "differ": [8, 29, 36, 39, 45, 51], "differenti": [1, 2, 5, 29, 37, 40], "differential_evolut": 7, "differentiate_fd": [2, 8, 29, 36], "differentiate_lean": [2, 8, 33, 36], "differentiation_funct": [2, 3], "differentiation_object": 36, "dimension": 43, "direct": [29, 44], "directli": [43, 47], "directori": [32, 45, 47], "discharg": [1, 4, 6, 7, 14, 15, 17, 18, 19, 21, 28, 33, 34, 35, 36, 38, 39, 41, 43, 44, 46, 51], "discharge_capac": [4, 13, 15, 18, 19], "discharge_curr": 4, "discharge_differenti": [33, 36], "discharge_dqdv": 33, "discharge_filt": [7, 41], "discharge_numb": 21, "discharge_ocv": 4, "discharge_pocv": 44, "discharge_result": [7, 41], "discharge_soc": 4, "discret": [5, 8, 22, 33, 36], "displai": [20, 39, 48, 49], "distinguish": [45, 52], "dma": [1, 2, 4, 7, 29, 40, 41, 44], "dma_object": [40, 44], "dma_result": [2, 7, 29], "do": [28, 30, 45, 47], "doc": [39, 48], "document": [14, 15, 18, 29, 33, 36, 38, 39, 40, 41, 44, 49, 50, 51], "doe": [28, 45], "doesn": 34, "doi": [5, 7, 8, 33, 36, 40], "done": [28, 29, 32, 45], "dongsheng": [5, 8], "dot": 22, "down": 38, "dpt": [18, 46], "dqdv": [7, 40], "dropdown": 47, "dsocdv": 40, "dt": 33, "dtype": [4, 11], "due": [35, 36], "dva": 36, "dvdq": 7, "dx": 8, "dxdy": [5, 8, 29, 33, 36], "dy": [5, 8], "dydx": [5, 8, 29, 36], "e": [12, 22, 28, 32, 40, 41, 43, 45, 46, 51], "each": [7, 9, 21, 24, 28, 29, 45, 51], "easi": [29, 45, 48], "easiest": 47, "easili": [29, 36], "ecel": [17, 28, 46], "edit": [32, 47], "effect": 36, "effici": 39, "either": [5, 8, 19, 23, 29, 32, 43], "elaps": [39, 46], "electrochem": 40, "electrod": [4, 7, 29, 40], "elif": 29, "els": 29, "enabl": 51, "encourag": [29, 41], "end": [28, 30, 38, 51], "enough": 29, "ensur": [28, 29, 41], "enter": [32, 47], "entir": 38, "environ": [32, 39, 47], "error": [30, 41, 44, 51], "et": [5, 8, 33, 36], "etc": [29, 43, 45], "etran": [5, 8, 33, 36], "etransport": [5, 8, 33, 36], "evalu": [8, 9, 30, 34], "evenli": 8, "event": [13, 15, 21, 23, 35, 39, 41, 46], "event_incr": 35, "event_rep": 35, "everi": [25, 43], "exampl": [8, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 44, 45, 47, 51, 52], "excel": [12, 21, 45, 52], "except": 35, "execut": [30, 35], "exist": [19, 25, 28, 29, 39, 41, 44], "exp": 40, "experi": [0, 1, 6, 7, 8, 9, 11, 12, 21, 24, 26, 33, 34, 35, 36, 38, 39, 41, 43, 44, 45, 49, 50, 51], "experiment": [5, 8, 10, 21, 29, 36, 40, 43, 44, 45, 48, 51, 52], "experiment_fold": 45, "experiment_nam": [1, 21, 34], "experiment_object": 41, "experiment_record": 45, "explor": [36, 42], "expr": [15, 18, 19, 21, 27], "express": [15, 18, 19, 21, 27, 30], "extens": [28, 51], "extern": 21, "extract": [28, 34, 38], "f": [14, 29, 35, 45], "f64": [34, 39, 40], "factor": [27, 35], "fals": [10, 25, 35], "familiar": 43, "faster": 35, "fastest": 45, "fb": 40, "feng": [5, 8, 33, 36], "fetch": 47, "few": 35, "ff00ff": 39, "field": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 29, 39, 44, 45], "fig": [1, 22, 33, 34, 35, 36, 38, 40, 41], "figsiz": 35, "figur": [22, 35, 39, 40], "file": [12, 15, 16, 17, 18, 19, 21, 24, 28, 35, 38, 39, 41, 43, 46, 50, 52], "filenam": [12, 33, 34, 35, 36, 38, 39, 41, 45], "filename_funct": 12, "filename_input": [12, 45], "filepath": [15, 16, 17, 18, 19, 21], "fill": [25, 45], "filter": [0, 1, 8, 10, 23, 25, 26, 30, 33, 34, 35, 37, 39, 41, 44, 45, 46, 48, 50, 51], "filtering_column_nam": 25, "filtertocycletyp": [0, 1, 21, 26, 41], "filtertoexperimenttyp": [0, 1, 21, 26], "filtertosteptyp": [0, 1, 26], "final": [30, 34, 35], "final_cycl": [33, 36], "finit": [8, 29, 36], "first": [9, 18, 23, 25, 29, 33, 34, 36, 39, 43, 45, 49, 51], "fit": [4, 7, 10, 29, 37], "fit_ocv": [2, 7, 29, 40, 44], "fitted_curv": 40, "fitted_ocv": [2, 7, 29], "fitting_target": [4, 7, 40], "fitting_target_data": 4, "fix": 23, "flag": 32, "float": [4, 5, 8, 9, 10, 12, 21, 22, 23, 25, 27, 29], "float64": [4, 5, 7, 11, 22, 25, 46], "flowchart": 48, "fly": 33, "folder": [12, 45], "folder_path": [12, 33, 34, 35, 36, 38, 39, 41, 45], "follow": [17, 28, 29, 30, 32, 41, 45, 46, 47, 48, 51, 52], "font": 22, "fontsiz": 35, "fork": 32, "form": [28, 29], "format": [12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 28, 29, 35, 37, 41, 47, 50], "found": 30, "frac": 8, "framework": 30, "from": [7, 9, 10, 11, 12, 15, 17, 18, 19, 21, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 46, 47, 48, 50, 51], "from_default_unit": [1, 27], "full": [4, 7, 34, 40, 43], "full_procedur": 38, "function": [3, 4, 5, 7, 8, 12, 13, 20, 22, 24, 28, 29, 36, 38, 41, 44, 45], "further": [23, 29, 38, 39, 41, 44, 48], "g": [12, 22, 28, 45], "gastol": 40, "gener": [12, 22, 40, 44, 45, 46, 48, 51], "get": [1, 5, 25, 33, 35, 37, 41, 42, 43, 47], "get_dx": [2, 3, 5], "get_dy_and_count": [2, 3, 5], "get_imported_datafram": [13, 15, 17, 28], "get_onli": [1, 25], "get_x_sect": [2, 3, 5], "git": [32, 47], "github": [32, 47], "gitt": 37, "give": [12, 29, 36], "given": [45, 51], "go": [22, 28, 33, 34, 36, 40], "golai": 10, "good": [29, 47], "gradient": [5, 8, 10, 29, 33, 36], "gradient_data": 29, "gradient_result": 29, "gradient_titl": 29, "graphit": 40, "graphite_lgm50_ocp_chen2020": 40, "green": [36, 38], "gregori": [5, 8], "gt": [35, 39, 41], "guess": [4, 7], "guid": [28, 42, 44, 48], "guidanc": [45, 50], "h": [14, 27], "ha": [25, 29, 33, 35, 36, 39, 40, 41, 43, 45, 47, 49], "half": [4, 7, 40], "han": [5, 8], "hand": 35, "happen": 41, "have": [12, 21, 28, 29, 43, 44, 45, 47], "he": [5, 8, 33, 36], "head": 28, "header": [28, 46], "health": 6, "height": 22, "hello": 47, "help": [29, 41, 52], "here": 29, "high": 40, "highest": [4, 29], "highli": 51, "hint": 26, "hold": [23, 25, 38, 39, 43, 51], "hook": 32, "hostedtoolcach": 41, "hour": [38, 39, 46, 51], "how": [33, 41, 42, 48], "howev": [28, 29, 33, 34, 41], "hr": [27, 33, 34, 36], "html": 48, "http": [5, 8, 32, 33, 36, 40, 41, 47], "huang": [5, 8], "human": 51, "i": [5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52], "i64": 39, "ica": 36, "identifi": [15, 18, 19, 41, 45, 46, 51], "illustr": 35, "imag": 22, "immedi": 39, "imperialcollegelondon": [7, 32, 47], "implement": [35, 44], "import": [13, 15, 17, 21, 28, 30, 33, 34, 35, 36, 38, 39, 40, 41, 43, 46, 47, 50, 51], "import_and_validate_data": [13, 14, 15, 16, 17, 18, 19], "importing_column": 21, "includ": [8, 9, 12, 25, 28, 29, 34, 43, 45, 46, 51, 52], "inclus": [38, 51], "incorrect": 44, "incorrect_data_dict": 41, "incorrect_datafram": 41, "increas": [15, 17, 35, 46, 51], "increment": [35, 36], "index": [14, 19, 25, 28, 38, 43, 46, 48, 51], "indic": [12, 14, 15, 16, 17, 18, 19, 21, 24, 25, 28, 43], "individu": [34, 39, 43], "info": [1, 12, 21, 23, 25, 29, 33, 34, 35, 36, 38, 39, 40, 41, 43, 45, 48, 52], "info_dictionari": [33, 34, 35, 36, 38, 39, 41, 45], "inform": [12, 14, 15, 18, 21, 23, 25, 27, 29, 41, 45, 51, 52], "inherit": [28, 29, 30, 41], "initi": [4, 7, 34, 35, 38, 39, 51], "initial_charg": 38, "initialis": 47, "inlin": 35, "inner": 51, "input": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 29, 30, 37, 40, 48, 50], "input_data": [2, 6, 7, 8, 9, 10, 11, 23, 29, 33, 34, 36, 39, 40, 41, 44], "input_data_path": [13, 14, 15, 16, 17, 18, 19, 28], "input_filenam": [12, 35, 39, 45], "input_name_gener": 45, "input_quant": 27, "input_typ": 41, "input_unit": 27, "input_valu": 41, "insid": [29, 32], "instal": [31, 50], "instanc": [11, 27, 29, 34, 41, 44, 45, 49, 51], "instanti": 44, "instead": [29, 33, 35, 51], "instruct": [34, 38, 46, 47, 51], "int": [5, 8, 9, 10, 12, 21, 23, 24, 25], "int64": 46, "integ": [5, 8, 10, 24], "integr": 44, "intens": 35, "interact": [29, 30, 33, 36, 38, 39, 40, 41], "interfac": 43, "intern": 44, "interpol": [21, 25, 45], "interpret": [21, 45], "interv": [5, 8, 10, 36], "introduct": [42, 50], "inventori": [4, 29, 40], "ion": 40, "is_instance_of": 41, "isin": 35, "its": [28, 29, 35, 38, 45, 51], "itself": 29, "j": [5, 8, 33, 36], "jin": [5, 8], "join": 25, "journal": 40, "jupyt": 47, "just": [8, 28, 51], "k": [5, 8, 27, 33, 36, 40], "keep": [29, 52], "kei": [9, 12, 21, 24, 25, 34, 39, 40, 45, 52], "kendrick": 40, "keyword": [45, 51], "kirkaldi": 7, "know": 41, "label": [22, 33, 34, 35, 36, 38, 40, 41], "lam_n": [4, 7], "lam_p": [4, 7], "languag": [38, 43], "languang": [5, 8], "larg": [28, 35], "last": [33, 35, 36, 41, 51], "later": [29, 32, 47], "launch": [20, 39, 47], "launch_dashboard": [0, 1, 20, 39], "layout": [22, 35], "laz": 41, "lazi": [30, 35], "lazyfram": [15, 16, 17, 18, 19, 21, 23, 25, 30, 39, 41], "lean": [8, 36, 37], "lean_dqdv": 36, "learn": 42, "least": 7, "legend": [22, 35], "len": 35, "length": [10, 21, 35], "lenient": 29, "less": 43, "level": [8, 36], "level_smooothed_data": 36, "level_smooth": [2, 10, 36], "level_smoothed_data_dvdq": 36, "li": [5, 8, 40], "li_inventori": [4, 29], "liaw": [5, 8, 33, 36], "lib": 41, "librari": [34, 35], "life": [7, 45], "light": [8, 29], "like": [28, 30, 38, 41, 45, 46], "limit": [4, 7, 29, 40, 51], "line": [16, 22, 41, 46, 47, 49, 51], "linestyl": 35, "linspac": 40, "linux": 47, "list": [5, 8, 9, 11, 12, 15, 17, 20, 21, 22, 24, 25, 28, 34, 38, 45, 47, 51, 52], "lithium": [4, 29, 40], "littl": 29, "liu": [5, 8], "ll": 34, "lli": [4, 7], "load": [14, 15, 16, 17, 18, 19, 21, 23, 28, 39], "load_external_fil": [1, 21], "loc": 35, "local": [32, 39, 47, 48], "log": 35, "log_scal": 35, "longest": [8, 33], "look": [33, 36, 46, 51], "loop": [6, 38, 51], "low": 40, "lowest": [4, 29], "lt": [35, 39, 41], "lu": [5, 8], "m": [14, 18, 27, 32, 33, 36, 47], "ma": [38, 39, 43, 51], "mac": 47, "maccor": [1, 13, 46], "machin": [32, 47], "made": 35, "mah": 33, "mai": [12, 28, 29, 41, 44, 45], "main": [25, 30, 32, 38, 41, 45, 48], "make": [12, 28, 32, 42, 48, 50], "make_boxplot": 35, "make_cell_list": [0, 1, 12, 45], "make_colorscal": [1, 22], "manag": 47, "manipul": [29, 30], "manual": 35, "manufactur": 45, "map": [12, 14, 15, 16, 17, 18, 19], "mark": 46, "marker": 35, "match": [27, 35, 45], "mathemat": 29, "matplotlib": [35, 40], "matrix": 8, "max": 35, "maximum": [17, 21, 23], "mb": 17, "mean": [30, 32, 38, 45], "measur": [35, 46], "measure_panda": 35, "measure_pyprob": 35, "median": [9, 35], "median_total_time_idx_panda": 35, "median_total_time_idx_pyprob": 35, "median_total_time_panda": 35, "median_total_time_pyprob": 35, "mengchao": [5, 8], "menu": 47, "merla": [5, 8, 33, 36], "metadata": 48, "method": [2, 7, 8, 10, 17, 21, 23, 25, 28, 30, 31, 33, 34, 35, 36, 39, 40, 41, 43, 44, 45, 48], "method_paramet": 44, "metric": 34, "midpoint": 5, "might": [30, 46], "min": 27, "minggao": [5, 8], "minim": 7, "minimum": 10, "minut": [38, 39, 51], "miss": [11, 25, 41], "mode": [4, 7, 29, 32, 40, 44], "model": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 30, 40, 45], "model_typ": 41, "modifi": 28, "modul": [0, 1, 2, 3, 13, 28, 30, 31, 39, 41, 42, 43, 44, 48, 49], "modulo": [12, 17, 45, 46], "modulobat": 28, "monoton": [10, 17, 36], "more": [14, 15, 18, 25, 29, 41, 43, 45], "most": [28, 29, 30, 35, 41, 51], "mpt": [45, 46], "much": [35, 41], "multi": 40, "multipl": [5, 8, 28, 29, 30, 33, 35, 36, 39, 43, 50, 51, 52], "must": [10, 12, 21, 25, 29, 32, 34, 35, 39, 41, 44, 45, 47, 51], "n": [17, 27, 28, 32, 43, 46, 47], "n_pt": 40, "n_repeat": 35, "name": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 27, 29, 33, 34, 35, 36, 38, 39, 41, 43, 44, 45, 46, 47, 49, 51, 52], "natur": [38, 43], "navig": 48, "ndarrai": [4, 5, 7, 11, 22, 25, 29, 39], "ne_capac": [4, 29], "ne_stoich_limit": 4, "neccessari": 29, "necessari": 40, "need": [28, 29, 35, 44, 47, 52], "neg": [18, 19, 40], "nest": 51, "net": [23, 39], "never": 41, "new": [23, 25, 28, 35, 47], "new_column_definit": 23, "new_column_nam": 23, "new_data": 25, "newar": [1, 12, 13, 14, 18, 33, 34, 35, 36, 38, 39, 41, 45, 46, 51], "niall": 7, "nmc": 40, "nmc622": [33, 34, 35, 36, 38, 39, 41, 45], "nmc_lgm50_ocp_chen2020": 40, "nois": 36, "noisi": [8, 10], "nomin": [33, 34, 35, 36, 38, 39, 41, 45], "none": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 41], "normal": [35, 39, 40, 41, 45], "notat": 43, "note": 28, "notebook": 47, "notic": 41, "now": [35, 36, 40, 41], "np": [4, 5, 7, 11, 22, 25, 29, 33, 35, 36, 38, 40], "null": 39, "number": [9, 12, 15, 17, 24, 28, 29, 33, 34, 35, 36, 38, 39, 40, 41, 43, 45, 46, 51], "number_of_experi": [1, 24], "numer": [21, 43], "numpi": [8, 25, 29, 33, 35, 36, 38, 39, 40, 43], "o": [35, 40], "object": [6, 7, 8, 9, 10, 12, 20, 21, 22, 23, 24, 25, 27, 29, 33, 34, 36, 38, 39, 40, 41, 44, 48, 49, 50], "ocp": [4, 7, 40], "ocp_n": [4, 7, 40, 44], "ocp_p": [4, 7, 40, 44], "ocv": [4, 7, 9, 29, 33, 34, 36, 37, 41, 44], "ocv_curve_fit": [2, 3, 4], "ocv_result": 40, "odd": 10, "offer": [5, 8, 36], "often": 29, "ohm": [9, 27, 34], "omit": 41, "onc": [28, 35, 39, 44, 45, 46, 48], "one": [25, 28, 35, 41, 43, 47, 51], "onli": [28, 29, 30, 33, 34, 35, 41, 45, 52], "open": [4, 7, 38, 40, 47, 48], "opt": 41, "optim": [4, 7, 35], "option": [7, 8, 10, 12, 18, 19, 21, 23, 24, 25, 29, 33], "order": [10, 45, 47], "org": [5, 8, 33, 36, 40], "origin": [35, 39], "other": [12, 23, 29, 41, 44, 49], "otherwis": 25, "our": [34, 35, 40], "out": [33, 34, 36, 38, 39, 40, 41, 51], "outer": 51, "output": 45, "output_filenam": [12, 35, 39, 45], "output_name_gener": 45, "outsid": [39, 41], "ouyang": [5, 8, 33, 36], "overal": 35, "overhead": 35, "overrid": 28, "own": [28, 29, 32, 38, 45, 51], "p": [18, 27], "packag": [0, 29, 32, 33, 36, 41, 47], "pair": 45, "panda": 35, "pandas_tim": 35, "pandas_voltag": 35, "paper": [5, 8], "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 34, 44], "parameter": 40, "parametr": 45, "parquet": [12, 21, 33, 34, 35, 36, 38, 39, 41, 45], "pars": 28, "part": [39, 44, 51], "particular": [41, 48], "particularli": 51, "pass": [23, 29, 39, 43, 44, 46], "patch_artist": 35, "patel": [5, 8], "path": [12, 14, 15, 16, 17, 18, 19, 21, 24, 32, 45, 47], "pattern": [27, 45], "pd": 35, "pe_capac": [4, 29], "pe_stoich_limit": 4, "peng": [5, 8], "perform": [21, 28, 29, 30, 37, 41, 44, 45], "period": [33, 35], "perman": 23, "pii": [5, 8], "ping": [5, 8], "pip": [32, 47], "pl": [15, 16, 17, 18, 19, 21, 23, 25, 27, 29, 35, 40, 41], "place": 47, "planella": 40, "plot": [0, 1, 30, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 48, 50, 52], "plotli": [22, 49], "plt": [35, 40], "pocv": [41, 44], "pocv_cycl": 41, "point": [8, 9, 10, 22, 29, 34, 39], "polar": [15, 18, 19, 21, 23, 25, 31, 35, 40, 41, 43, 46], "polynomi": 10, "polynomial_ord": 10, "polyord": 10, "poor": 36, "popul": [29, 45], "popular": [35, 36, 47], "portabl": 29, "posit": [10, 18, 19, 40], "possibl": [29, 43], "potenti": [4, 7], "power": 38, "pre": 32, "prefix": 27, "prefix_dict": [1, 27], "preprocess": [20, 50], "presenc": 23, "present": [11, 12, 14, 15, 18, 23], "prevent": 41, "previou": [17, 38, 51], "previous": 45, "principl": 30, "print": [25, 30, 33, 34, 35, 36, 38, 39, 40, 41, 45], "print_definit": [1, 25], "prior": 36, "problem": 41, "procedur": [0, 1, 6, 7, 8, 9, 11, 12, 21, 26, 33, 34, 35, 36, 38, 39, 41, 43, 44, 45, 48, 49, 51], "procedure_nam": [12, 33, 34, 35, 36, 38, 39, 41, 45], "process": [14, 15, 16, 17, 18, 19, 24, 28, 29, 35, 43, 45, 46, 47, 48], "process_cycler_fil": [1, 12, 35, 39, 45], "process_generic_fil": [1, 12], "process_readm": [0, 1, 24], "processed_cycler_fil": 45, "processed_cycler_file_": 45, "processed_cycler_file_cycl": 45, "processed_cycler_file_rpt": 45, "produc": [12, 40, 48], "program": 46, "prompt": 47, "properti": [11, 15, 18, 19, 21, 22, 23, 25, 28, 39], "protocol": 45, "provid": [7, 8, 9, 23, 25, 29, 30, 34, 37, 38, 39, 44, 45, 46, 51], "pseudo": [33, 36, 44], "puls": [1, 2, 33, 34, 38, 39, 51], "pulse_numb": 9, "pulse_object": 34, "pulse_rest": [2, 9, 33], "pulse_summari": [2, 9, 34], "pulsing_experi": 34, "purpl": [38, 41], "purpos": 51, "put": 40, "py": 41, "pybamm": [21, 24, 38, 39, 51], "pybamm_experi": [1, 21, 24, 39], "pybamm_experiment_descript": [1, 24], "pybamm_experiment_list": [1, 21, 24, 39], "pydant": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 28, 29, 31, 41], "pyplot": [35, 40], "pyprb": 24, "pyprob": [28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 47, 49, 50, 52], "pyprobe_datafram": [13, 15], "pyprobe_tim": 35, "pyprobe_voltag": 35, "pyprobedatatyp": [0, 1, 26, 29], "pyproberawdatatyp": [0, 1, 26], "pytest": 41, "python": [32, 38, 41, 43, 47], "python3": 41, "q": [17, 28, 46], "quantifi": 7, "quantify_degradation_mod": [2, 7, 29], "quantiti": [1, 25, 27, 49], "queri": 35, "quickli": [38, 39], "r": [5, 8, 32, 38, 47], "r0": [9, 34], "r_10": 34, "r_time": [9, 34], "rais": [5, 11, 24, 25, 29], "rang": [21, 22, 35, 40], "rate": 8, "raw": [26, 36, 39], "raw_data_dvdq": 36, "rawdata": [0, 1, 7, 8, 11, 21, 26, 30, 37, 46, 49, 50], "re": [28, 33, 35, 36], "read": [12, 15, 16, 17, 18, 19, 28, 29, 35, 38, 44], "read_csv": 35, "read_fil": [13, 15, 16, 17, 18, 19, 28], "read_parquet": 35, "readabl": [29, 51], "reader": 45, "readm": [12, 24, 38, 43, 45, 50], "readme_dict": [1, 24], "readme_nam": 12, "readme_path": 24, "readme_processor": [0, 1], "readme_typ": [1, 24], "readmemodel": [0, 1, 24], "real": 51, "reason": 34, "recent": 41, "recogn": 28, "recommend": [32, 47, 51], "record": [12, 45, 50], "record_filepath": [12, 45], "red": [33, 34, 35, 36, 38, 40, 41], "reduc": 28, "refer": [5, 7, 8, 23, 34, 45], "referenc": 23, "reference_capac": 23, "reference_charg": [23, 34], "reference_stoichiometry_limit": 7, "reflect": 32, "regan": 40, "regular": 27, "regular_express": 27, "rel": [23, 46], "relat": [28, 52], "releas": [7, 47, 48], "reliabl": [5, 8, 33, 36], "remain": [23, 29], "remov": [18, 19, 25, 35, 36], "ren": [5, 8], "renam": 21, "rep_csv_time_panda": 35, "rep_median_total_time_idx_panda": 35, "rep_median_total_time_idx_pyprob": 35, "rep_median_total_time_panda": 35, "rep_median_total_time_pyprob": 35, "rep_pandas_tim": 35, "rep_pandas_voltag": 35, "rep_pyprobe_tim": 35, "rep_pyprobe_voltag": 35, "rep_total_time_panda": 35, "rep_total_time_pyprob": 35, "repeat": [35, 46, 51], "repeated_data": 35, "repetit": 15, "replac": [29, 35], "repositori": [29, 32, 47, 48], "repres": 5, "request": [30, 35], "requir": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 28, 29, 32, 34, 35, 39, 41, 44, 45, 46, 47, 52], "required_column": [2, 11, 29, 41], "required_typ": [2, 11, 29, 41], "resampl": 10, "reset": 43, "resist": [9, 27, 34], "respect": 10, "rest": [1, 9, 21, 29, 33, 38, 39, 43, 51], "rest_0": 38, "rest_1": 38, "rest_numb": [9, 21], "result": [0, 1, 6, 7, 8, 9, 10, 11, 22, 23, 26, 29, 30, 34, 35, 36, 39, 40, 41, 43, 44, 48, 49], "retriev": [29, 35, 38, 43], "return": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 35, 39, 40, 41, 43, 44, 45], "rig": 12, "right": 35, "root_fold": 45, "rpt": 45, "ruih": [5, 8], "run": [12, 32, 35, 39, 45, 47, 48, 52], "s2590116820300084": [5, 8], "sake": [33, 36, 38, 39, 40, 41], "same": [10, 12, 23, 28, 35, 45, 51], "sampl": [5, 8, 10, 33, 34, 35, 36, 38, 39, 41, 45], "sample_data": [33, 34, 35, 36, 38, 39, 41], "sample_data_newar": [33, 34, 35, 36, 38, 39, 41], "sample_data_neware_rep": 35, "santhanagopalan": [5, 8], "save": [29, 35, 45], "savgol_smooth": [2, 10], "savitzki": 10, "scalabl": 35, "scale": [22, 40], "scene": [30, 41], "scienc": [5, 8], "sciencedirect": [5, 8], "scipi": 7, "script": [20, 47], "sec": [18, 46], "second": [9, 25, 35, 38, 39, 40, 45, 47, 49, 51], "secondari": 22, "secondary_i": 22, "section": [5, 8, 33, 38, 39, 44, 45, 46, 48, 51], "see": [14, 15, 18, 41, 42, 44, 45, 49], "select": [35, 38, 43, 44, 47], "self": [29, 41], "self_inst": 41, "separ": [34, 38, 47, 51], "seper": [25, 38, 51], "seri": [25, 45], "serial": 51, "set": [7, 12, 23, 28, 30, 32, 33, 35, 40, 41], "set_reference_capac": [1, 23], "set_soc": [1, 23, 34, 41], "set_titl": 35, "set_vis": 35, "set_ylabel": 35, "set_yscal": 35, "setup": [31, 52], "shape": [34, 35, 39, 40, 41], "sharei": 35, "shortcut": 50, "should": [28, 29, 41, 47, 51], "show": [1, 22, 33, 35, 36, 38, 39, 40, 41, 49], "show_imag": [1, 22, 33, 34, 36, 38, 39, 40, 41], "showflier": 35, "showlegend": 22, "shriram": [5, 8], "si": 27, "simpl": [29, 40, 43, 44], "simplest": 28, "simpli": [3, 28, 29, 43], "sinc": 39, "singl": [15, 18, 19, 25, 45, 46, 51], "site": 41, "size": [5, 8, 22], "skip": [38, 51], "slice": 5, "smooth": [1, 2, 5, 8, 29, 36], "smooth_gradi": [2, 3, 5], "smoother": 36, "smoothing_filt": 8, "smoothing_lambda": [10, 36], "so": [17, 23, 29, 30, 33, 35, 36, 38, 39, 41, 43, 45, 51], "soc": [4, 9, 23, 29, 34, 40, 41], "societi": 40, "softwar": 47, "soh": [4, 6, 7, 39], "solid": 22, "some": [28, 29, 38, 39, 41, 45, 51], "someth": 45, "sometim": 28, "sourc": [21, 28, 32, 45, 47], "space": [5, 8, 33], "special": 43, "specif": [23, 28, 41, 44, 48], "specifi": [10, 23, 25, 29, 43], "speed": [35, 45], "spline": [10, 36], "spline_smooth": [2, 10, 36], "spline_smoothed_data": 36, "spline_smoothed_data_dvdq": 36, "split": [5, 38], "stabl": 47, "stage": 48, "standard": [23, 28, 29, 37, 41, 45, 46], "start": [28, 29, 33, 37, 38, 41, 46, 47, 51], "start_tim": 35, "state": [6, 34, 36], "static": [7, 15, 16, 17, 18, 19, 22], "statist": 9, "step": [0, 1, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 35, 38, 39, 40, 41, 43, 45, 46, 47, 51], "step_descript": [1, 24], "step_incr": 35, "step_indic": [1, 24], "step_numb": [1, 21, 24], "step_rep": 35, "steps_idx": [1, 21, 39], "still": 38, "sto": 40, "stoichiometri": [4, 7, 29, 40], "stoichiometry_limit": [2, 7, 29, 40, 44], "storag": 30, "store": [25, 27, 29, 38, 41, 45, 46, 48, 51], "str": [4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 35], "streamlit": [20, 47], "strength": 38, "strict": 29, "stricter": [23, 29, 41], "string": [12, 14, 15, 18, 24, 28, 38, 43, 45, 51], "structur": [24, 50, 51], "studio": 47, "style": 22, "subclass": 23, "submodul": [0, 29], "subpackag": 0, "subplot": 35, "summari": [2, 6, 9, 34, 39], "summaris": [9, 46, 48], "support": [21, 45, 47, 50], "syntax": 51, "synthet": 40, "t": [34, 35, 41], "t1": [16, 19, 46], "tabl": 46, "tag": 47, "take": [18, 34], "taken": 46, "tanh": 40, "target": [4, 7, 10], "target_column": [10, 36], "techniqu": 40, "tell": 41, "temp": [18, 46], "temperatur": [13, 14, 15, 16, 17, 18, 19, 27, 28, 39, 46], "templat": 22, "tempt": 29, "termin": [39, 47], "test": [12, 14, 18, 25, 33, 34, 35, 36, 38, 39, 41, 45, 46, 51], "test_csv": 35, "testabl": 29, "text": 40, "than": [23, 29, 35, 41, 43], "thei": [12, 15, 17, 29, 39, 41, 45], "them": [21, 28, 38, 41, 42, 44, 45], "therefor": [41, 43, 51], "thi": [8, 12, 17, 18, 19, 21, 23, 25, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 50, 51], "third": [38, 49], "three": 38, "through": [28, 30, 39], "throughout": [30, 45], "throughput": 39, "tick_label": 35, "tickfont": 22, "tight_layout": 35, "time": [9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 27, 28, 33, 34, 35, 36, 38, 39, 41, 45, 46, 49, 51], "time_incr": 35, "time_rep": 35, "time_unit_dict": [1, 27], "timeit": 35, "timeseri": 45, "timestamp": [21, 39, 46], "titl": [1, 21, 22, 24, 38, 39, 51], "title_font_s": [1, 22], "to_default_unit": [1, 27], "togeth": 30, "told": 41, "too": [39, 51], "tool": 41, "top": 29, "total": [19, 51], "total_time_panda": 35, "total_time_pyprob": 35, "traceback": 41, "track": 52, "treat": 51, "true": [6, 10, 22, 25, 35, 36, 41], "try": 41, "tupl": [4, 5, 7, 11, 24, 25, 29], "twice": 46, "two": [7, 33, 38, 40, 45, 47, 51], "txt": [32, 46, 47], "type": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 39, 41, 43, 44, 49], "typeerror": 24, "u": [16, 46], "u32": 34, "u_eq": 40, "uncom": 39, "under": 28, "undergo": 45, "undergon": 45, "underli": 29, "underpin": 29, "unexpect": 41, "unifomli": 8, "uniformli": [5, 33], "union": [25, 41], "uniqu": [35, 46], "unique_cycl": 35, "unique_ev": 35, "unit": [0, 1, 12, 14, 15, 16, 17, 18, 19, 25, 28, 33, 39, 43, 46], "unit_dict": [1, 27], "unit_from_regexp": [0, 1, 27], "unset": 28, "until": [34, 35, 38, 39, 51], "up": [28, 30, 35, 42, 45], "updat": [41, 47], "upon": 23, "upper": 35, "upward": 51, "url": [5, 7, 8], "us": [4, 7, 8, 10, 12, 21, 22, 23, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52], "user": [23, 29, 30, 34, 36, 41, 42, 43, 48, 52], "usual": 45, "util": [1, 2], "v": [9, 12, 23, 27, 33, 34, 35, 36, 38, 39, 40, 41, 43, 46, 49, 51], "v0": 47, "valid": [11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 29, 30, 37, 44], "validate_input_data_typ": [2, 11], "validate_python": 41, "validate_required_column": [2, 11], "validationerror": 41, "valu": [5, 12, 21, 23, 24, 25, 34, 35, 41, 45, 46, 51], "value_error": 41, "valueerror": [5, 11, 25, 29], "variabl": [2, 8, 10, 11, 21, 28, 29], "variant": [41, 43, 44], "vector": [5, 40], "venv": [32, 47], "veri": 28, "verifi": [41, 45], "version": 47, "vert": 35, "viridi": 22, "virtual": [32, 47], "visit": 41, "visual": 47, "visualis": 48, "volt": 46, "voltag": [12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 27, 28, 33, 34, 35, 37, 38, 39, 40, 41, 43, 46, 49], "vscode": [47, 51], "w": 27, "wa": 46, "wai": [23, 29, 38, 45, 47], "wang": [5, 8], "want": 21, "wd": 40, "we": [29, 33, 34, 35, 36, 38, 39, 40, 41], "web": 48, "week": 35, "well": 52, "weng": [5, 8, 33, 36], "were": [41, 46], "when": [12, 18, 19, 23, 25, 28, 29, 30, 33, 34, 39, 41, 43, 44, 45, 46, 51, 52], "whenev": 41, "where": [9, 28, 35, 45, 46, 51], "wherea": 35, "whether": [6, 22, 25], "which": [8, 9, 23, 28, 29, 30, 32, 33, 34, 36, 38, 41, 44, 45, 47, 48, 51, 52], "whichev": 33, "while": [28, 29], "who": 43, "whole": 21, "why": 51, "widanag": 40, "width": 22, "wildcard": 45, "window": [10, 47], "window_length": 10, "wish": [32, 44, 47], "with_column": 35, "within": [9, 28, 41, 44, 51], "without": [25, 29], "work": [28, 29, 30, 32, 34, 41, 47, 50], "workflow": 45, "worksheet": 12, "worksheet_nam": [12, 45], "would": 41, "wrapper": [8, 29], "write": [29, 35, 45, 47, 50], "write_parquet": 35, "written": [41, 51], "www": [5, 8], "x": [5, 8, 10, 22, 29, 33, 36, 39, 40, 41, 49], "x64": 41, "x_data": 29, "x_guess": [4, 7, 40, 44], "x_ne": [4, 7, 40, 44], "x_ne_hi": [4, 29, 40], "x_ne_lo": [4, 29, 40], "x_pe": [4, 7, 40, 44], "x_pe_hi": [4, 29, 40], "x_pe_lo": [4, 29, 40], "x_rang": [1, 22], "xaxi": 22, "xiangm": [5, 8], "xlabel": [35, 40], "xlsx": [12, 35, 39, 45, 46], "xtick": 35, "xueb": [5, 8], "xuemin": [5, 8], "xune": [5, 8], "y": [5, 8, 14, 18, 22, 29, 33, 35, 36, 39, 40, 41, 49], "y2_rang": [1, 22], "y_data": 29, "y_rang": [1, 22], "y_sampling_interv": [2, 3, 5], "yaml": [12, 24, 38, 43, 45, 50], "yan": [5, 8], "yann": [5, 8], "yatish": [5, 8], "yaxi": [22, 35], "yaxis_titl": 34, "ye": 46, "year": 35, "yi": [5, 8], "ylabel": [35, 40], "you": [12, 21, 28, 29, 32, 33, 36, 39, 40, 41, 43, 44, 45, 47, 48, 49, 51], "your": [28, 29, 30, 32, 33, 39, 44, 45, 47, 48, 51], "yscale": 35, "ytick": 35, "yu": [5, 8], "z": 40, "zenodo": 7, "zero": [23, 28, 33, 35, 38, 43], "zero_column": [1, 23], "zhao": [5, 8], "\u00b5": 27, "\u03bc": 39}, "titles": ["pyprobe", "pyprobe package", "pyprobe.analysis package", "pyprobe.analysis.base package", "pyprobe.analysis.base.degradation_mode_analysis_functions module", "pyprobe.analysis.base.differentiation_functions module", "pyprobe.analysis.cycling module", "pyprobe.analysis.degradation_mode_analysis module", "pyprobe.analysis.differentiation module", "pyprobe.analysis.pulsing module", "pyprobe.analysis.smoothing module", "pyprobe.analysis.utils module", "pyprobe.cell module", "pyprobe.cyclers package", "pyprobe.cyclers.arbin module", "pyprobe.cyclers.basecycler module", "pyprobe.cyclers.basytec module", "pyprobe.cyclers.biologic module", "pyprobe.cyclers.maccor module", "pyprobe.cyclers.neware module", "pyprobe.dashboard module", "pyprobe.filters module", "pyprobe.plot module", "pyprobe.rawdata module", "pyprobe.readme_processor module", "pyprobe.result module", "pyprobe.typing module", "pyprobe.units module", "Adding a Cycler", "Contributing to the Analysis Module", "Dependency Guide", "Developer Guide", "Installation", "Differentiating with the LEAN algorithm", "Analysing GITT data", "Comparing PyProBE Performance", "Differentiating voltage data", "Examples", "Filtering data", "Getting started with PyProBE", "OCV Fitting", "Providing Valid Inputs", "PyProBE documentation", "Accessing Data", "Analysis", "Importing Data", "Input Data Guidance", "Installation", "Introduction", "Plotting", "User Guide", "Writing a README file", "Writing an Experiment record"], "titleterms": {"The": 51, "access": 43, "ad": [28, 45], "algorithm": 33, "an": 52, "analys": 34, "analysi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 29, 41, 44], "arbin": 14, "base": [3, 4, 5, 29], "basecycl": 15, "basytec": 16, "batch": 45, "biolog": 17, "cell": [12, 45], "class": 41, "column": 46, "compar": 35, "contribut": 29, "convert": [39, 45], "cycl": 6, "cycler": [13, 14, 15, 16, 17, 18, 19, 28, 45, 46], "dashboard": 20, "data": [34, 36, 38, 39, 43, 45, 46], "degradation_mode_analysi": 7, "degradation_mode_analysis_funct": 4, "depend": 30, "develop": 31, "differenti": [8, 33, 36], "differentiation_funct": 5, "document": [42, 48], "exampl": 37, "experi": 52, "file": [45, 51], "filter": [21, 38, 43], "fit": 40, "format": [39, 45, 46, 51], "from": 45, "get": 39, "gitt": 34, "guid": [30, 31, 50], "guidanc": 46, "import": 45, "input": [41, 45, 46], "instal": [32, 47], "introduct": 48, "lean": 33, "maccor": 18, "make": 45, "method": 29, "modul": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "multipl": 45, "newar": 19, "object": [43, 45], "ocv": 40, "packag": [1, 2, 3, 13], "perform": 35, "plot": [22, 49], "polar": 30, "preprocess": 45, "provid": 41, "puls": 9, "pydant": 30, "pyprob": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 35, 39, 42, 45, 46, 48, 51], "rawdata": [23, 41, 43], "readm": 51, "readme_processor": 24, "record": 52, "result": 25, "setup": 29, "shortcut": 51, "smooth": 10, "standard": 39, "start": 39, "structur": 48, "submodul": [1, 2, 3, 13], "subpackag": [1, 2], "support": 46, "thi": 48, "type": 26, "unit": 27, "user": 50, "util": 11, "valid": 41, "voltag": 36, "work": 45, "write": [51, 52], "yaml": 51}})