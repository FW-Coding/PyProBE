Search.setIndex({"alltitles": {"Accessing Data": [[47, null]], "Adding a Cycler": [[30, null]], "Adding data not from a cycler": [[49, "adding-data-not-from-a-cycler"]], "Adding data to a cell object": [[49, "adding-data-to-a-cell-object"]], "Analysing GITT data": [[35, null]], "Analysis": [[48, null]], "Analysis Module Validation": [[43, "Analysis-Module-Validation"]], "Base": [[31, "base"]], "Batch preprocessing": [[49, "batch-preprocessing"]], "Comparing PyProBE Performance": [[36, null]], "Contributing to the Analysis Module": [[31, null]], "Convert data to standard format": [[40, "Convert-data-to-standard-format"]], "Converting data to PyProBE Format": [[49, "converting-data-to-pyprobe-format"]], "Dependency Guide": [[32, null]], "Developer Guide": [[33, null]], "Differentiating voltage data": [[37, null]], "Examples": [[38, null]], "Filtering": [[47, "filtering"]], "Filtering data": [[39, null]], "Functions": [[31, "functions"]], "Getting started with PyProBE": [[40, null]], "HvPlot": [[42, "HvPlot"]], "Importing Data": [[49, null]], "Input Data Guidance": [[50, null]], "Installation": [[34, null], [51, null]], "Introduction": [[52, null]], "Making a cell object": [[49, "making-a-cell-object"]], "OCV Fitting": [[41, null]], "Pandas/Matplotlib": [[42, "Pandas/Matplotlib"]], "Plotting": [[42, null], [53, null]], "Polars": [[32, "polars"]], "Providing Valid Inputs": [[43, null]], "PyProBE Structure": [[52, "pyprobe-structure"]], "PyProBE data columns": [[50, "pyprobe-data-columns"]], "PyProBE documentation": [[46, null]], "Pydantic": [[32, "pydantic"]], "RawData Validation": [[43, "RawData-Validation"]], "RawData objects": [[47, "rawdata-objects"]], "Seaborn": [[42, "Seaborn"]], "Sharing Data": [[44, null]], "Shortcuts": [[55, "shortcuts"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [13, "submodules"]], "Subpackages": [[1, "subpackages"], [2, "subpackages"]], "Supported cyclers and formats": [[50, "supported-cyclers-and-formats"]], "The PyProBE README format": [[55, "the-pyprobe-readme-format"]], "The YAML format": [[55, "the-yaml-format"]], "This documentation": [[52, "this-documentation"]], "User Guide": [[54, null]], "Working with PyBaMM Models": [[45, null]], "Working with multiple input files": [[49, "working-with-multiple-input-files"]], "Writing a README file": [[55, null]], "Writing an Experiment record": [[56, null]], "pyprobe": [[0, null]], "pyprobe package": [[1, null]], "pyprobe.analysis package": [[2, null]], "pyprobe.analysis.base package": [[3, null]], "pyprobe.analysis.base.degradation_mode_analysis_functions module": [[4, null]], "pyprobe.analysis.base.differentiation_functions module": [[5, null]], "pyprobe.analysis.cycling module": [[6, null]], "pyprobe.analysis.degradation_mode_analysis module": [[7, null]], "pyprobe.analysis.differentiation module": [[8, null]], "pyprobe.analysis.pulsing module": [[9, null]], "pyprobe.analysis.smoothing module": [[10, null]], "pyprobe.analysis.utils module": [[11, null]], "pyprobe.cell module": [[12, null]], "pyprobe.cyclers package": [[13, null]], "pyprobe.cyclers.arbin module": [[14, null]], "pyprobe.cyclers.basecycler module": [[15, null]], "pyprobe.cyclers.basytec module": [[16, null]], "pyprobe.cyclers.biologic module": [[17, null]], "pyprobe.cyclers.maccor module": [[18, null]], "pyprobe.cyclers.neware module": [[19, null]], "pyprobe.dashboard module": [[20, null]], "pyprobe.filters module": [[21, null]], "pyprobe.logger module": [[22, null]], "pyprobe.plot module": [[23, null]], "pyprobe.pyprobe_types module": [[24, null]], "pyprobe.rawdata module": [[25, null]], "pyprobe.readme_processor module": [[26, null]], "pyprobe.result module": [[27, null]], "pyprobe.units module": [[28, null]], "pyprobe.utils module": [[29, null]]}, "docnames": ["api/modules", "api/pyprobe", "api/pyprobe.analysis", "api/pyprobe.analysis.base", "api/pyprobe.analysis.base.degradation_mode_analysis_functions", "api/pyprobe.analysis.base.differentiation_functions", "api/pyprobe.analysis.cycling", "api/pyprobe.analysis.degradation_mode_analysis", "api/pyprobe.analysis.differentiation", "api/pyprobe.analysis.pulsing", "api/pyprobe.analysis.smoothing", "api/pyprobe.analysis.utils", "api/pyprobe.cell", "api/pyprobe.cyclers", "api/pyprobe.cyclers.arbin", "api/pyprobe.cyclers.basecycler", "api/pyprobe.cyclers.basytec", "api/pyprobe.cyclers.biologic", "api/pyprobe.cyclers.maccor", "api/pyprobe.cyclers.neware", "api/pyprobe.dashboard", "api/pyprobe.filters", "api/pyprobe.logger", "api/pyprobe.plot", "api/pyprobe.pyprobe_types", "api/pyprobe.rawdata", "api/pyprobe.readme_processor", "api/pyprobe.result", "api/pyprobe.units", "api/pyprobe.utils", "developer_guide/adding_a_cycler", "developer_guide/contributing_to_the_analysis_module", "developer_guide/dependency_guide", "developer_guide/developer_guide", "developer_guide/developer_installation", "examples/analysing-GITT-data", "examples/comparing-pyprobe-performance", "examples/differentiating-voltage-data", "examples/examples", "examples/filtering-data", "examples/getting-started", "examples/ocv-fitting", "examples/plotting", "examples/providing-valid-inputs", "examples/sharing-data", "examples/working-with-pybamm-models", "index", "user_guide/accessing_data", "user_guide/analysis", "user_guide/importing_data", "user_guide/input_data_guidance", "user_guide/installation", "user_guide/introduction", "user_guide/plotting", "user_guide/user_guide", "user_guide/writing_a_readme_file", "user_guide/writing_an_experiment_record"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["api/modules.rst", "api/pyprobe.rst", "api/pyprobe.analysis.rst", "api/pyprobe.analysis.base.rst", "api/pyprobe.analysis.base.degradation_mode_analysis_functions.rst", "api/pyprobe.analysis.base.differentiation_functions.rst", "api/pyprobe.analysis.cycling.rst", "api/pyprobe.analysis.degradation_mode_analysis.rst", "api/pyprobe.analysis.differentiation.rst", "api/pyprobe.analysis.pulsing.rst", "api/pyprobe.analysis.smoothing.rst", "api/pyprobe.analysis.utils.rst", "api/pyprobe.cell.rst", "api/pyprobe.cyclers.rst", "api/pyprobe.cyclers.arbin.rst", "api/pyprobe.cyclers.basecycler.rst", "api/pyprobe.cyclers.basytec.rst", "api/pyprobe.cyclers.biologic.rst", "api/pyprobe.cyclers.maccor.rst", "api/pyprobe.cyclers.neware.rst", "api/pyprobe.dashboard.rst", "api/pyprobe.filters.rst", "api/pyprobe.logger.rst", "api/pyprobe.plot.rst", "api/pyprobe.pyprobe_types.rst", "api/pyprobe.rawdata.rst", "api/pyprobe.readme_processor.rst", "api/pyprobe.result.rst", "api/pyprobe.units.rst", "api/pyprobe.utils.rst", "developer_guide/adding_a_cycler.rst", "developer_guide/contributing_to_the_analysis_module.rst", "developer_guide/dependency_guide.rst", "developer_guide/developer_guide.rst", "developer_guide/developer_installation.rst", "examples/analysing-GITT-data.ipynb", "examples/comparing-pyprobe-performance.ipynb", "examples/differentiating-voltage-data.ipynb", "examples/examples.rst", "examples/filtering-data.ipynb", "examples/getting-started.ipynb", "examples/ocv-fitting.ipynb", "examples/plotting.ipynb", "examples/providing-valid-inputs.ipynb", "examples/sharing-data.ipynb", "examples/working-with-pybamm-models.ipynb", "index.rst", "user_guide/accessing_data.rst", "user_guide/analysis.rst", "user_guide/importing_data.rst", "user_guide/input_data_guidance.rst", "user_guide/installation.rst", "user_guide/introduction.rst", "user_guide/plotting.rst", "user_guide/user_guide.rst", "user_guide/writing_a_readme_file.rst", "user_guide/writing_an_experiment_record.rst"], "indexentries": {"add_colorbar() (plot method)": [[23, "pyprobe.plot.Plot.add_colorbar", false]], "add_colorscaled_line() (plot method)": [[23, "pyprobe.plot.Plot.add_colorscaled_line", false]], "add_external_data() (procedure method)": [[21, "pyprobe.filters.Procedure.add_external_data", false]], "add_line() (plot method)": [[23, "pyprobe.plot.Plot.add_line", false]], "add_new_data_columns() (result method)": [[27, "pyprobe.result.Result.add_new_data_columns", false]], "add_procedure() (cell method)": [[12, "pyprobe.cell.Cell.add_procedure", false]], "akima_interpolator() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.akima_interpolator", false]], "apply_step_correction() (biologicmb static method)": [[17, "pyprobe.cyclers.biologic.BiologicMB.apply_step_correction", false]], "archive() (cell method)": [[12, "pyprobe.cell.Cell.archive", false]], "assemble_array() (in module pyprobe.analysis.utils)": [[11, "pyprobe.analysis.utils.assemble_array", false]], "average_ocv_curves() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.average_OCV_curves", false]], "average_ocvs() (in module pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.average_ocvs", false]], "axis_font_size (plot attribute)": [[23, "pyprobe.plot.Plot.axis_font_size", false]], "base_dataframe (polarscolumncache property)": [[27, "pyprobe.result.PolarsColumnCache.base_dataframe", false]], "base_dataframe (result attribute)": [[27, "pyprobe.result.Result.base_dataframe", false]], "build() (result class method)": [[27, "pyprobe.result.Result.build", false]], "cached_dataframe (polarscolumncache property)": [[27, "pyprobe.result.PolarsColumnCache.cached_dataframe", false]], "calc_electrode_capacities() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_electrode_capacities", false]], "calc_full_cell_ocv() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_full_cell_OCV", false]], "calc_full_cell_ocv_composite() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_full_cell_OCV_composite", false]], "calc_gradient_with_lean() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.calc_gradient_with_LEAN", false]], "calculate_dma_parameters() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calculate_dma_parameters", false]], "capacity (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.capacity", false]], "capacity (maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.capacity", false]], "capacity (neware property)": [[19, "pyprobe.cyclers.neware.Neware.capacity", false]], "capacity (rawdata property)": [[25, "pyprobe.rawdata.RawData.capacity", false]], "capacity_from_ch_dch (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.capacity_from_ch_dch", false]], "charge() (cycle method)": [[21, "pyprobe.filters.Cycle.charge", false]], "charge() (experiment method)": [[21, "pyprobe.filters.Experiment.charge", false]], "charge() (procedure method)": [[21, "pyprobe.filters.Procedure.charge", false]], "charge_capacity (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.charge_capacity", false]], "charge_capacity (maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.charge_capacity", false]], "charge_capacity (neware property)": [[19, "pyprobe.cyclers.neware.Neware.charge_capacity", false]], "chargeordischarge() (cycle method)": [[21, "pyprobe.filters.Cycle.chargeordischarge", false]], "chargeordischarge() (experiment method)": [[21, "pyprobe.filters.Experiment.chargeordischarge", false]], "chargeordischarge() (procedure method)": [[21, "pyprobe.filters.Procedure.chargeordischarge", false]], "check_required_columns() (rawdata class method)": [[25, "pyprobe.rawdata.RawData.check_required_columns", false]], "clean_copy() (result method)": [[27, "pyprobe.result.Result.clean_copy", false]], "clear_cache() (polarscolumncache method)": [[27, "pyprobe.result.PolarsColumnCache.clear_cache", false]], "collect_columns() (polarscolumncache method)": [[27, "pyprobe.result.PolarsColumnCache.collect_columns", false]], "column_definitions (rawdata attribute)": [[25, "pyprobe.rawdata.RawData.column_definitions", false]], "column_definitions (result attribute)": [[27, "pyprobe.result.Result.column_definitions", false]], "column_dict (arbin attribute)": [[14, "pyprobe.cyclers.arbin.Arbin.column_dict", false]], "column_dict (basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.column_dict", false]], "column_dict (basytec attribute)": [[16, "pyprobe.cyclers.basytec.Basytec.column_dict", false]], "column_dict (biologic attribute)": [[17, "pyprobe.cyclers.biologic.Biologic.column_dict", false]], "column_dict (maccor attribute)": [[18, "pyprobe.cyclers.maccor.Maccor.column_dict", false]], "column_dict (neware attribute)": [[19, "pyprobe.cyclers.neware.Neware.column_dict", false]], "column_list (result property)": [[27, "pyprobe.result.Result.column_list", false]], "columns (polarscolumncache property)": [[27, "pyprobe.result.PolarsColumnCache.columns", false]], "combine_results() (in module pyprobe.result)": [[27, "pyprobe.result.combine_results", false]], "compositeocp (class in pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.CompositeOCP", false]], "configure_logging() (in module pyprobe.logger)": [[22, "pyprobe.logger.configure_logging", false]], "constant_current() (cycle method)": [[21, "pyprobe.filters.Cycle.constant_current", false]], "constant_current() (experiment method)": [[21, "pyprobe.filters.Experiment.constant_current", false]], "constant_current() (procedure method)": [[21, "pyprobe.filters.Procedure.constant_current", false]], "constant_current() (step method)": [[21, "pyprobe.filters.Step.constant_current", false]], "constant_voltage() (cycle method)": [[21, "pyprobe.filters.Cycle.constant_voltage", false]], "constant_voltage() (experiment method)": [[21, "pyprobe.filters.Experiment.constant_voltage", false]], "constant_voltage() (procedure method)": [[21, "pyprobe.filters.Procedure.constant_voltage", false]], "constant_voltage() (step method)": [[21, "pyprobe.filters.Step.constant_voltage", false]], "contains_lazyframe (result property)": [[27, "pyprobe.result.Result.contains_lazyframe", false]], "cubic_interpolator() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.cubic_interpolator", false]], "current (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.current", false]], "cycle() (experiment method)": [[21, "pyprobe.filters.Experiment.cycle", false]], "cycle() (procedure method)": [[21, "pyprobe.filters.Procedure.cycle", false]], "cycle_info (cycle attribute)": [[21, "pyprobe.filters.Cycle.cycle_info", false]], "cycle_info (experiment attribute)": [[21, "pyprobe.filters.Experiment.cycle_info", false]], "cycle_info (procedure attribute)": [[21, "pyprobe.filters.Procedure.cycle_info", false]], "data (rawdata property)": [[25, "pyprobe.rawdata.RawData.data", false]], "data (result property)": [[27, "pyprobe.result.Result.data", false]], "date (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.date", false]], "date (maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.date", false]], "datetime_format (arbin attribute)": [[14, "pyprobe.cyclers.arbin.Arbin.datetime_format", false]], "datetime_format (basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.datetime_format", false]], "datetime_format (maccor attribute)": [[18, "pyprobe.cyclers.maccor.Maccor.datetime_format", false]], "default_layout (plot attribute)": [[23, "pyprobe.plot.Plot.default_layout", false]], "define_column() (result method)": [[27, "pyprobe.result.Result.define_column", false]], "differentiate_fd() (differentiation method)": [[8, "pyprobe.analysis.differentiation.Differentiation.differentiate_FD", false]], "differentiate_lean() (differentiation method)": [[8, "pyprobe.analysis.differentiation.Differentiation.differentiate_LEAN", false]], "differentiate_lean() (in module pyprobe.analysis.differentiation)": [[8, "pyprobe.analysis.differentiation.differentiate_LEAN", false]], "discharge() (cycle method)": [[21, "pyprobe.filters.Cycle.discharge", false]], "discharge() (experiment method)": [[21, "pyprobe.filters.Experiment.discharge", false]], "discharge() (procedure method)": [[21, "pyprobe.filters.Procedure.discharge", false]], "discharge_capacity (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.discharge_capacity", false]], "discharge_capacity (maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.discharge_capacity", false]], "discharge_capacity (neware property)": [[19, "pyprobe.cyclers.neware.Neware.discharge_capacity", false]], "downsample() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.downsample", false]], "downsample() (smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.downsample", false]], "eval (compositeocp property)": [[7, "pyprobe.analysis.degradation_mode_analysis.CompositeOCP.eval", false]], "eval (ocp property)": [[7, "pyprobe.analysis.degradation_mode_analysis.OCP.eval", false]], "event (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.event", false]], "experiment() (procedure method)": [[21, "pyprobe.filters.Procedure.experiment", false]], "experiment_names (procedure property)": [[21, "pyprobe.filters.Procedure.experiment_names", false]], "experimentorcycletype (in module pyprobe.pyprobe_types)": [[24, "pyprobe.pyprobe_types.ExperimentOrCycleType", false]], "extend() (result method)": [[27, "pyprobe.result.Result.extend", false]], "fig (plot property)": [[23, "pyprobe.plot.Plot.fig", false]], "filtertocycletype (in module pyprobe.pyprobe_types)": [[24, "pyprobe.pyprobe_types.FilterToCycleType", false]], "filtertoexperimenttype (in module pyprobe.pyprobe_types)": [[24, "pyprobe.pyprobe_types.FilterToExperimentType", false]], "filtertosteptype (in module pyprobe.pyprobe_types)": [[24, "pyprobe.pyprobe_types.FilterToStepType", false]], "flatten_list() (in module pyprobe.utils)": [[29, "pyprobe.utils.flatten_list", false]], "from_data() (compositeocp static method)": [[7, "pyprobe.analysis.degradation_mode_analysis.CompositeOCP.from_data", false]], "from_data() (ocp static method)": [[7, "pyprobe.analysis.degradation_mode_analysis.OCP.from_data", false]], "from_default_unit() (units method)": [[28, "pyprobe.units.Units.from_default_unit", false]], "from_expression() (ocp static method)": [[7, "pyprobe.analysis.degradation_mode_analysis.OCP.from_expression", false]], "get() (result method)": [[27, "pyprobe.result.Result.get", false]], "get_cycle_column() (in module pyprobe.filters)": [[21, "pyprobe.filters.get_cycle_column", false]], "get_data_dict() (pybammsolution method)": [[29, "pyprobe.utils.PyBaMMSolution.get_data_dict", false]], "get_dx() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_dx", false]], "get_dy_and_counts() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_dy_and_counts", false]], "get_imported_dataframe() (basecycler method)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.get_imported_dataframe", false]], "get_imported_dataframe() (biologicmb method)": [[17, "pyprobe.cyclers.biologic.BiologicMB.get_imported_dataframe", false]], "get_ocv_curve() (in module pyprobe.analysis.pulsing)": [[9, "pyprobe.analysis.pulsing.get_ocv_curve", false]], "get_only() (result method)": [[27, "pyprobe.result.Result.get_only", false]], "get_quantities() (polarscolumncache static method)": [[27, "pyprobe.result.PolarsColumnCache.get_quantities", false]], "get_resistances() (in module pyprobe.analysis.pulsing)": [[9, "pyprobe.analysis.pulsing.get_resistances", false]], "get_x_sections() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_x_sections", false]], "grad (compositeocp property)": [[7, "pyprobe.analysis.degradation_mode_analysis.CompositeOCP.grad", false]], "grad (ocp property)": [[7, "pyprobe.analysis.degradation_mode_analysis.OCP.grad", false]], "gradient() (in module pyprobe.analysis.differentiation)": [[8, "pyprobe.analysis.differentiation.gradient", false]], "header_row_index (basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.header_row_index", false]], "hvplot() (result method)": [[27, "pyprobe.result.Result.hvplot", false]], "import_and_validate_data() (basecycler method)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.import_and_validate_data", false]], "import_pybamm_solution() (cell method)": [[12, "pyprobe.cell.Cell.import_pybamm_solution", false]], "info (cell attribute)": [[12, "pyprobe.cell.Cell.info", false]], "info (result attribute)": [[27, "pyprobe.result.Result.info", false]], "input_data (analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.input_data", false]], "input_data (cycling attribute)": [[6, "pyprobe.analysis.cycling.Cycling.input_data", false]], "input_data (differentiation attribute)": [[8, "pyprobe.analysis.differentiation.Differentiation.input_data", false]], "input_data (pulsing attribute)": [[9, "pyprobe.analysis.pulsing.Pulsing.input_data", false]], "input_data (smoothing attribute)": [[10, "pyprobe.analysis.smoothing.Smoothing.input_data", false]], "input_data_path (arbin attribute)": [[14, "pyprobe.cyclers.arbin.Arbin.input_data_path", false]], "input_data_path (basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.input_data_path", false]], "input_data_path (basytec attribute)": [[16, "pyprobe.cyclers.basytec.Basytec.input_data_path", false]], "input_data_path (biologic attribute)": [[17, "pyprobe.cyclers.biologic.Biologic.input_data_path", false]], "input_data_path (maccor attribute)": [[18, "pyprobe.cyclers.maccor.Maccor.input_data_path", false]], "input_data_path (neware attribute)": [[19, "pyprobe.cyclers.neware.Neware.input_data_path", false]], "join() (result method)": [[27, "pyprobe.result.Result.join", false]], "launch_dashboard() (in module pyprobe.dashboard)": [[20, "pyprobe.dashboard.launch_dashboard", false]], "level_smoothing() (smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.level_smoothing", false]], "linear_interpolator() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.linear_interpolator", false]], "live_dataframe (result property)": [[27, "pyprobe.result.Result.live_dataframe", false]], "load_archive() (in module pyprobe.cell)": [[12, "pyprobe.cell.load_archive", false]], "load_external_file() (procedure method)": [[21, "pyprobe.filters.Procedure.load_external_file", false]], "make_cell_list() (in module pyprobe.cell)": [[12, "pyprobe.cell.make_cell_list", false]], "make_colorscale() (plot static method)": [[23, "pyprobe.plot.Plot.make_colorscale", false]], "module": [[1, "module-pyprobe", false], [2, "module-pyprobe.analysis", false], [3, "module-pyprobe.analysis.base", false], [4, "module-pyprobe.analysis.base.degradation_mode_analysis_functions", false], [5, "module-pyprobe.analysis.base.differentiation_functions", false], [6, "module-pyprobe.analysis.cycling", false], [7, "module-pyprobe.analysis.degradation_mode_analysis", false], [8, "module-pyprobe.analysis.differentiation", false], [9, "module-pyprobe.analysis.pulsing", false], [10, "module-pyprobe.analysis.smoothing", false], [11, "module-pyprobe.analysis.utils", false], [12, "module-pyprobe.cell", false], [13, "module-pyprobe.cyclers", false], [14, "module-pyprobe.cyclers.arbin", false], [15, "module-pyprobe.cyclers.basecycler", false], [16, "module-pyprobe.cyclers.basytec", false], [17, "module-pyprobe.cyclers.biologic", false], [18, "module-pyprobe.cyclers.maccor", false], [19, "module-pyprobe.cyclers.neware", false], [20, "module-pyprobe.dashboard", false], [21, "module-pyprobe.filters", false], [22, "module-pyprobe.logger", false], [23, "module-pyprobe.plot", false], [24, "module-pyprobe.pyprobe_types", false], [25, "module-pyprobe.rawdata", false], [26, "module-pyprobe.readme_processor", false], [27, "module-pyprobe.result", false], [28, "module-pyprobe.units", false], [29, "module-pyprobe.utils", false]], "ocp (class in pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.OCP", false]], "ocv_curve_fit() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.ocv_curve_fit", false]], "pchip_interpolator() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.pchip_interpolator", false]], "plot (class in pyprobe.plot)": [[23, "pyprobe.plot.Plot", false]], "plot() (result method)": [[27, "pyprobe.result.Result.plot", false]], "polarscolumncache (class in pyprobe.result)": [[27, "pyprobe.result.PolarsColumnCache", false]], "prefix_dict (units attribute)": [[28, "pyprobe.units.Units.prefix_dict", false]], "print_definitions() (result method)": [[27, "pyprobe.result.Result.print_definitions", false]], "procedure (cell attribute)": [[12, "pyprobe.cell.Cell.procedure", false]], "process_cycler_file() (cell method)": [[12, "pyprobe.cell.Cell.process_cycler_file", false]], "process_generic_file() (cell method)": [[12, "pyprobe.cell.Cell.process_generic_file", false]], "process_readme() (in module pyprobe.readme_processor)": [[26, "pyprobe.readme_processor.process_readme", false]], "pulse() (pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse", false]], "pulse_rest() (pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse_rest", false]], "pulse_summary() (pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse_summary", false]], "pybamm_experiment (rawdata property)": [[25, "pyprobe.rawdata.RawData.pybamm_experiment", false]], "pybammsolution (class in pyprobe.utils)": [[29, "pyprobe.utils.PyBaMMSolution", false]], "pyprobe": [[1, "module-pyprobe", false]], "pyprobe.analysis": [[2, "module-pyprobe.analysis", false]], "pyprobe.analysis.base": [[3, "module-pyprobe.analysis.base", false]], "pyprobe.analysis.base.degradation_mode_analysis_functions": [[4, "module-pyprobe.analysis.base.degradation_mode_analysis_functions", false]], "pyprobe.analysis.base.differentiation_functions": [[5, "module-pyprobe.analysis.base.differentiation_functions", false]], "pyprobe.analysis.cycling": [[6, "module-pyprobe.analysis.cycling", false]], "pyprobe.analysis.degradation_mode_analysis": [[7, "module-pyprobe.analysis.degradation_mode_analysis", false]], "pyprobe.analysis.differentiation": [[8, "module-pyprobe.analysis.differentiation", false]], "pyprobe.analysis.pulsing": [[9, "module-pyprobe.analysis.pulsing", false]], "pyprobe.analysis.smoothing": [[10, "module-pyprobe.analysis.smoothing", false]], "pyprobe.analysis.utils": [[11, "module-pyprobe.analysis.utils", false]], "pyprobe.cell": [[12, "module-pyprobe.cell", false]], "pyprobe.cyclers": [[13, "module-pyprobe.cyclers", false]], "pyprobe.cyclers.arbin": [[14, "module-pyprobe.cyclers.arbin", false]], "pyprobe.cyclers.basecycler": [[15, "module-pyprobe.cyclers.basecycler", false]], "pyprobe.cyclers.basytec": [[16, "module-pyprobe.cyclers.basytec", false]], "pyprobe.cyclers.biologic": [[17, "module-pyprobe.cyclers.biologic", false]], "pyprobe.cyclers.maccor": [[18, "module-pyprobe.cyclers.maccor", false]], "pyprobe.cyclers.neware": [[19, "module-pyprobe.cyclers.neware", false]], "pyprobe.dashboard": [[20, "module-pyprobe.dashboard", false]], "pyprobe.filters": [[21, "module-pyprobe.filters", false]], "pyprobe.logger": [[22, "module-pyprobe.logger", false]], "pyprobe.plot": [[23, "module-pyprobe.plot", false]], "pyprobe.pyprobe_types": [[24, "module-pyprobe.pyprobe_types", false]], "pyprobe.rawdata": [[25, "module-pyprobe.rawdata", false]], "pyprobe.readme_processor": [[26, "module-pyprobe.readme_processor", false]], "pyprobe.result": [[27, "module-pyprobe.result", false]], "pyprobe.units": [[28, "module-pyprobe.units", false]], "pyprobe.utils": [[29, "module-pyprobe.utils", false]], "pyprobe_dataframe (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.pyprobe_dataframe", false]], "pyprobedatatype (in module pyprobe.pyprobe_types)": [[24, "pyprobe.pyprobe_types.PyProBEDataType", false]], "pyproberawdatatype (in module pyprobe.pyprobe_types)": [[24, "pyprobe.pyprobe_types.PyProBERawDataType", false]], "quantify_degradation_modes() (in module pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.quantify_degradation_modes", false]], "quantities (polarscolumncache property)": [[27, "pyprobe.result.PolarsColumnCache.quantities", false]], "quantities (result property)": [[27, "pyprobe.result.Result.quantities", false]], "quick_add_procedure() (cell method)": [[12, "pyprobe.cell.Cell.quick_add_procedure", false]], "read_file() (basecycler static method)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.read_file", false]], "read_file() (basytec static method)": [[16, "pyprobe.cyclers.basytec.Basytec.read_file", false]], "read_file() (biologic static method)": [[17, "pyprobe.cyclers.biologic.Biologic.read_file", false]], "read_file() (maccor static method)": [[18, "pyprobe.cyclers.maccor.Maccor.read_file", false]], "read_file() (neware static method)": [[19, "pyprobe.cyclers.neware.Neware.read_file", false]], "readme_dict (procedure attribute)": [[21, "pyprobe.filters.Procedure.readme_dict", false]], "readmemodel (class in pyprobe.readme_processor)": [[26, "pyprobe.readme_processor.ReadmeModel", false]], "remove_experiment() (procedure method)": [[21, "pyprobe.filters.Procedure.remove_experiment", false]], "required_columns (analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.required_columns", false]], "rest() (cycle method)": [[21, "pyprobe.filters.Cycle.rest", false]], "rest() (experiment method)": [[21, "pyprobe.filters.Experiment.rest", false]], "rest() (procedure method)": [[21, "pyprobe.filters.Procedure.rest", false]], "run_batch_dma_parallel() (in module pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.run_batch_dma_parallel", false]], "run_batch_dma_sequential() (in module pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.run_batch_dma_sequential", false]], "run_ocv_curve_fit() (in module pyprobe.analysis.degradation_mode_analysis)": [[7, "pyprobe.analysis.degradation_mode_analysis.run_ocv_curve_fit", false]], "savgol_smoothing() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.savgol_smoothing", false]], "savgol_smoothing() (smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.savgol_smoothing", false]], "seaborn (in module pyprobe.plot)": [[23, "pyprobe.plot.seaborn", false]], "set_reference_capacity() (rawdata method)": [[25, "pyprobe.rawdata.RawData.set_reference_capacity", false]], "set_soc() (rawdata method)": [[25, "pyprobe.rawdata.RawData.set_SOC", false]], "show() (plot method)": [[23, "pyprobe.plot.Plot.show", false]], "smooth_gradient() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.smooth_gradient", false]], "spline_smoothing() (in module pyprobe.analysis.smoothing)": [[10, "pyprobe.analysis.smoothing.spline_smoothing", false]], "spline_smoothing() (smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.spline_smoothing", false]], "split_quantity_unit() (in module pyprobe.units)": [[28, "pyprobe.units.split_quantity_unit", false]], "step (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.step", false]], "step() (cycle method)": [[21, "pyprobe.filters.Cycle.step", false]], "step() (experiment method)": [[21, "pyprobe.filters.Experiment.step", false]], "step() (procedure method)": [[21, "pyprobe.filters.Procedure.step", false]], "step() (step method)": [[21, "pyprobe.filters.Step.step", false]], "step_descriptions (rawdata attribute)": [[25, "pyprobe.rawdata.RawData.step_descriptions", false]], "summary() (cycling method)": [[6, "pyprobe.analysis.cycling.Cycling.summary", false]], "summary() (in module pyprobe.analysis.cycling)": [[6, "pyprobe.analysis.cycling.summary", false]], "temperature (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.temperature", false]], "time (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.time", false]], "time (neware property)": [[19, "pyprobe.cyclers.neware.Neware.time", false]], "time_unit_dict (units attribute)": [[28, "pyprobe.units.Units.time_unit_dict", false]], "title_font_size (plot attribute)": [[23, "pyprobe.plot.Plot.title_font_size", false]], "to_default_unit() (units method)": [[28, "pyprobe.units.Units.to_default_unit", false]], "unit_dict (units attribute)": [[28, "pyprobe.units.Units.unit_dict", false]], "unit_from_regexp() (in module pyprobe.units)": [[28, "pyprobe.units.unit_from_regexp", false]], "units (class in pyprobe.units)": [[28, "pyprobe.units.Units", false]], "validate_required_columns() (analysisvalidator method)": [[11, "pyprobe.analysis.utils.AnalysisValidator.validate_required_columns", false]], "variables (analysisvalidator property)": [[11, "pyprobe.analysis.utils.AnalysisValidator.variables", false]], "voltage (basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.voltage", false]], "x_range (plot property)": [[23, "pyprobe.plot.Plot.x_range", false]], "y2_range (plot property)": [[23, "pyprobe.plot.Plot.y2_range", false]], "y_range (plot property)": [[23, "pyprobe.plot.Plot.y_range", false]], "y_sampling_interval() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.y_sampling_interval", false]], "zero_column() (rawdata method)": [[25, "pyprobe.rawdata.RawData.zero_column", false]]}, "objects": {"": [[1, 0, 0, "-", "pyprobe"]], "pyprobe": [[2, 0, 0, "-", "analysis"], [12, 0, 0, "-", "cell"], [13, 0, 0, "-", "cyclers"], [20, 0, 0, "-", "dashboard"], [21, 0, 0, "-", "filters"], [22, 0, 0, "-", "logger"], [23, 0, 0, "-", "plot"], [24, 0, 0, "-", "pyprobe_types"], [25, 0, 0, "-", "rawdata"], [26, 0, 0, "-", "readme_processor"], [27, 0, 0, "-", "result"], [28, 0, 0, "-", "units"], [29, 0, 0, "-", "utils"]], "pyprobe.analysis": [[3, 0, 0, "-", "base"], [6, 0, 0, "-", "cycling"], [7, 0, 0, "-", "degradation_mode_analysis"], [8, 0, 0, "-", "differentiation"], [9, 0, 0, "-", "pulsing"], [10, 0, 0, "-", "smoothing"], [11, 0, 0, "-", "utils"]], "pyprobe.analysis.base": [[4, 0, 0, "-", "degradation_mode_analysis_functions"], [5, 0, 0, "-", "differentiation_functions"]], "pyprobe.analysis.base.degradation_mode_analysis_functions": [[4, 1, 1, "", "average_OCV_curves"], [4, 1, 1, "", "calc_electrode_capacities"], [4, 1, 1, "", "calc_full_cell_OCV"], [4, 1, 1, "", "calc_full_cell_OCV_composite"], [4, 1, 1, "", "calculate_dma_parameters"], [4, 1, 1, "", "ocv_curve_fit"]], "pyprobe.analysis.base.differentiation_functions": [[5, 1, 1, "", "calc_gradient_with_LEAN"], [5, 1, 1, "", "get_dx"], [5, 1, 1, "", "get_dy_and_counts"], [5, 1, 1, "", "get_x_sections"], [5, 1, 1, "", "smooth_gradient"], [5, 1, 1, "", "y_sampling_interval"]], "pyprobe.analysis.cycling": [[6, 2, 1, "", "Cycling"], [6, 1, 1, "", "summary"]], "pyprobe.analysis.cycling.Cycling": [[6, 3, 1, "", "input_data"], [6, 4, 1, "", "summary"]], "pyprobe.analysis.degradation_mode_analysis": [[7, 5, 1, "", "CompositeOCP"], [7, 5, 1, "", "OCP"], [7, 1, 1, "", "average_ocvs"], [7, 1, 1, "", "quantify_degradation_modes"], [7, 1, 1, "", "run_batch_dma_parallel"], [7, 1, 1, "", "run_batch_dma_sequential"], [7, 1, 1, "", "run_ocv_curve_fit"]], "pyprobe.analysis.degradation_mode_analysis.CompositeOCP": [[7, 6, 1, "", "eval"], [7, 4, 1, "", "from_data"], [7, 6, 1, "", "grad"]], "pyprobe.analysis.degradation_mode_analysis.OCP": [[7, 6, 1, "", "eval"], [7, 4, 1, "", "from_data"], [7, 4, 1, "", "from_expression"], [7, 6, 1, "", "grad"]], "pyprobe.analysis.differentiation": [[8, 2, 1, "", "Differentiation"], [8, 1, 1, "", "differentiate_LEAN"], [8, 1, 1, "", "gradient"]], "pyprobe.analysis.differentiation.Differentiation": [[8, 4, 1, "", "differentiate_FD"], [8, 4, 1, "", "differentiate_LEAN"], [8, 3, 1, "", "input_data"]], "pyprobe.analysis.pulsing": [[9, 2, 1, "", "Pulsing"], [9, 1, 1, "", "get_ocv_curve"], [9, 1, 1, "", "get_resistances"]], "pyprobe.analysis.pulsing.Pulsing": [[9, 3, 1, "", "input_data"], [9, 4, 1, "", "pulse"], [9, 4, 1, "", "pulse_rest"], [9, 4, 1, "", "pulse_summary"]], "pyprobe.analysis.smoothing": [[10, 2, 1, "", "Smoothing"], [10, 1, 1, "", "akima_interpolator"], [10, 1, 1, "", "cubic_interpolator"], [10, 1, 1, "", "downsample"], [10, 1, 1, "", "linear_interpolator"], [10, 1, 1, "", "pchip_interpolator"], [10, 1, 1, "", "savgol_smoothing"], [10, 1, 1, "", "spline_smoothing"]], "pyprobe.analysis.smoothing.Smoothing": [[10, 4, 1, "", "downsample"], [10, 3, 1, "", "input_data"], [10, 4, 1, "", "level_smoothing"], [10, 4, 1, "", "savgol_smoothing"], [10, 4, 1, "", "spline_smoothing"]], "pyprobe.analysis.utils": [[11, 2, 1, "", "AnalysisValidator"], [11, 1, 1, "", "assemble_array"]], "pyprobe.analysis.utils.AnalysisValidator": [[11, 3, 1, "", "input_data"], [11, 3, 1, "", "required_columns"], [11, 7, 1, "", "validate_required_columns"], [11, 6, 1, "", "variables"]], "pyprobe.cell": [[12, 2, 1, "", "Cell"], [12, 1, 1, "", "load_archive"], [12, 1, 1, "", "make_cell_list"]], "pyprobe.cell.Cell": [[12, 4, 1, "", "add_procedure"], [12, 4, 1, "", "archive"], [12, 4, 1, "", "import_pybamm_solution"], [12, 3, 1, "", "info"], [12, 3, 1, "", "procedure"], [12, 4, 1, "", "process_cycler_file"], [12, 4, 1, "", "process_generic_file"], [12, 4, 1, "", "quick_add_procedure"]], "pyprobe.cyclers": [[14, 0, 0, "-", "arbin"], [15, 0, 0, "-", "basecycler"], [16, 0, 0, "-", "basytec"], [17, 0, 0, "-", "biologic"], [18, 0, 0, "-", "maccor"], [19, 0, 0, "-", "neware"]], "pyprobe.cyclers.arbin": [[14, 2, 1, "", "Arbin"]], "pyprobe.cyclers.arbin.Arbin": [[14, 3, 1, "", "column_dict"], [14, 3, 1, "", "datetime_format"], [14, 3, 1, "", "input_data_path"]], "pyprobe.cyclers.basecycler": [[15, 2, 1, "", "BaseCycler"]], "pyprobe.cyclers.basecycler.BaseCycler": [[15, 6, 1, "", "capacity"], [15, 6, 1, "", "capacity_from_ch_dch"], [15, 6, 1, "", "charge_capacity"], [15, 3, 1, "", "column_dict"], [15, 6, 1, "", "current"], [15, 6, 1, "", "date"], [15, 3, 1, "", "datetime_format"], [15, 6, 1, "", "discharge_capacity"], [15, 6, 1, "", "event"], [15, 4, 1, "", "get_imported_dataframe"], [15, 3, 1, "", "header_row_index"], [15, 7, 1, "", "import_and_validate_data"], [15, 3, 1, "", "input_data_path"], [15, 6, 1, "", "pyprobe_dataframe"], [15, 4, 1, "", "read_file"], [15, 6, 1, "", "step"], [15, 6, 1, "", "temperature"], [15, 6, 1, "", "time"], [15, 6, 1, "", "voltage"]], "pyprobe.cyclers.basytec": [[16, 2, 1, "", "Basytec"]], "pyprobe.cyclers.basytec.Basytec": [[16, 3, 1, "", "column_dict"], [16, 3, 1, "", "input_data_path"], [16, 4, 1, "", "read_file"]], "pyprobe.cyclers.biologic": [[17, 2, 1, "", "Biologic"], [17, 2, 1, "", "BiologicMB"]], "pyprobe.cyclers.biologic.Biologic": [[17, 3, 1, "", "column_dict"], [17, 3, 1, "", "input_data_path"], [17, 4, 1, "", "read_file"]], "pyprobe.cyclers.biologic.BiologicMB": [[17, 4, 1, "", "apply_step_correction"], [17, 4, 1, "", "get_imported_dataframe"]], "pyprobe.cyclers.maccor": [[18, 2, 1, "", "Maccor"]], "pyprobe.cyclers.maccor.Maccor": [[18, 6, 1, "", "capacity"], [18, 6, 1, "", "charge_capacity"], [18, 3, 1, "", "column_dict"], [18, 6, 1, "", "date"], [18, 3, 1, "", "datetime_format"], [18, 6, 1, "", "discharge_capacity"], [18, 3, 1, "", "input_data_path"], [18, 4, 1, "", "read_file"]], "pyprobe.cyclers.neware": [[19, 2, 1, "", "Neware"]], "pyprobe.cyclers.neware.Neware": [[19, 6, 1, "", "capacity"], [19, 6, 1, "", "charge_capacity"], [19, 3, 1, "", "column_dict"], [19, 6, 1, "", "discharge_capacity"], [19, 3, 1, "", "input_data_path"], [19, 4, 1, "", "read_file"], [19, 6, 1, "", "time"]], "pyprobe.dashboard": [[20, 1, 1, "", "launch_dashboard"]], "pyprobe.filters": [[21, 2, 1, "", "Cycle"], [21, 2, 1, "", "Experiment"], [21, 2, 1, "", "Procedure"], [21, 2, 1, "", "Step"], [21, 1, 1, "", "get_cycle_column"]], "pyprobe.filters.Cycle": [[21, 4, 1, "", "charge"], [21, 4, 1, "", "chargeordischarge"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 3, 1, "", "cycle_info"], [21, 4, 1, "", "discharge"], [21, 4, 1, "", "rest"], [21, 4, 1, "", "step"]], "pyprobe.filters.Experiment": [[21, 4, 1, "", "charge"], [21, 4, 1, "", "chargeordischarge"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 4, 1, "", "cycle"], [21, 3, 1, "", "cycle_info"], [21, 4, 1, "", "discharge"], [21, 4, 1, "", "rest"], [21, 4, 1, "", "step"]], "pyprobe.filters.Procedure": [[21, 4, 1, "", "add_external_data"], [21, 4, 1, "", "charge"], [21, 4, 1, "", "chargeordischarge"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 4, 1, "", "cycle"], [21, 3, 1, "", "cycle_info"], [21, 4, 1, "", "discharge"], [21, 4, 1, "", "experiment"], [21, 6, 1, "", "experiment_names"], [21, 4, 1, "", "load_external_file"], [21, 3, 1, "", "readme_dict"], [21, 4, 1, "", "remove_experiment"], [21, 4, 1, "", "rest"], [21, 4, 1, "", "step"]], "pyprobe.filters.Step": [[21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 4, 1, "", "step"]], "pyprobe.logger": [[22, 1, 1, "", "configure_logging"]], "pyprobe.plot": [[23, 5, 1, "", "Plot"], [23, 9, 1, "", "seaborn"]], "pyprobe.plot.Plot": [[23, 4, 1, "", "add_colorbar"], [23, 4, 1, "", "add_colorscaled_line"], [23, 4, 1, "", "add_line"], [23, 8, 1, "", "axis_font_size"], [23, 8, 1, "", "default_layout"], [23, 6, 1, "", "fig"], [23, 4, 1, "", "make_colorscale"], [23, 4, 1, "", "show"], [23, 8, 1, "", "title_font_size"], [23, 6, 1, "", "x_range"], [23, 6, 1, "", "y2_range"], [23, 6, 1, "", "y_range"]], "pyprobe.pyprobe_types": [[24, 9, 1, "", "ExperimentOrCycleType"], [24, 9, 1, "", "FilterToCycleType"], [24, 9, 1, "", "FilterToExperimentType"], [24, 9, 1, "", "FilterToStepType"], [24, 9, 1, "", "PyProBEDataType"], [24, 9, 1, "", "PyProBERawDataType"]], "pyprobe.rawdata": [[25, 2, 1, "", "RawData"]], "pyprobe.rawdata.RawData": [[25, 6, 1, "", "capacity"], [25, 7, 1, "", "check_required_columns"], [25, 3, 1, "", "column_definitions"], [25, 6, 1, "", "data"], [25, 6, 1, "", "pybamm_experiment"], [25, 4, 1, "", "set_SOC"], [25, 4, 1, "", "set_reference_capacity"], [25, 3, 1, "", "step_descriptions"], [25, 4, 1, "", "zero_column"]], "pyprobe.readme_processor": [[26, 5, 1, "", "ReadmeModel"], [26, 1, 1, "", "process_readme"]], "pyprobe.result": [[27, 5, 1, "", "PolarsColumnCache"], [27, 2, 1, "", "Result"], [27, 1, 1, "", "combine_results"]], "pyprobe.result.PolarsColumnCache": [[27, 6, 1, "", "base_dataframe"], [27, 6, 1, "", "cached_dataframe"], [27, 4, 1, "", "clear_cache"], [27, 4, 1, "", "collect_columns"], [27, 6, 1, "", "columns"], [27, 4, 1, "", "get_quantities"], [27, 6, 1, "", "quantities"]], "pyprobe.result.Result": [[27, 4, 1, "", "add_new_data_columns"], [27, 3, 1, "", "base_dataframe"], [27, 4, 1, "", "build"], [27, 4, 1, "", "clean_copy"], [27, 3, 1, "", "column_definitions"], [27, 6, 1, "", "column_list"], [27, 6, 1, "", "contains_lazyframe"], [27, 6, 1, "", "data"], [27, 4, 1, "", "define_column"], [27, 4, 1, "", "extend"], [27, 4, 1, "", "get"], [27, 4, 1, "", "get_only"], [27, 4, 1, "", "hvplot"], [27, 3, 1, "", "info"], [27, 4, 1, "", "join"], [27, 6, 1, "", "live_dataframe"], [27, 4, 1, "", "plot"], [27, 4, 1, "", "print_definitions"], [27, 6, 1, "", "quantities"]], "pyprobe.units": [[28, 5, 1, "", "Units"], [28, 1, 1, "", "split_quantity_unit"], [28, 1, 1, "", "unit_from_regexp"]], "pyprobe.units.Units": [[28, 4, 1, "", "from_default_unit"], [28, 8, 1, "", "prefix_dict"], [28, 8, 1, "", "time_unit_dict"], [28, 4, 1, "", "to_default_unit"], [28, 8, 1, "", "unit_dict"]], "pyprobe.utils": [[29, 5, 1, "", "PyBaMMSolution"], [29, 1, 1, "", "flatten_list"]], "pyprobe.utils.PyBaMMSolution": [[29, 4, 1, "", "get_data_dict"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "pydantic_model", "Python model"], "3": ["py", "pydantic_field", "Python field"], "4": ["py", "method", "Python method"], "5": ["py", "class", "Python class"], "6": ["py", "property", "Python property"], "7": ["py", "pydantic_validator", "Python validator"], "8": ["py", "attribute", "Python attribute"], "9": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:pydantic_model", "3": "py:pydantic_field", "4": "py:method", "5": "py:class", "6": "py:property", "7": "py:pydantic_validator", "8": "py:attribute", "9": "py:data"}, "terms": {"": [9, 10, 14, 18, 21, 22, 25, 27, 28, 31, 36, 39, 40, 42, 43, 45, 46, 47, 50, 53, 55, 56], "0": [7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 27, 28, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 49, 55], "000": 43, "000001": 40, "000002": 40, "000003": 40, "000005": 40, "00001": 40, "00004": 40, "0004": 40, "0004023": 40, "00040614": 40, "001": [28, 40], "001267": 40, "002": 37, "003999": 40, "00399931": 40, "004": 40, "00400001": 40, "00400004": 40, "01": [27, 40, 41, 43], "018585": 40, "02": [40, 49], "0205": 41, "022805": 40, "026043": 36, "026056": 35, "026211": 35, "027090": 36, "03": [27, 40, 41, 43], "030006": 41, "030212": 35, "034212": 35, "038212": 35, "04": [35, 36, 37, 39, 40, 42, 43, 44, 49, 55], "040186": 36, "040937": 40, "041086": 40, "041138": 40, "041241": 40, "041247": 40, "041296": 40, "04132": 40, "041329": 40, "041362": 40, "04139": 40, "041391": 40, "041392": 40, "041393": 40, "041395": 40, "042212": 35, "0428": 41, "04478": 41, "046213": 35, "05": 45, "050213": 35, "054213": 35, "054544": 36, "058214": 35, "06": [28, 40], "062214": 35, "0668": 8, "080534": 41, "082022": 40, "09": [27, 28, 36, 40, 49], "0909": 41, "0949": 35, "0x7f82b5554140": 45, "0x7fb0981cfd40": 36, "0x7fb09884c710": 36, "0x7fb0b4db97f0": 36, "0x7fc2e9bb39b0": 35, "0x7fc2e9c73e00": 35, "0x7fd18677dac0": 40, "1": [4, 5, 7, 8, 9, 18, 27, 28, 31, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 53, 55], "10": [5, 8, 35, 36, 37, 39, 40, 41, 42, 43, 45, 55], "100": [27, 35, 36, 40], "1000": [28, 41], "1000000": 28, "100051": [5, 8, 37], "1016": [5, 8, 37, 45], "1059": 8, "11": [35, 36, 39, 40, 51, 55], "110": 43, "111": 43, "112": 43, "113": 43, "1149": 41, "119273": 40, "12": [28, 36, 39, 40, 41, 42, 43, 51, 55], "120": 27, "121": 8, "123": 27, "1234": 41, "125": 27, "13": [40, 41, 43], "131485": 35, "135": 27, "14": [23, 36, 40, 41], "140": 27, "140700": 45, "141": 27, "145": 27, "15": [40, 41, 45], "150": 27, "154": 41, "16": 40, "160": 27, "164407": 40, "167": 41, "17": [36, 40, 41], "1745": 8, "18": [23, 41], "19": 49, "1919": 35, "1945": 41, "197": 40, "1972": 8, "1d": [27, 40, 47], "1e": [28, 37], "1e85f7": 27, "2": [4, 7, 27, 31, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 50, 55], "20": [39, 40, 55], "2001": 40, "2020": [5, 8, 37, 41], "2022": [27, 45], "2024": [40, 45, 49], "2025": [40, 41, 43], "21": [36, 40, 41], "210305": 40, "212": 43, "213": 43, "214": 43, "215": 43, "216": 43, "217": 43, "21700": 45, "218": 43, "219": 43, "22": [40, 41, 43], "220": 43, "221": 43, "227986": 35, "23": 43, "234185": 45, "24": [36, 43], "2417": 8, "246969": 40, "2482": 41, "25": 8, "25degc": 45, "27": 41, "270011": 41, "2769": 41, "28448": 40, "2895": 40, "29": [40, 41, 49], "2962": 40, "2979": 40, "298": 45, "2f": 36, "3": [5, 8, 27, 31, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 50, 51, 55], "30": [22, 39, 40, 41, 45, 55], "301386": 40, "31": 40, "3117": 41, "3120": 41, "32": [40, 41], "324487": 35, "329627": 40, "33": [40, 43], "34": [40, 43], "345855": 35, "346": 40, "347": 40, "348": 40, "349": 40, "35": [40, 43, 45], "350": 40, "36": [40, 43], "3600": [28, 36], "3631": 41, "37": [40, 43], "38": [40, 43], "383": 8, "3830": 8, "39": [35, 37, 39, 40, 41, 42, 43, 44, 45], "390765": 35, "392471": 40, "393179": 40, "4": [27, 31, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 55], "40": 43, "400785": 35, "4023": 40, "40614": 40, "41": 43, "417": 41, "42": [41, 43], "420988": 35, "425": 45, "43": 43, "44": 43, "4444": 41, "45": 43, "478688": 36, "4875": 41, "490732": 40, "495": 40, "497": 40, "4ma": [39, 40, 55], "5": [8, 27, 31, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 55], "50": 27, "500": 27, "500477": 41, "5138": 41, "5164": 35, "517489": 35, "554": 49, "5542": 41, "562745": 40, "562746": 40, "562747": 40, "562748": 40, "562749": 40, "565912": 35, "5711": 40, "58": 49, "584": 40, "5842": 41, "5866": 35, "6": [31, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 55], "60": 28, "600": 23, "603": 45, "61": 40, "6103": 41, "613991": 35, "62069": 41, "621992": 41, "6334": 35, "640815": 35, "640x480": 42, "665": 35, "67": 36, "672765": 40, "685915": 35, "7": [8, 27, 31, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 55], "705558": 35, "705622": 35, "710493": 35, "7111": 41, "7114": 35, "725532": 35, "7326": 41, "735555": 35, "735943": 35, "740624": 40, "743512": 40, "747102": 41, "747127": 41, "750596": 35, "775612": 35, "776232": 36, "7890": 41, "789_589": 40, "795638": 35, "8": [27, 35, 36, 37, 39, 40, 41, 42, 43, 45, 55], "800": 23, "8022": 35, "805578": 35, "805967": 35, "806994": 35, "8090": 41, "835632": 35, "849923": 41, "85": 41, "8538": 41, "86": 41, "876766": 40, "8987": 35, "9": [7, 27, 35, 36, 37, 39, 40, 41, 42, 43, 45, 55], "90": 27, "90001": 41, "900663": 35, "903497": 35, "91": 40, "910931": 35, "9159": 41, "9308": 41, "94": 40, "959186": 40, "9793": 41, "9934": 35, "999212": 40, "99931": 40, "999406": 40, "999854": 40, "A": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 36, 37, 39, 40, 42, 43, 45, 47, 49, 50, 55], "And": [35, 36, 40, 41], "As": [35, 40, 42, 43], "BY": 37, "Be": 27, "Being": 42, "But": 43, "By": [22, 27, 31, 40], "For": [18, 19, 21, 23, 27, 30, 40, 43, 48, 49, 53, 55], "If": [5, 7, 10, 11, 12, 21, 25, 27, 30, 31, 40, 43, 49, 51, 52, 55], "In": [27, 30, 31, 36, 40, 41, 42, 43, 48, 49, 51, 55], "It": [12, 23, 25, 27, 30, 31, 32, 42, 47, 49, 51, 55, 56], "Its": 50, "No": [27, 50], "On": 51, "One": [31, 39], "Or": 47, "That": 39, "The": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53, 54, 56], "Then": [35, 47, 52], "There": 55, "These": [12, 25, 31, 40, 43, 49, 52, 55], "To": [27, 34, 35, 46, 47, 51, 53, 55], "With": [34, 35, 36], "_": [36, 49], "__all__": 27, "__call__": 43, "__init__": 43, "__pydantic_validator__": 43, "__return_pydantic_validator__": 43, "__tracebackhide__": 43, "_abstractocp": 7, "_check_column_dict": [14, 15, 16, 17, 18, 19], "_check_input_data_path": [14, 15, 16, 17, 18, 19], "_intern": 43, "_load_base_datafram": [21, 25, 27], "_mb": 49, "_validate_cal": 43, "ab9050": 41, "abl": [36, 39, 42, 49, 50, 51], "about": [12, 27, 28, 43, 48, 49, 55, 56], "abov": [27, 34, 36, 55], "accept": [23, 31], "access": [31, 40, 54], "accordingli": 25, "achiev": 12, "acquisit": 50, "across": [7, 23, 25, 32], "acta": 45, "activ": [34, 51], "actual": 27, "ad": [12, 27, 33, 40, 44, 51, 54], "add": [12, 17, 18, 21, 23, 25, 27, 30, 31, 35, 36, 40, 49, 55, 56], "add_colorbar": [1, 23], "add_colorscaled_lin": [1, 23], "add_external_data": [1, 21, 49], "add_lin": [1, 23], "add_new_data_column": [1, 27], "add_procedur": [1, 12, 35, 36, 37, 39, 40, 42, 43, 44, 45, 49], "addit": [10, 12, 27, 31, 42, 49, 56], "addition": 52, "adjust": [30, 36], "after": [9, 35, 44, 47, 49, 51], "ag": [41, 45], "against": [36, 43], "agnost": [30, 49], "ah": [9, 16, 25, 28, 35, 36, 37, 39, 40, 41, 42, 43, 44, 48, 49, 50], "akima": [7, 10], "akima_interpol": [1, 2, 10], "al": [5, 8, 37], "algorithm": [4, 7, 10, 12], "alia": [24, 36], "alias": 24, "align": 27, "all": [7, 8, 10, 11, 15, 23, 27, 30, 31, 32, 34, 36, 40, 42, 44, 47, 49, 52, 53], "allclos": 36, "allow": [21, 27, 30, 32, 39, 48, 49, 53, 55], "along": 36, "alongsid": [31, 34, 39, 40, 45, 49, 55], "alpha": [5, 27], "alreadi": [12, 41, 49], "also": [35, 37, 41, 42, 43, 53], "alter": 27, "altern": [8, 27, 34, 37, 40, 41], "alwai": [31, 48], "amper": 50, "an": [4, 7, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 30, 31, 35, 37, 40, 42, 43, 46, 48, 49, 51, 52, 53, 54, 55], "anaconda": 51, "analys": [37, 38, 40, 44, 55], "analysi": [0, 1, 32, 33, 35, 36, 37, 38, 40, 41, 45, 49, 52, 54], "analysis_modul": 48, "analysisvalid": [1, 2, 11, 31, 32, 43], "ani": [7, 10, 11, 12, 15, 21, 25, 26, 27, 29, 30, 31, 40, 42, 43, 45, 47, 49, 51, 53, 55], "anod": [4, 31, 41], "anoth": [21, 27, 30], "anyth": 43, "api": [46, 48, 51], "app": 51, "appear": [39, 49], "append": [7, 36, 40], "appli": [5, 7, 8, 21, 25, 37, 47], "applic": 27, "apply_step_correct": [13, 17], "approach": [5, 8, 37, 47], "ar": [5, 7, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 27, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55], "arang": 36, "arbin": [1, 12, 13, 50], "archiv": [1, 12, 44], "area": 27, "aren": 27, "arg": [23, 29, 31, 43], "argskwarg": 43, "argsort": 36, "argument": [7, 8, 9, 10, 21, 23, 27, 32, 35, 40, 42, 49, 53], "around": [27, 36], "arrai": [7, 11, 23, 27, 31, 40, 41, 43, 47], "articl": [5, 8], "asctim": 22, "assembl": 11, "assemble_arrai": [1, 2, 11], "assert": 36, "assign": [12, 48, 49], "associ": 45, "assum": [5, 8, 10, 12, 49, 50], "asterisk": [12, 14, 15, 16, 17, 18, 19, 30], "astyp": 36, "attempt": 27, "attribut": [27, 31, 40, 43, 44, 47, 48, 49, 52], "auto": [41, 50], "automat": [27, 30, 32, 34, 35, 50, 56], "autonotebook": 41, "aux_temperature_1": [14, 50], "avail": [12, 23, 27, 39, 48, 51], "averag": [4, 7, 36], "average_differ": 36, "average_ocv": [1, 2, 7], "average_ocv_curv": [2, 3, 4], "awar": 27, "ax": [27, 35, 37, 39, 40, 41, 42, 44, 45], "ax1": 36, "ax2": [36, 42], "axi": [23, 27, 36], "axis_font_s": [1, 23], "b": [18, 27], "back": [32, 45], "backend": [23, 27, 36, 42, 53], "bar": [27, 36], "barh": 27, "base": [1, 2, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 33, 37, 43, 47, 50], "base_": 43, "base_datafram": [1, 21, 25, 27, 40, 41, 43, 50], "basecycl": [1, 13, 14, 16, 17, 18, 19, 30], "basemodel": [6, 8, 9, 10, 11, 12, 15, 27, 30, 32, 43], "basytec": [1, 12, 13, 50], "bat": [17, 49, 50], "batch": 54, "batteri": [5, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 21, 30, 35, 36, 37, 41, 45, 49, 55], "bbox_to_anchor": 36, "becaus": [36, 43], "been": [12, 21, 36, 40, 48, 49], "befor": [6, 21, 49, 51, 55], "begin": [30, 40, 49], "behaviour": 12, "behind": [32, 36, 43], "being": [30, 31, 36, 51], "below": [30, 36, 50, 51, 52], "benchmark": 36, "benefit": 36, "between": [4, 7, 10, 49], "bidirect": 45, "bin": [5, 8, 10, 34, 51], "biolog": [1, 12, 13, 30, 49, 50], "biologic_mb": [12, 49, 50], "biologicmb": [1, 13, 17, 30], "blue": [35, 36, 39], "bokeh": 27, "bol": 45, "bool": [6, 7, 10, 12, 23, 27, 29], "boolean": 27, "bor": [5, 8], "both": [27, 45], "bottom": 27, "bound": [7, 23, 41], "box": 27, "boxplot": [27, 36], "branch": 52, "break": [35, 36, 37, 39, 40, 42, 43, 55], "break_in": 39, "breakdown": 36, "brosa": 45, "browser": 52, "buffer": 23, "build": [1, 27, 52], "built": [31, 35, 36, 41, 42, 49, 52, 56], "c": [27, 28, 37, 43, 45, 50], "cach": 27, "cached_datafram": [1, 27], "caihao": [5, 8], "calc_electrode_capac": [2, 3, 4, 31], "calc_full_cell_ocv": [2, 3, 4], "calc_full_cell_ocv_composit": [2, 3, 4], "calc_gradient_with_lean": [2, 3, 5], "calcul": [3, 4, 5, 6, 8, 9, 15, 18, 19, 25, 31, 35, 43], "calculate_dma_paramet": [2, 3, 4], "call": [7, 12, 21, 25, 27, 31, 34, 35, 36, 40, 42, 43, 45, 47, 48, 53], "callabl": [7, 10, 12, 41], "can": [7, 8, 12, 21, 23, 25, 27, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 55], "cannot": 27, "cap": [19, 50], "capabl": 46, "capac": [1, 4, 6, 7, 9, 13, 14, 15, 16, 17, 18, 19, 25, 28, 30, 31, 35, 36, 37, 39, 40, 41, 42, 43, 44, 48, 49, 50], "capacity_from_ch_dch": [13, 15], "captur": [35, 36, 37, 39, 40, 41, 42, 44, 45], "care": 36, "carefulli": 35, "case": [27, 30, 39, 50], "cathod": [4, 31, 41], "caus": 32, "cc": [39, 55], "cc_charg": 39, "cc_discharg": 39, "cd": [34, 52], "cell": [0, 1, 4, 6, 7, 9, 20, 23, 25, 27, 31, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 52, 53, 54, 55, 56], "cell_capac": [4, 31], "cell_list": [20, 49], "center": 27, "ch": 41, "chain": [32, 47], "chang": [7, 15, 27, 34, 40, 50], "changyong": [5, 8], "channel": [12, 35, 36, 37, 39, 40, 42, 43, 44, 49], "characteris": 37, "charg": [1, 4, 6, 7, 14, 15, 17, 18, 19, 21, 25, 30, 35, 39, 40, 45, 47, 48, 50, 55], "charge_capac": [13, 15, 18, 19], "charge_curr": 4, "charge_filt": 7, "charge_numb": 21, "charge_ocv": 4, "charge_soc": 4, "chargeordischarg": [1, 21, 47], "chargeordischarge_numb": 21, "check": [11, 21, 25, 27, 31, 32, 43], "check_required_column": [1, 25], "chemistri": [35, 36, 37, 39, 40, 42, 43, 44, 49], "chen": 41, "chen2020": 41, "chg": [19, 50], "choos": [44, 49, 55], "chosen": 34, "chrono": [14, 15, 18], "circuit": [4, 7, 41], "class": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 43, 46, 47, 48, 50, 56], "classmethod": 27, "clean": [31, 42, 44], "clean_copi": [1, 27, 31], "clear": 27, "clear_cach": [1, 27], "clearli": [31, 37], "clone": [34, 51], "coalesc": 27, "code": [31, 34, 51], "coeffici": [5, 8], "collect": [27, 29, 49], "collect_column": [1, 27], "color": [23, 27, 35, 36, 39, 41, 42], "color_bi": 23, "color_bound": 23, "colorbar": [23, 27], "colormap": [23, 27], "colorscal": 23, "column": [1, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 27, 28, 30, 31, 32, 35, 36, 40, 43, 47, 48, 49, 54, 56], "column_definit": [1, 21, 25, 27, 31, 40], "column_dict": [12, 13, 14, 15, 16, 17, 18, 19, 30], "column_list": [1, 27, 37], "column_nam": 27, "com": [5, 8, 34], "combin": 27, "combine_result": [0, 1, 27], "come": [6, 43], "comma": 55, "command": [32, 34, 40, 51, 52], "commerci": 45, "commit": 34, "comp1_frac": 4, "compar": [10, 32, 37, 38, 44], "compat": [31, 34, 42], "complet": [30, 41, 51, 56], "compon": [4, 7], "composit": [7, 27], "compositeocp": [1, 2, 7], "comprehens": 45, "compress": [12, 36, 44], "compression_prior": [12, 36], "comput": [10, 31, 36, 43, 48], "concat": [27, 36], "concat_method": 27, "concaten": [17, 27, 30], "concept": 43, "conda": 51, "condit": [10, 21, 25, 49], "conduct": [11, 31, 41], "configur": 22, "configure_log": [0, 1, 22], "confirm": [31, 36], "conflict": [27, 34], "consid": [8, 21, 39, 55], "constant": [8, 21, 39], "constant_curr": [1, 21, 39], "constant_current_numb": 21, "constant_voltag": [1, 21, 39], "constant_voltage_numb": 21, "construct": [31, 32, 39, 42], "constructor": 45, "consum": 55, "contain": [4, 5, 6, 7, 8, 9, 10, 12, 15, 21, 23, 25, 27, 31, 39, 40, 41, 43, 47, 48, 49, 52, 55], "contains_lazyfram": [1, 27], "content": 30, "continu": [23, 34, 52], "contribut": [32, 33, 46, 48], "control": [42, 51], "convers": [12, 28, 30, 36, 42, 50], "convert": [12, 21, 27, 28, 30, 38, 47, 50, 54], "copi": [27, 30, 31], "correct": [17, 31, 32, 43], "correctli": [31, 32], "correspond": [25, 27, 28, 49, 50, 55], "coulomb": 40, "count": [5, 21, 39, 40, 47, 55], "cover": 36, "crate": [14, 15, 18], "creat": [7, 10, 20, 21, 23, 25, 27, 28, 31, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 49, 51, 53, 56], "creation": 53, "critic": 32, "csv": [21, 36, 49, 50], "csv_time": 36, "csv_time_panda": 36, "cubic": [7, 10], "cubic_interpol": [1, 2, 10], "cumbersom": 55, "cumsum": 36, "cumul": 36, "cumulative_tim": 36, "current": [4, 9, 13, 14, 15, 16, 17, 18, 19, 21, 25, 27, 28, 30, 36, 39, 40, 42, 43, 47, 48, 50], "current_ma": [40, 47], "curv": [4, 7, 9, 10, 37, 41], "custom": [32, 42, 43], "custom_plot": 27, "customis": [42, 53], "customiz": 56, "cv": [39, 55], "cv_hold": 39, "cycl": [0, 1, 2, 7, 8, 9, 10, 11, 12, 21, 24, 25, 27, 35, 36, 37, 39, 40, 42, 43, 45, 47, 48, 49, 50, 53, 55], "cycle_3": 39, "cycle_incr": 36, "cycle_info": [1, 21, 40, 43], "cycle_numb": 21, "cycle_rep": 36, "cycler": [0, 1, 12, 33, 35, 36, 37, 39, 40, 42, 43, 44, 54, 55], "cycler_fil": 49, "cycler_file_": 49, "cycler_file_1": 49, "cycler_file_2": 49, "cycles_and_step": 29, "cycling_summari": 40, "cylindr": 45, "d": [14, 18, 27, 31, 37, 41], "dai": 36, "dash": 23, "dashboard": [0, 1, 23, 40, 51], "dashdot": 23, "data": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 36, 38, 41, 42, 43, 45, 48, 51, 52, 53, 54, 55], "data_directori": [35, 36, 37, 39, 40, 42, 43, 44, 45], "data_list": 27, "datafram": [10, 15, 16, 17, 18, 19, 21, 23, 25, 27, 30, 31, 32, 36, 40, 41, 42, 43, 47], "dataframe_list": [15, 17], "dataframegroupbi": 27, "datapoint": 8, "dataset": [36, 37, 39, 42, 43, 45, 49], "datatyp": 50, "date": [12, 13, 14, 15, 16, 17, 18, 19, 21, 27, 30, 40, 49, 50], "date_column_format": 12, "date_column_nam": [21, 27], "date_rang": 27, "datetim": [21, 40, 49, 50], "datetime_format": [13, 14, 15, 16, 17, 18, 19], "dchg": [19, 50], "dchg_before_chg": 6, "deal": 43, "debug": 31, "declar": [30, 31, 41, 43], "decor": [31, 32], "decreas": [15, 21, 50], "def": [31, 36, 41, 43, 49], "default": [6, 7, 8, 10, 12, 19, 21, 22, 23, 25, 27, 28, 36, 40, 50], "default_layout": [1, 23], "default_tim": 36, "defin": [3, 15, 25, 27, 29, 30, 31, 35, 41, 43, 49, 55], "define_column": [1, 27], "definit": [25, 27, 31], "deg": 45, "degrad": [4, 7, 36, 37, 41, 45, 49], "degradation_mode_analysi": [1, 2, 41], "degradation_mode_analysis_funct": [2, 3, 31], "delai": 36, "delta": [5, 8, 25], "demonstr": [32, 35, 36, 42, 43, 44, 45], "densiti": 27, "depend": [8, 10, 23, 27, 33, 34, 42, 48, 51, 53], "deprec": 23, "deriv": 10, "describ": [8, 27, 31, 37, 40, 44, 49, 52, 55], "descript": [25, 39, 40, 45, 49, 55], "design": [47, 48], "desir": 10, "desktop": 51, "detail": [21, 27, 43, 45, 49, 50, 51, 53, 55, 56], "determin": [7, 10], "dev": [34, 43], "develop": [34, 41, 46, 48, 52], "df": [17, 27, 36], "dfn": 45, "diagnosi": [5, 8, 37], "diagon": 27, "dict": [7, 12, 14, 15, 16, 17, 18, 19, 21, 25, 26, 27, 28, 29, 30, 43, 49], "dictionari": [7, 12, 14, 15, 16, 17, 18, 19, 21, 25, 27, 28, 29, 30, 31, 40, 43, 47, 49, 52, 56], "differ": [8, 10, 27, 31, 37, 40, 42, 43, 49, 55], "differenti": [1, 2, 5, 31, 38, 41, 43, 44, 48], "differential_evolut": [7, 41], "differentiate_fd": [2, 8], "differentiate_lean": [1, 2, 8, 37], "differentiation_funct": [2, 3], "direct": 48, "directli": [25, 41, 42, 47, 51, 53], "directori": [12, 34, 49, 51], "discharg": [1, 4, 6, 7, 14, 15, 17, 18, 19, 21, 30, 35, 36, 37, 39, 40, 43, 45, 47, 50, 55], "discharge_capac": [13, 15, 18, 19], "discharge_curr": 4, "discharge_experi": 45, "discharge_filt": 7, "discharge_numb": 21, "discharge_ocv": 4, "discharge_soc": 4, "discret": [5, 8, 23, 37], "displai": [20, 45, 52], "distinguish": [49, 56], "dma": [4, 7, 41], "do": [12, 30, 49, 51], "doc": [34, 40, 43, 52], "document": [14, 15, 18, 23, 27, 31, 48, 51, 53, 54, 55], "doe": [12, 25, 30, 40, 43], "doesn": 35, "doi": [5, 8, 37, 41, 45], "done": [30, 31, 34, 49], "dongsheng": [5, 8], "dot": 23, "down": [9, 39], "downsampl": [1, 2, 10, 37], "downsampled_data": 37, "downsampled_data_dvdq": 37, "dpt": [18, 50], "dqdv": [7, 41], "draw": 27, "dropdown": 51, "dsocdv": 41, "dtype": [4, 7, 11], "due": [36, 37], "dva": 37, "dvdq": 7, "dx": 8, "dxdy": [5, 8, 37], "dy": [5, 8], "dydx": [5, 8], "e": [7, 12, 23, 27, 28, 30, 34, 41, 43, 45, 47, 49, 50, 55], "each": [7, 9, 10, 27, 30, 42, 49, 55], "easi": [31, 49], "easiest": 51, "easili": [31, 37], "ecel": [17, 30, 50], "edit": [34, 51], "effect": 37, "effici": [10, 40], "either": [5, 8, 19, 25, 34, 36, 47], "elaps": [40, 50], "electacta": 45, "electrochem": [41, 45], "electrochimica": 45, "electrod": [4, 7, 31, 41], "els": 27, "empti": [28, 40], "en": 41, "enabl": [42, 53, 55], "encourag": 31, "end": [21, 27, 30, 32, 39, 40, 55], "energi": 45, "enough": [31, 43], "ensur": [30, 31, 32, 43], "enter": 34, "entir": 39, "entri": 27, "enumer": 36, "environ": [34, 40, 51], "equival": 27, "error": [25, 27, 31, 32, 40, 43, 48, 51, 55], "error_msg": 40, "estim": [23, 27], "et": [5, 8, 37], "etc": [27, 31, 47, 49], "etran": [5, 8, 37], "etransport": [5, 8, 37], "eval": [2, 7], "evalu": [8, 9, 32, 35], "evenli": 8, "event": [9, 13, 15, 21, 25, 36, 40, 43, 50], "event_incr": 36, "event_rep": 36, "everi": [27, 47], "exactli": 42, "exampl": [8, 23, 27, 30, 31, 32, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 53, 55, 56], "excel": [12, 21, 36, 49, 56], "except": 36, "execut": [32, 36], "exist": [12, 19, 25, 27, 30, 31, 40, 43, 48], "exp": [41, 45], "expect": [27, 40, 42], "experi": [0, 1, 6, 7, 8, 9, 10, 11, 12, 21, 24, 25, 26, 35, 36, 37, 39, 40, 42, 43, 45, 47, 48, 49, 53, 54, 55], "experiment": [5, 8, 10, 21, 37, 41, 45, 47, 48, 49, 52, 55, 56], "experiment_fold": 49, "experiment_nam": [1, 12, 21, 35, 40], "experiment_object": 43, "experiment_record": 49, "experimentorcycletyp": [0, 1, 24], "explicitli": 23, "explor": [37, 46], "expr": [7, 15, 18, 19, 21, 28], "express": [7, 15, 18, 19, 21, 28, 32, 41], "extend": [1, 27], "extens": [27, 30, 55], "extern": 21, "extra": 34, "extract": [30, 35, 39], "f": [14, 27, 31, 36, 40, 45, 49], "f16a6f": 27, "f64": [35, 40, 41], "face": 23, "factor": [28, 36], "factori": [12, 21, 25, 27], "fals": [7, 10, 12, 27, 36], "familiar": [27, 47], "fast": 27, "faster": [10, 36], "fastest": 49, "fb": 41, "featur": [42, 45], "feng": [5, 8, 37], "few": 36, "field": [6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 25, 27, 31, 40, 44, 49], "fig": [1, 23, 35, 36, 37, 39, 41, 42, 45], "figsiz": [27, 36, 42], "figur": [23, 27, 36, 41, 42], "file": [12, 15, 16, 17, 18, 19, 21, 22, 25, 26, 30, 36, 39, 40, 43, 44, 45, 47, 50, 54, 56], "file_s": 36, "filenam": [12, 35, 36, 37, 39, 40, 42, 43, 44, 45, 49], "filename_funct": 12, "filename_input": [12, 49], "filepath": [15, 16, 17, 18, 19, 21], "fill": 27, "fillna": 36, "filter": [0, 1, 7, 8, 9, 10, 12, 24, 25, 27, 32, 35, 36, 38, 40, 43, 44, 45, 48, 49, 50, 52, 54, 55], "filtertocycletyp": [0, 1, 21, 24], "filtertoexperimenttyp": [0, 1, 21, 24], "filtertosteptyp": [0, 1, 24], "final": [32, 35, 36], "final_cycl": 37, "finit": [8, 31, 37, 43], "first": [4, 7, 9, 10, 18, 21, 25, 27, 34, 35, 37, 40, 41, 43, 44, 47, 49, 55], "fit": [4, 7, 10, 38, 44], "fitted_curv": 41, "fitting_target": [4, 7, 41], "fitting_target_data": 4, "fix": 25, "flag": 34, "flatten": 29, "flatten_list": [0, 1, 29, 40], "flattened_step": 40, "flexibl": 42, "float": [4, 5, 8, 9, 10, 23, 25, 27, 28, 31], "float64": [4, 5, 7, 10, 11, 23, 27, 50], "flowchart": 52, "folder": [12, 44, 49], "folder_path": [12, 35, 36, 37, 39, 40, 42, 43, 44, 45, 49], "follow": [17, 30, 31, 32, 34, 43, 49, 50, 51, 52, 55, 56], "font": [23, 27], "fontsiz": [27, 36], "forecast": 27, "fork": 34, "form": [7, 30, 31], "format": [12, 14, 15, 16, 17, 18, 19, 21, 22, 25, 30, 31, 36, 38, 43, 45, 51, 54], "found": [28, 32, 41], "frac": 8, "fraction": 4, "framework": 32, "fri": 27, "from": [7, 9, 10, 11, 12, 15, 17, 18, 19, 21, 23, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 48, 50, 51, 52, 53, 54], "from_data": [2, 7, 41], "from_default_unit": [1, 28], "from_express": [2, 7, 41], "full": [4, 7, 35, 41, 47], "full_procedur": 39, "function": [3, 4, 5, 7, 8, 10, 12, 13, 20, 23, 26, 27, 29, 30, 32, 33, 37, 39, 40, 41, 42, 43, 48, 49], "functool": 43, "further": [25, 31, 39, 40, 43, 48, 52, 53], "g": [12, 23, 27, 28, 30, 43, 49], "gastol": 41, "gener": [12, 23, 27, 41, 48, 49, 50, 52, 55], "get": [1, 5, 27, 29, 36, 38, 43, 44, 46, 47, 51, 53], "get_cycle_column": [0, 1, 21], "get_data_dict": [1, 29], "get_dx": [2, 3, 5], "get_dy_and_count": [2, 3, 5], "get_imported_datafram": [13, 15, 17, 30], "get_ocv_curv": [1, 2, 9], "get_onli": [1, 27], "get_quant": [1, 27], "get_resist": [1, 2, 9, 35], "get_x_sect": [2, 3, 5], "getsiz": 36, "git": [34, 51], "github": [34, 51], "gitt": [38, 44], "give": [12, 37], "given": [7, 49, 55], "gj": 45, "go": [23, 30, 35, 37, 41, 42], "golai": 10, "good": [31, 42, 51], "grad": [2, 7], "gradient": [1, 2, 5, 7, 8, 10, 31, 37, 43, 48], "gradient_data": 31, "gradient_result": 31, "gradient_titl": 31, "graphit": 41, "graphite_lgm50_ocp_chen2020": 41, "green": 39, "gregori": [5, 8], "grid": [27, 42], "group": 27, "gt": [35, 36, 37, 39, 40, 42, 43, 44, 45], "guarante": [10, 34], "guess": [4, 7], "guid": [30, 34, 46, 48, 52], "guidanc": [49, 54], "h": [14, 28], "ha": [27, 31, 36, 37, 40, 41, 43, 45, 47, 49, 51], "half": [4, 7, 41], "han": [5, 8], "hand": 36, "handler": 22, "happen": 43, "have": [12, 21, 27, 30, 31, 36, 40, 41, 45, 47, 48, 49], "he": [5, 8, 37], "head": 30, "header": [12, 15, 16, 17, 18, 19, 30, 50], "header_row": 12, "header_row_index": [12, 13, 14, 15, 16, 17, 18, 19], "health": 6, "height": [23, 27], "hello": 51, "help": [27, 43, 56], "here": [31, 43], "hexbin": 27, "hi": 7, "high": [7, 41, 42, 45], "higher": 7, "highest": [4, 31], "highli": 55, "hint": 24, "hist": 27, "histogram": 27, "hold": [25, 27, 39, 40, 41, 45, 47, 55], "holoview": 27, "holoviz": 27, "home": 41, "hook": 34, "horizont": 27, "hour": [39, 40, 43, 45, 50, 55], "how": [7, 27, 43, 46, 52], "howev": [30, 35, 40, 43], "hr": [28, 35, 37, 42, 44], "html": [27, 41, 52], "http": [5, 8, 23, 27, 34, 37, 41, 43, 45], "huang": [5, 8], "human": 55, "hv": 27, "hvplot": [1, 23, 27, 38, 51, 53], "i": [5, 6, 7, 8, 9, 10, 12, 16, 17, 18, 19, 21, 22, 23, 25, 27, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 55, 56], "i64": 40, "ica": 37, "identifi": [15, 18, 19, 21, 36, 43, 49, 50, 55], "illustr": 36, "imperialcollegelondon": 34, "implement": [36, 48], "import": [12, 13, 15, 17, 21, 23, 27, 30, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55], "import_and_validate_data": [13, 14, 15, 16, 17, 18, 19], "import_pybamm_solut": [1, 12, 45], "importing_column": 21, "inch": 27, "includ": [8, 9, 12, 23, 27, 30, 31, 35, 42, 45, 47, 49, 50, 53, 55, 56], "include_bool": 27, "inclus": [21, 39, 55], "incorrect": 48, "incorrect_data_dict": 43, "incorrect_datafram": 43, "increas": [15, 17, 36, 50, 55], "increment": [36, 37], "index": [12, 14, 15, 16, 17, 18, 19, 27, 39, 47, 50, 52, 55], "indic": [7, 12, 14, 15, 16, 17, 18, 19, 21, 27, 30, 47], "individu": [35, 40, 47], "info": [1, 12, 21, 25, 27, 31, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 49, 52, 56], "info_dictionari": [35, 36, 37, 39, 40, 42, 43, 44, 49], "inform": [12, 14, 15, 18, 21, 23, 27, 28, 30, 31, 40, 41, 43, 49, 50, 55, 56], "inherit": [30, 32, 43], "initi": [4, 7, 35, 36, 39, 40, 45, 55], "initial_charg": 39, "initial_soc": 45, "initialis": 51, "inlin": [35, 36, 37, 39, 40, 41, 42, 44, 45], "inner": [21, 27, 55], "input": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 31, 32, 38, 41, 44, 52, 54], "input_data": [2, 6, 7, 8, 9, 10, 11, 25, 31, 35, 37, 40, 41, 43, 48], "input_data_list": 7, "input_data_path": [13, 14, 15, 16, 17, 18, 19, 30], "input_filenam": [12, 36, 40, 49], "input_name_gener": 49, "input_quant": 28, "input_typ": 43, "input_unit": 28, "input_valu": 43, "insid": [31, 34], "inspect": 53, "instal": [23, 27, 33, 35, 36, 37, 39, 40, 41, 42, 44, 45, 53, 54], "instanc": [11, 27, 28, 31, 35, 41, 43, 49, 55], "instead": [23, 27, 31, 36, 55], "instruct": [35, 39, 50, 51, 55], "int": [4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 36], "int64": 50, "integ": [5, 8, 10], "integr": [23, 27, 42, 45, 48, 53], "intens": 36, "interact": [27, 32, 40, 42, 53], "interfac": [29, 42, 47, 53], "intern": 48, "interpol": [7, 10, 21, 27, 49], "interpolation_method": 7, "interpret": [21, 49], "interv": [5, 8, 10], "introduct": [46, 54], "inventori": [4, 31, 41], "invis": 27, "io": 41, "ion": [41, 45], "iprogress": 41, "ipykernel": 34, "ipynb": 44, "ipywidget": [41, 45], "is_instance_of": 43, "isin": 36, "isn": 43, "item": [7, 27], "iter": 27, "ith": 7, "its": [27, 30, 31, 34, 36, 39, 49, 55], "j": [5, 8, 37, 45], "jin": [5, 8], "join": [1, 27], "journal": [41, 45], "jpowsour": 45, "json": 44, "jupyt": [34, 41, 51], "just": [8, 30, 55], "k": [5, 8, 28, 37, 41, 45], "kde": 27, "keep": [31, 56], "kei": [9, 12, 21, 27, 35, 40, 41, 49, 56], "kendrick": [41, 45], "kept": 23, "kernel": [27, 34], "keyword": [10, 27, 49, 55], "kind": 27, "kirkaldi": 45, "know": 43, "kwarg": [10, 23, 27, 29, 43], "kwd": 27, "label": [23, 27, 35, 36, 37, 39, 41, 45], "lam_n": [4, 7], "lam_p": [4, 7], "languag": [39, 47], "languang": [5, 8], "larg": [30, 36, 45], "last": [10, 21, 36, 37, 40, 43, 55], "later": 51, "latest": 43, "launch": [20, 40, 51], "launch_dashboard": [0, 1, 20, 40], "layout": [23, 27, 36], "laz": 43, "lazi": [32, 36], "lazyfram": [15, 16, 17, 18, 19, 21, 25, 27, 32, 40, 43], "lean": [8, 37], "lean_dqdv": 37, "learn": [27, 46], "least": 7, "left": [7, 27, 35], "legend": [23, 27, 35, 36], "len": 36, "length": [7, 10, 21, 36], "less": 47, "level": [8, 22, 42, 43, 48], "level_smooth": [2, 10], "levelnam": 22, "lg": 45, "lgm50": 45, "li": [5, 8, 41], "li_inventori": [4, 31], "liaw": [5, 8, 37], "lib": [41, 43], "librari": [27, 35, 36, 42], "life": 49, "light": [8, 53], "like": [27, 30, 31, 32, 39, 42, 43, 49, 50, 53], "limit": [7, 27, 41, 55], "line": [16, 23, 27, 40, 43, 50, 51, 55], "line_width": 27, "linear": [7, 10], "linear_interpol": [1, 2, 10], "lineplot": [23, 42], "linestyl": [36, 41], "link": 7, "link_result": 7, "linspac": 41, "linux": 51, "list": [5, 7, 8, 9, 11, 12, 15, 17, 20, 21, 23, 25, 26, 27, 29, 30, 35, 36, 39, 49, 51, 55, 56], "listdir": 44, "liter": [7, 10, 12, 27], "literatur": 45, "lithium": [4, 31, 41, 45], "lithium_ion": 45, "littl": 31, "liu": [5, 8], "live_datafram": [1, 27], "ll": 35, "lli": [4, 7], "lo": 7, "load": [12, 14, 15, 16, 17, 18, 19, 21, 25, 27, 30, 40, 45, 49], "load_arch": [0, 1, 12, 44], "load_external_fil": [1, 21], "loc": [35, 36], "local": [34, 40, 43, 52], "lock": 34, "log": [22, 27, 36], "log_fil": 22, "log_scal": 36, "logger": [0, 1, 40], "logi": 27, "loglog": 27, "logx": 27, "longest": 8, "look": [37, 42, 50, 53, 55], "loop": [6, 10, 39, 55], "lot": 42, "low": [7, 41], "lower": 35, "lowest": [4, 31], "lst": 29, "lt": [35, 36, 37, 39, 40, 42, 43, 44, 45], "lu": [5, 8], "lz4": 12, "m": [14, 18, 28, 34, 37, 45, 51], "m50": 45, "ma": [39, 40, 42, 45, 47, 55], "mac": 51, "maccor": [1, 12, 13, 50], "machin": 34, "made": 36, "mah": 40, "mai": [12, 30, 43, 48, 49], "main": [27, 32, 34, 39, 43, 49, 52], "maintain": 42, "make": [12, 27, 30, 34, 44, 46, 52, 54], "make_boxplot": 36, "make_cell_list": [0, 1, 12, 49], "make_colorscal": [1, 23], "manag": 51, "mani": 43, "manipul": [31, 32], "manner": 7, "manual": 36, "manufactur": 49, "map": [12, 14, 15, 16, 17, 18, 19], "marinescu": 45, "mark": [27, 50], "mark_right": 27, "marker": [27, 36], "match": [7, 28, 36, 49], "mathemat": 31, "matlab": 27, "matplotlib": [27, 35, 36, 37, 38, 39, 40, 41, 44, 45, 53], "matrix": 8, "max": 36, "maximum": [17, 21, 25], "mb": [17, 36], "mean": [32, 34, 39, 45, 49, 53], "measur": [36, 50], "measure_panda": 36, "measure_pyprob": 36, "mechan": 34, "median": [9, 36], "median_total_time_idx_panda": 36, "median_total_time_idx_pyprob": 36, "median_total_time_panda": 36, "median_total_time_pyprob": 36, "meet": 27, "mengchao": [5, 8], "menu": 51, "merla": [5, 8, 37], "messag": [22, 31], "met": 10, "metadata": [27, 44, 49, 52], "method": [2, 7, 8, 10, 12, 17, 21, 25, 27, 30, 31, 32, 34, 35, 36, 37, 40, 41, 42, 43, 44, 47, 48, 49, 51, 52, 53], "method_paramet": 48, "metric": 35, "middl": 10, "midpoint": 5, "might": [32, 50, 53], "min": 28, "minggao": [5, 8], "minim": [7, 41], "minimum": 10, "minut": [39, 40, 45, 55], "miss": [11, 27, 41, 43], "mode": [4, 7, 34, 41], "model": [6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 25, 27, 32, 38, 41, 43, 44, 49], "model_typ": 43, "model_valid": 43, "modif": 23, "modifi": [23, 25, 30], "modul": [0, 1, 2, 3, 13, 30, 32, 33, 38, 40, 46, 47, 48, 52], "modulo": [17, 49, 50], "modulobat": 30, "mon": 27, "monoton": [10, 17], "more": [10, 14, 15, 18, 23, 27, 31, 42, 43, 47, 49, 53], "most": [30, 32, 36, 40, 42, 43, 48, 55], "mpt": [49, 50], "much": [36, 42, 43], "multi": 41, "multipl": [5, 7, 8, 12, 27, 30, 32, 36, 37, 40, 42, 47, 54, 55, 56], "must": [7, 9, 10, 12, 21, 27, 35, 36, 40, 41, 49, 51, 53, 55], "n": [7, 17, 28, 30, 43, 45, 50, 51], "n_pt": 41, "n_repeat": 36, "name": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 25, 27, 28, 31, 34, 35, 36, 37, 39, 40, 42, 43, 44, 47, 49, 50, 53, 55, 56], "nativ": 42, "natur": [39, 47], "navig": 52, "ndarrai": [4, 5, 7, 10, 11, 23, 27, 31, 40, 43], "ndk": 45, "ne_capac": [4, 31], "neccessari": [31, 43], "necessari": [31, 41], "need": [30, 31, 36, 40, 42, 51, 56], "neg": [7, 18, 19, 41], "neg_ocp": 41, "nest": [21, 55], "net": [25, 40], "never": 43, "new": [9, 25, 27, 30, 36, 51], "new_column_definit": 25, "new_column_nam": 25, "new_data": 27, "newar": [1, 12, 13, 14, 18, 30, 35, 36, 37, 39, 40, 42, 43, 44, 49, 50, 55], "next": 7, "nmc": 41, "nmc622": [35, 36, 37, 39, 40, 42, 43, 44, 49], "nmc_lgm50_ocp_chen2020": 41, "nois": 37, "noisi": [8, 10], "nomin": [35, 36, 37, 39, 40, 42, 43, 44, 49], "non": 10, "none": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 29], "normal": [36, 40, 41, 42, 43, 49], "notat": 47, "note": [27, 30, 34, 42], "notebook": [34, 41, 51], "notebook_tqdm": 41, "notic": 43, "now": [27, 36, 37, 41], "np": [4, 5, 7, 10, 11, 23, 27, 31, 36, 41, 43], "null": 40, "number": [9, 12, 15, 17, 21, 25, 30, 31, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 55], "numer": [21, 27, 47], "numpi": [8, 27, 31, 36, 40, 41, 43, 47], "o": [36, 41, 44, 45], "object": [6, 7, 8, 9, 10, 12, 20, 21, 23, 25, 26, 27, 28, 31, 35, 37, 39, 40, 41, 42, 43, 44, 45, 48, 52, 53, 54], "occur": 43, "occurr": 10, "ocp": [1, 2, 4, 7, 41], "ocp_c1": 4, "ocp_c2": 4, "ocp_comp1": 7, "ocp_comp2": 7, "ocp_funct": 7, "ocp_list": 7, "ocp_n": [4, 7, 41], "ocp_p": [4, 7, 41], "ocp_vector": 7, "ocv": [4, 7, 9, 35, 37, 38, 44], "ocv_curve_fit": [2, 3, 4], "ocv_result": 41, "odd": 10, "offer": [5, 8, 37, 45], "often": 31, "ohm": [9, 28, 35], "omit": 43, "onc": [30, 34, 36, 40, 48, 49, 50, 52], "one": [27, 30, 36, 42, 43, 47, 55], "onli": [10, 27, 30, 31, 32, 35, 36, 42, 43, 45, 56], "onlin": 27, "onto": 34, "open": [4, 7, 39, 40, 41, 42, 45, 51, 52], "oper": [25, 48], "optim": [4, 7, 36, 41], "optimizer_opt": [7, 41], "option": [7, 8, 10, 12, 18, 19, 21, 23, 25, 26, 27, 36, 42, 51, 53], "optional_vari": 12, "order": [7, 10, 49, 51], "oregan2022": 45, "org": [5, 8, 23, 27, 37, 41, 45], "origin": [23, 36, 40, 53], "other": [12, 23, 25, 27, 40, 43, 48], "otherwis": [10, 27], "our": [35, 36, 41], "out": [35, 39, 55], "outer": [21, 55], "output": [41, 49], "output_data_path": 12, "output_filenam": [12, 36, 40, 49], "output_name_gener": 49, "outsid": 40, "ouyang": [5, 8, 37], "overal": 36, "overhead": 36, "overlai": 27, "overrid": 30, "overridden": 23, "overwrite_exist": [12, 36], "overwritten": 12, "own": [30, 34, 39, 40, 49, 55], "p": [18, 28], "packag": [0, 22, 23, 31, 34, 37, 41, 43, 51, 53], "pair": 49, "panda": [23, 27, 36, 38, 53], "pandas_tim": 36, "pandas_voltag": 36, "paper": [5, 8], "parallel": 7, "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 35, 45], "parameter": 41, "parameter_valu": 45, "parameteris": 45, "parametervalu": 45, "parametr": 49, "parquet": [12, 21, 35, 36, 37, 39, 40, 42, 43, 44, 45, 49], "pars": [30, 45], "part": [40, 48, 55], "particular": [7, 43, 52], "particularli": [42, 55], "pass": [23, 25, 27, 31, 32, 40, 42, 45, 47, 48, 50, 53], "patch_artist": 36, "patel": [5, 8, 45], "path": [12, 14, 15, 16, 17, 18, 19, 21, 26, 34, 36, 44, 49], "pattern": [28, 49], "pchip": [7, 10], "pchip_interpol": [1, 2, 10], "pd": [27, 36], "pe_capac": [4, 31], "peng": [5, 8], "per": 27, "perform": [12, 21, 23, 27, 30, 31, 32, 38, 43, 44, 48, 49], "performexactli": 27, "performwhen": 27, "period": 36, "perman": 25, "pie": 27, "pii": [5, 8], "ping": [5, 8], "pip": [23, 27, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 51, 53], "pl": [15, 16, 17, 18, 19, 21, 25, 27, 28, 31, 36, 41, 43], "place": [27, 51], "planar": 27, "planella": [41, 45], "pleas": [27, 41], "plot": [0, 1, 27, 32, 35, 36, 37, 38, 39, 40, 41, 44, 45, 48, 52, 54, 56], "plotli": [23, 27], "plt": [35, 36, 37, 39, 41, 42, 45], "pocv": 45, "point": [8, 9, 10, 23, 31, 35, 40, 41], "polar": [15, 18, 19, 21, 25, 27, 33, 36, 41, 43, 47, 50], "polarscolumncach": [0, 1, 27], "polynomi": 10, "polyord": 10, "poor": 37, "popul": 49, "popular": [36, 37, 42, 45, 51, 53], "portabl": 31, "pos_ocp": 41, "posit": [7, 10, 18, 19, 27, 41], "possibl": [12, 31, 34, 47], "potenti": [4, 7], "power": [23, 39, 45, 53], "ppoli": 7, "pprint": [40, 44], "pre": 34, "preced": 27, "prefix": 28, "prefix_dict": [1, 28], "prepar": 40, "preprocess": [20, 54], "presenc": 25, "present": [11, 14, 15, 18, 25, 30, 42, 43], "prevent": 43, "previou": [7, 17, 39, 55], "previous": [10, 49], "principl": 32, "print": [27, 32, 35, 36, 37, 39, 40, 41, 43, 45, 49], "print_definit": [1, 27], "prior": [34, 37], "prioriti": [12, 36], "prioritis": 36, "problem": 43, "procedur": [0, 1, 6, 7, 8, 9, 10, 11, 12, 21, 23, 24, 35, 36, 37, 39, 40, 42, 43, 44, 45, 47, 49, 50, 52, 53, 55], "procedure_nam": [12, 35, 36, 37, 39, 40, 42, 43, 44, 45, 49], "process": [14, 15, 16, 17, 18, 19, 26, 30, 31, 36, 44, 47, 49, 50, 51, 52], "process_cycler_fil": [1, 12, 36, 40, 49], "process_generic_fil": [1, 12], "process_readm": [0, 1, 26], "processed_cycler_fil": 49, "processed_cycler_file_": 49, "processed_cycler_file_cycl": 49, "processed_cycler_file_rpt": 49, "produc": [12, 27, 41, 52], "program": 50, "prompt": 51, "properti": [7, 11, 15, 18, 19, 21, 23, 25, 27, 30, 40, 45], "protocol": [29, 49], "provid": [7, 8, 9, 12, 21, 25, 27, 31, 32, 35, 38, 39, 40, 42, 44, 45, 48, 49, 50, 55], "pseudo": 37, "puls": [1, 2, 35, 39, 40, 55], "pulse_numb": 9, "pulse_object": 35, "pulse_resist": 35, "pulse_rest": [2, 9], "pulse_summari": [2, 9], "pulsing_experi": 35, "purpl": 39, "purpos": 55, "put": 41, "py": [40, 41, 43], "pybamm": [12, 25, 26, 29, 38, 39, 44, 55], "pybamm_experi": [1, 25, 45], "pybamm_solut": 12, "pybammsolut": [0, 1, 29], "pydant": [6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 25, 27, 30, 31, 33, 43], "pydantic_cor": 43, "pydata": 23, "pyplot": [35, 36, 37, 39, 41, 42, 45], "pyprb": 26, "pyprob": [30, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 51, 53, 54, 56], "pyprobe_datafram": [13, 15], "pyprobe_tim": 36, "pyprobe_typ": [0, 1], "pyprobe_voltag": 36, "pyprobedatatyp": [0, 1, 24, 31], "pyproberawdatatyp": [0, 1, 24], "pytest": 43, "python": [34, 39, 42, 47, 51, 53], "python3": [41, 43], "q": [17, 30, 50], "quantifi": 7, "quantify_degradation_mod": [1, 2, 7], "quantiti": [1, 27, 28, 43], "queri": 36, "quick": 40, "quick_add_procedur": [1, 12, 40, 49], "quick_plot": 45, "quickli": [12, 39, 40, 49], "quickplot": 45, "r": [5, 8, 39, 40, 42, 45], "r0": [9, 35], "r_10": 35, "r_time": [9, 35], "rais": [5, 11, 25, 27, 40], "rang": [21, 23, 36, 41], "rate": 8, "raw": [24, 37, 40], "raw_data_dvdq": 37, "rawdata": [0, 1, 7, 8, 9, 10, 11, 21, 24, 32, 38, 45, 50, 54], "re": [30, 36, 37, 43], "reactiv": 27, "read": [12, 15, 16, 17, 18, 19, 30, 31, 36, 39, 45, 48], "read_csv": 36, "read_fil": [13, 15, 16, 17, 18, 19, 30], "read_parquet": 36, "readabl": [31, 55], "reader": 49, "readm": [12, 21, 25, 26, 39, 40, 45, 47, 49, 50, 54], "readme_dict": [1, 21, 26, 40], "readme_nam": 12, "readme_path": 26, "readme_processor": [0, 1], "readmemodel": [0, 1, 26], "readthedoc": 41, "real": 55, "reason": 35, "recent": [40, 43], "recogn": 30, "recommend": [31, 34, 51, 55], "record": [12, 49, 54], "record_filepath": [12, 49], "red": [35, 36, 39, 41], "reduc": 30, "refer": [5, 8, 25, 27, 35, 49, 53], "referenc": 25, "reference_capac": 25, "reference_charg": [25, 35], "reflect": [12, 34], "regan": [41, 45], "regular": 28, "regular_express": 28, "rel": [25, 27, 50], "relat": [30, 56], "releas": 52, "relev": 27, "reliabl": [5, 8, 34, 37], "remain": [7, 25, 27, 31], "remov": [18, 19, 21, 27, 36, 37], "remove_experi": [1, 21], "ren": [5, 8], "renam": 21, "rep_csv_time_panda": 36, "rep_median_total_time_idx_panda": 36, "rep_median_total_time_idx_pyprob": 36, "rep_median_total_time_panda": 36, "rep_median_total_time_pyprob": 36, "rep_pandas_tim": 36, "rep_pandas_voltag": 36, "rep_pyprobe_tim": 36, "rep_pyprobe_voltag": 36, "rep_total_time_panda": 36, "rep_total_time_pyprob": 36, "repeat": [36, 50, 55], "repeated_data": 36, "replac": [31, 36], "repositori": [31, 34, 51, 52], "repres": [5, 9, 21], "request": [27, 32, 36, 43], "requir": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 27, 29, 30, 31, 35, 36, 40, 43, 44, 48, 49, 50, 56], "required_column": [2, 11, 31, 43], "required_typ": [31, 43], "resampl": 10, "reset": 47, "resist": [9, 28, 35], "respect": [7, 8, 10, 31], "rest": [1, 9, 21, 31, 39, 40, 45, 47, 55], "rest_0": 39, "rest_1": 39, "rest_numb": [9, 21], "restart": 41, "result": [0, 1, 6, 7, 8, 9, 10, 11, 12, 23, 24, 25, 31, 32, 34, 35, 36, 37, 40, 41, 42, 43, 47, 48, 52, 53], "retriev": [7, 30, 31, 36, 39, 43, 44, 47], "return": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 36, 40, 41, 43, 47, 48, 49, 51], "revers": 27, "rich": 41, "rig": [12, 45], "right": [27, 36], "rmtree": 44, "root_fold": 49, "rot": 27, "rotat": 27, "row": [12, 15, 16, 17, 18, 19, 27], "rpt": [45, 49], "rpt0_short_ca4": 45, "rst": 44, "ruih": [5, 8], "run": [7, 12, 23, 27, 34, 36, 40, 41, 45, 49, 51, 52, 56], "run_batch_dma_parallel": [1, 2, 7], "run_batch_dma_sequenti": [1, 2, 7], "run_ocv_curve_fit": [1, 2, 7, 41], "runner": 41, "s2590116820300084": [5, 8], "safe": 34, "safe_load": 40, "sai": 43, "same": [7, 10, 12, 25, 27, 30, 36, 40, 49, 55], "samieian": 45, "sampl": [5, 8, 10, 23, 35, 36, 37, 39, 40, 42, 43, 44, 49], "sample_arch": 44, "sample_data": [35, 36, 37, 39, 40, 42, 43, 44, 45], "sample_data_newar": [35, 36, 37, 39, 40, 42, 43, 44], "sample_data_neware_rep": 36, "sample_data_neware_test": 36, "sampling_interv": [10, 37], "santhanagopalan": [5, 8], "sat": 27, "save": [36, 49], "saved_cel": 44, "savgol_smooth": [1, 2, 10], "savitzki": 10, "scalabl": 36, "scale": [23, 27, 41], "scatter": 27, "scatterplot": 53, "scene": [32, 43], "scienc": [5, 8], "sciencedirect": [5, 8], "scipi": 10, "script": [20, 51], "seaborn": [0, 1, 23, 38, 53], "seabornwrapp": 23, "sec": [18, 50], "second": [7, 9, 27, 28, 36, 39, 40, 41, 45, 49, 55], "secondari": [23, 27], "secondary_i": [23, 27], "section": [5, 8, 39, 45, 48, 49, 50, 52, 55], "see": [14, 15, 18, 23, 27, 41, 43, 46, 48, 49], "seed": 34, "select": [10, 27, 34, 36, 39, 48, 51], "self": [40, 43], "self_inst": 43, "separ": [27, 35, 39, 55], "seper": [23, 27, 39, 42, 55], "sequenc": 27, "sequenti": 7, "seri": [27, 49], "serial": 55, "seriesgroupbi": 27, "server": 41, "session": 27, "set": [23, 25, 27, 30, 32, 34, 36, 41, 43], "set_reference_capac": [1, 25], "set_soc": [1, 25, 35], "set_titl": 36, "set_vis": 36, "set_ylabel": [35, 36, 37, 39, 41], "set_yscal": 36, "setup": 56, "shape": [35, 36, 40, 41, 43], "share": [27, 38], "sharei": [27, 36], "sharex": 27, "shift": 36, "short_nam": 29, "shortcut": 54, "should": [25, 27, 30, 31, 43, 49, 51, 55], "show": [1, 23, 27, 36, 39, 42], "showflier": 36, "showlegend": 23, "shriram": [5, 8], "shutil": 44, "si": 28, "sim": 45, "similar": [27, 42, 53], "similarli": [27, 42], "simpl": [31, 44, 47, 48, 49, 53], "simplest": 30, "simpli": [3, 30, 31, 47], "simplifi": 31, "simul": 45, "sinc": [40, 41], "singl": [7, 12, 15, 18, 19, 27, 29, 34, 44, 49, 50, 55], "sit": 40, "site": [41, 43], "size": [5, 8, 10, 12, 23, 27, 36, 42], "skip": [12, 34, 39, 55], "slice": 5, "smooth": [1, 2, 5, 8, 31, 37, 43], "smooth_gradi": [2, 3, 5], "smoothing_filt": 8, "smoothing_lambda": [10, 37], "sn": [23, 42, 53], "so": [17, 25, 32, 34, 36, 37, 39, 40, 43, 47, 49, 55], "soc": [4, 7, 9, 25, 31, 35, 41], "societi": 41, "softwar": [45, 51], "soh": [4, 6, 7, 40], "solid": 23, "solut": [12, 29, 45], "solv": 45, "some": [27, 30, 39, 40, 43, 44, 45, 49, 55], "someth": 49, "sometim": [30, 42], "soon": 40, "sourc": [21, 30, 34, 45, 49, 51], "space": [5, 8], "special": 47, "specif": [25, 27, 30, 43, 48, 52], "specifi": [10, 25, 27, 31, 40, 42, 43, 47], "speed": [36, 49], "spline": [10, 37], "spline_smooth": [1, 2, 10, 37], "spline_smoothed_data": 37, "spline_smoothed_data_dvdq": 37, "split": [5, 28, 39], "split_quantity_unit": [0, 1, 28], "stabl": 41, "stack": 27, "stacklevel": 43, "standard": [25, 30, 31, 38, 43, 49, 50], "start": [21, 30, 38, 39, 42, 43, 44, 45, 50, 51, 53, 55], "start_tim": 36, "state": [6, 35, 37], "static": [7, 15, 16, 17, 18, 19, 23, 27], "statist": 9, "steelblu": 27, "step": [0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 30, 31, 34, 36, 39, 40, 41, 43, 45, 47, 49, 50, 51, 55], "step_descript": [1, 21, 25, 40], "step_incr": 36, "step_numb": 21, "step_rep": 36, "steps_idx": 40, "still": [39, 40], "sto": 41, "stoichiometri": [4, 7, 31, 41], "stoichiometry_comp1": 7, "stoichiometry_comp2": 7, "stoichiometry_limit": 41, "stoichiometry_limits_list": 7, "storag": 32, "store": [27, 28, 31, 34, 39, 43, 44, 49, 50, 52, 55], "str": [4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 36], "straightforward": 44, "streamlit": [20, 51], "strength": 39, "strict": [31, 43], "stricter": 25, "string": [12, 14, 15, 18, 25, 27, 28, 30, 39, 43, 45, 47, 49, 55], "structur": [54, 55], "studi": 27, "studio": 51, "style": [23, 27, 37], "subclass": 25, "subject": 27, "submodul": [0, 31], "subpackag": 0, "subplot": [27, 35, 36, 37, 39, 41, 42, 45], "subsequ": 21, "summari": [1, 2, 6, 9, 35, 40], "summaris": [9, 50, 52], "sun": 27, "support": [21, 43, 49, 51, 54], "sym": 27, "symlog": 27, "sympi": [7, 41], "sympy_express": 7, "sync": 34, "syntax": 55, "synthet": 41, "system": 34, "t": [27, 35, 36, 43], "t1": [16, 19, 50], "tabl": [27, 50], "take": [10, 18, 27, 35], "taken": [10, 50], "tanh": 41, "target": [4, 7, 10], "target_column": [10, 37], "teal": 27, "techniqu": 41, "tell": 43, "temp": [18, 50], "temperatur": [13, 14, 15, 16, 17, 18, 19, 28, 30, 40, 43, 45, 50], "templat": 23, "tempt": 31, "termin": [40, 51], "test": [12, 14, 18, 27, 35, 36, 37, 39, 40, 42, 43, 44, 45, 49, 50, 55], "test_csv": 36, "testabl": 31, "text": [35, 37, 39, 41], "than": [25, 36, 43, 47], "thei": [12, 17, 27, 31, 40, 42, 43, 49, 51], "them": [21, 27, 30, 39, 41, 42, 46, 48, 49], "therefor": [43, 47, 55], "thermal": 45, "thi": [7, 8, 10, 12, 17, 18, 19, 21, 23, 25, 27, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55], "third": 39, "three": 39, "through": [10, 30, 32, 40, 42], "throughout": [32, 49], "throughput": 40, "thu": 27, "tick": 27, "tick_label": 36, "tickfont": 23, "tight_layout": [36, 42], "time": [9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 25, 27, 28, 30, 35, 36, 37, 39, 40, 42, 43, 44, 45, 49, 50, 53, 55], "time_column": 10, "time_incr": 36, "time_rep": 36, "time_unit_dict": [1, 28], "timeit": 36, "timeseri": 49, "timestamp": [21, 40, 50], "titl": [23, 26, 27, 39, 55], "title_font_s": [1, 23], "to_default_unit": [1, 28], "togeth": 32, "too": [40, 55], "tool": [34, 43, 53], "top": [27, 42, 43], "total": [19, 36, 55], "total_time_panda": 36, "total_time_pyprob": 36, "tqdm": 41, "tqdmwarn": 41, "traceback": [40, 43], "track": 56, "transpos": 27, "treat": 55, "true": [6, 10, 12, 23, 27, 29, 36, 42, 43], "try": 43, "tue": 27, "tupl": [4, 5, 7, 11, 21, 25, 26, 27, 28, 31], "twice": 50, "twinx": 42, "two": [7, 10, 27, 34, 36, 39, 41, 42, 43, 49, 55], "txt": 50, "type": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 40, 43, 47, 48], "u": [16, 41, 50], "u32": 35, "u_eq": 41, "uncom": 40, "uncompress": [12, 36], "under": [30, 49], "undergo": 49, "undergon": 49, "underli": [31, 43], "underpin": 31, "unexpect": 43, "unifomli": 8, "uniformli": 5, "union": 27, "uniqu": [36, 50], "unique_cycl": 36, "unique_ev": 36, "unit": [0, 1, 12, 14, 15, 16, 17, 18, 19, 27, 30, 40, 42, 47, 50], "unit_dict": [1, 28], "unit_from_regexp": [0, 1, 28], "unset": 30, "until": [35, 36, 39, 40, 45, 55], "up": [30, 32, 36, 44, 46, 49], "updat": 41, "update_wrapper_attribut": 43, "upon": 25, "upper": 36, "url": [5, 8], "us": [4, 7, 8, 10, 12, 21, 23, 25, 27, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56], "use_index": 27, "user": [23, 25, 31, 32, 34, 35, 37, 46, 47, 52, 56], "user_guid": 27, "user_instal": 41, "usual": [34, 42, 49], "util": [0, 1, 2, 40, 41], "uv": 34, "v": [9, 12, 25, 28, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 53, 55], "valid": [11, 14, 15, 16, 17, 18, 19, 21, 25, 27, 31, 32, 38, 44, 48], "validate_cal": [31, 32], "validate_python": 43, "validate_required_column": [2, 11], "validatecallwrapp": 43, "validated_self": 43, "validationerror": 43, "valu": [5, 12, 21, 25, 27, 35, 36, 43, 49, 50, 55], "value_error": 43, "valueerror": [5, 11, 25, 27, 40], "variabl": [2, 8, 10, 11, 12, 21, 29, 30, 31, 43], "variant": [43, 47], "vector": [5, 7, 41], "venv": [34, 41, 43, 51], "veri": [30, 53], "verifi": 43, "version": [23, 27, 42, 51], "versu": 27, "vert": 36, "vertic": 27, "via": 43, "view": [40, 49, 53], "viridi": 23, "virtual": [34, 51], "visit": 43, "visual": [51, 53], "visualis": 53, "volt": 50, "voltag": [9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 28, 30, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 53], "vscode": [34, 51, 55], "wa": [49, 50], "wai": [25, 31, 34, 39, 40, 49, 51], "wang": [5, 8], "want": [21, 49], "warn": 43, "wd": [41, 45], "we": [31, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45], "web": 52, "wed": 27, "week": 36, "well": [45, 56], "weng": [5, 8, 37], "were": [43, 50], "when": [10, 12, 18, 19, 25, 27, 30, 31, 32, 35, 36, 40, 43, 47, 48, 49, 50, 55, 56], "whenev": 43, "where": [7, 9, 23, 30, 36, 49, 50, 55], "wherea": 36, "whether": [6, 7, 10, 23, 27], "which": [8, 9, 25, 27, 30, 31, 32, 34, 35, 37, 39, 42, 43, 45, 48, 51, 52, 53, 55, 56], "while": [10, 30, 31, 34, 42], "who": 47, "whole": 27, "why": 55, "widanag": [41, 45], "wide": 34, "widget": 27, "width": [23, 27], "wildcard": 49, "window": [10, 51], "window_length": 10, "wish": 34, "with_column": 36, "within": [9, 10, 30, 34, 40, 48, 55], "without": [27, 49, 51], "work": [23, 30, 31, 32, 35, 38, 40, 41, 42, 43, 44, 51, 54], "workflow": 49, "worksheet": 12, "worksheet_nam": [12, 49], "would": [27, 42, 43], "wrap": [23, 43], "wrapper": [8, 27, 31, 43, 53], "wrapper_funct": 43, "write": [12, 22, 31, 36, 49, 51, 54], "write_parquet": 36, "written": [22, 43, 55], "www": [5, 8], "x": [5, 8, 10, 23, 27, 31, 35, 37, 39, 40, 41, 42, 43, 44, 48, 53], "x0": [7, 41], "x_c1": 4, "x_c2": 4, "x_data": [31, 43], "x_guess": 4, "x_ne": [4, 41], "x_ne_hi": [4, 7, 31, 41], "x_ne_lo": [4, 7, 31, 41], "x_pe": [4, 41], "x_pe_hi": [4, 7, 31, 41], "x_pe_lo": [4, 7, 31, 41], "x_rang": [1, 23], "xaxi": 23, "xerr": 27, "xiangm": [5, 8], "xlabel": [27, 36, 37, 39, 40, 41, 42, 44, 45], "xlim": 27, "xlsx": [12, 36, 40, 49, 50], "xtick": [27, 36], "xueb": [5, 8], "xuemin": [5, 8], "xune": [5, 8], "y": [5, 8, 10, 14, 18, 23, 27, 31, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 48, 53], "y2_rang": [1, 23], "y_data": [31, 43], "y_rang": [1, 23], "y_sampling_interv": [2, 3, 5], "yaml": [12, 21, 26, 39, 40, 45, 47, 49, 54], "yan": [5, 8], "yann": [5, 8], "yatish": [5, 8], "yaxi": [23, 36], "ye": 50, "year": 36, "yerr": 27, "yi": [5, 8], "ylabel": [27, 36, 41, 42], "ylim": 27, "you": [12, 21, 23, 27, 30, 31, 34, 36, 37, 40, 41, 42, 43, 44, 47, 48, 49, 51, 52, 53, 55], "your": [30, 31, 32, 34, 40, 41, 48, 49, 51, 52, 53, 55], "yscale": 36, "ytick": [27, 36], "yu": [5, 8], "z": 41, "z_ne_hi": 4, "z_ne_lo": 4, "z_pe_hi": 4, "z_pe_lo": 4, "zero": [25, 30, 36, 39, 43, 47], "zero_column": [1, 25], "zhao": [5, 8], "zip": [12, 44], "zstd": 12, "\u00b5": 28, "\u03bc": 40}, "titles": ["pyprobe", "pyprobe package", "pyprobe.analysis package", "pyprobe.analysis.base package", "pyprobe.analysis.base.degradation_mode_analysis_functions module", "pyprobe.analysis.base.differentiation_functions module", "pyprobe.analysis.cycling module", "pyprobe.analysis.degradation_mode_analysis module", "pyprobe.analysis.differentiation module", "pyprobe.analysis.pulsing module", "pyprobe.analysis.smoothing module", "pyprobe.analysis.utils module", "pyprobe.cell module", "pyprobe.cyclers package", "pyprobe.cyclers.arbin module", "pyprobe.cyclers.basecycler module", "pyprobe.cyclers.basytec module", "pyprobe.cyclers.biologic module", "pyprobe.cyclers.maccor module", "pyprobe.cyclers.neware module", "pyprobe.dashboard module", "pyprobe.filters module", "pyprobe.logger module", "pyprobe.plot module", "pyprobe.pyprobe_types module", "pyprobe.rawdata module", "pyprobe.readme_processor module", "pyprobe.result module", "pyprobe.units module", "pyprobe.utils module", "Adding a Cycler", "Contributing to the Analysis Module", "Dependency Guide", "Developer Guide", "Installation", "Analysing GITT data", "Comparing PyProBE Performance", "Differentiating voltage data", "Examples", "Filtering data", "Getting started with PyProBE", "OCV Fitting", "Plotting", "Providing Valid Inputs", "Sharing Data", "Working with PyBaMM Models", "PyProBE documentation", "Accessing Data", "Analysis", "Importing Data", "Input Data Guidance", "Installation", "Introduction", "Plotting", "User Guide", "Writing a README file", "Writing an Experiment record"], "titleterms": {"The": 55, "access": 47, "ad": [30, 49], "an": 56, "analys": 35, "analysi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 31, 43, 48], "arbin": 14, "base": [3, 4, 5, 31], "basecycl": 15, "basytec": 16, "batch": 49, "biolog": 17, "cell": [12, 49], "column": 50, "compar": 36, "contribut": 31, "convert": [40, 49], "cycl": 6, "cycler": [13, 14, 15, 16, 17, 18, 19, 30, 49, 50], "dashboard": 20, "data": [35, 37, 39, 40, 44, 47, 49, 50], "degradation_mode_analysi": 7, "degradation_mode_analysis_funct": 4, "depend": 32, "develop": 33, "differenti": [8, 37], "differentiation_funct": 5, "document": [46, 52], "exampl": 38, "experi": 56, "file": [49, 55], "filter": [21, 39, 47], "fit": 41, "format": [40, 49, 50, 55], "from": 49, "function": 31, "get": 40, "gitt": 35, "guid": [32, 33, 54], "guidanc": 50, "hvplot": 42, "import": 49, "input": [43, 49, 50], "instal": [34, 51], "introduct": 52, "logger": 22, "maccor": 18, "make": 49, "matplotlib": 42, "model": 45, "modul": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 43], "multipl": 49, "newar": 19, "object": [47, 49], "ocv": 41, "packag": [1, 2, 3, 13], "panda": 42, "perform": 36, "plot": [23, 42, 53], "polar": 32, "preprocess": 49, "provid": 43, "puls": 9, "pybamm": 45, "pydant": 32, "pyprob": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 40, 46, 49, 50, 52, 55], "pyprobe_typ": 24, "rawdata": [25, 43, 47], "readm": 55, "readme_processor": 26, "record": 56, "result": 27, "seaborn": 42, "share": 44, "shortcut": 55, "smooth": 10, "standard": 40, "start": 40, "structur": 52, "submodul": [1, 2, 3, 13], "subpackag": [1, 2], "support": 50, "thi": 52, "unit": 28, "user": 54, "util": [11, 29], "valid": 43, "voltag": 37, "work": [45, 49], "write": [55, 56], "yaml": 55}})